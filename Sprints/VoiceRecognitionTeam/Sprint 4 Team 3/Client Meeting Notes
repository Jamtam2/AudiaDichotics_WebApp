Add modal for calibration 
Toggle for speech to text then modal dropdown for calibration

Screenshot page and add to Figma

More frequent client communication and break down tasks more 

Matt:
* Buttons 

Isaac: 
* Modal 

Kelsey:
* Assembly

Tommy:
* Calibration

Frontend:
* Toggle
* Buttons
* Modal

Backend:
* Assembly
* Calibration

The calibration button is already on the navbar and pops up, it just doesn't have any calibration functionality to it. 


I've attached a calibration skeleton for the application.html.erb file, paste this file in and overwrite your current. Here's the file path: 
app/views/layouts/application.html.erb. 

Also, copy over the audio we're going to be using for calibration into:
app/assets/audio/

@Ruleisaac I'm not sure what the figma you guys made looked like, 
but since the calibration has a skeleton; 
you can start on designing it and making it look good; 
i've attached a picture of what the base looks like right now. 
You can work on styling the calibration for now. 

@Tommy Tren Currently, waiting for Deborah to come back from vacation to know what 
decibel value she needs the audio to be normalized to. 
While we wait on that; you can work on a simple functionality issue in the calibration right now. 
A pop-up appears after you click the "I've adjusted the volume" button, 
but the calibration does not close after the button is clicked. 
You can work on having the calibration close after the button is clicked. 
After you finish that, try to remove the option for being able to adjust the mp3's volume; 
we want it to be constant for the whole site, based on the system volume. 
I will let you know as soon as Deborah is back. 

--------------------------------------
AI TEAM 
@rayman @TheKelso Assembly ai allows us to transcribe 100 hours of audio for free before we have to switch over to the paid version, s
o we should be fine to use the free version until further notice. I'm unsure of how far you guys have gotten so far, 
but if you need a good place to start; I'd recommend: 

@TheKelso: focus on getting a testing page set up that allows you to speak into a mic, 
and see the output of the speech to text model (doesn't have to look good, or fill in the buttons yet; 
it can just be words at the bottom for now). Read words from the tests into the mic, see if the model is mostly accurate.

@rayman:  Since this feature requires a bit more collaboration with the back-end, 
you're gonna have to work closely with kelso. when you guys gets the model imported into a testing page; 
you can start making the design look good; i.e creating a button that that will activate the model and mic. 
