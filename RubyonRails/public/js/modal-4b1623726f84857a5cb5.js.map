{"version":3,"file":"js/modal-4b1623726f84857a5cb5.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/modal.js","webpack:///./node_modules/jquery/dist/jquery.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {***REMOVED***;\n\n \t// The require function\n \tfunction __webpack_require__(moduleId***REMOVED*** {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]***REMOVED*** {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t***REMOVED***\n \t\t// Create a new module (and put it into the cache***REMOVED***\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {***REMOVED***\n \t\t***REMOVED***;\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__***REMOVED***;\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t***REMOVED***\n\n\n \t// expose the modules object (__webpack_modules__***REMOVED***\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter***REMOVED*** {\n \t\tif(!__webpack_require__.o(exports, name***REMOVED******REMOVED*** {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter ***REMOVED******REMOVED***;\n \t\t***REMOVED***\n \t***REMOVED***;\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports***REMOVED*** {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag***REMOVED*** {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' ***REMOVED******REMOVED***;\n \t\t***REMOVED***\n \t\tObject.defineProperty(exports, '__esModule', { value: true ***REMOVED******REMOVED***;\n \t***REMOVED***;\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode***REMOVED*** {\n \t\tif(mode & 1***REMOVED*** value = __webpack_require__(value***REMOVED***;\n \t\tif(mode & 8***REMOVED*** return value;\n \t\tif((mode & 4***REMOVED*** && typeof value === 'object' && value && value.__esModule***REMOVED*** return value;\n \t\tvar ns = Object.create(null***REMOVED***;\n \t\t__webpack_require__.r(ns***REMOVED***;\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value ***REMOVED******REMOVED***;\n \t\tif(mode & 2 && typeof value != 'string'***REMOVED*** for(var key in value***REMOVED*** __webpack_require__.d(ns, key, function(key***REMOVED*** { return value[key]; ***REMOVED***.bind(null, key***REMOVED******REMOVED***;\n \t\treturn ns;\n \t***REMOVED***;\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module***REMOVED*** {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault(***REMOVED*** { return module['default']; ***REMOVED*** :\n \t\t\tfunction getModuleExports(***REMOVED*** { return module; ***REMOVED***;\n \t\t__webpack_require__.d(getter, 'a', getter***REMOVED***;\n \t\treturn getter;\n \t***REMOVED***;\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property***REMOVED*** { return Object.prototype.hasOwnProperty.call(object, property***REMOVED***; ***REMOVED***;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/modal.js\"***REMOVED***;\n","$('#myModal'***REMOVED***.on('hide.bs.modal', function (***REMOVED*** { //Change #myModal with your modal id\n    $('audio'***REMOVED***.each(function(***REMOVED***{\n      this.pause(***REMOVED***; // Stop playing\n      this.currentTime = 0; // Reset time\n    ***REMOVED******REMOVED***; \n***REMOVED******REMOVED***","/*!\n * jQuery JavaScript Library v3.5.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2020-05-04T22:49Z\n */\n(function (global, factory***REMOVED*** {\n  \"use strict\";\n\n  if (typeof module === \"object\" && typeof module.exports === \"object\"***REMOVED*** {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get jQuery.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js***REMOVED***, expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    // e.g. var jQuery = require(\"jquery\"***REMOVED***(window***REMOVED***;\n    // See ticket #14549 for more info.\n    module.exports = global.document ? factory(global, true***REMOVED*** : function (w***REMOVED*** {\n      if (!w.document***REMOVED*** {\n        throw new Error(\"jQuery requires a window with a document\"***REMOVED***;\n      ***REMOVED***\n      return factory(w***REMOVED***;\n    ***REMOVED***;\n  ***REMOVED*** else {\n    factory(global***REMOVED***;\n  ***REMOVED***\n\n  // Pass this if window is not defined yet\n***REMOVED******REMOVED***(typeof window !== \"undefined\" ? window : this, function (window, noGlobal***REMOVED*** {\n  // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n  // throw exceptions when non-strict code (e.g., ASP.NET 4.5***REMOVED*** accesses strict mode\n  // arguments.callee.caller (trac-13335***REMOVED***. But as of jQuery 3.0 (2016***REMOVED***, strict mode should be common\n  // enough that all such attempts are guarded in a try block.\n  \"use strict\";\n\n  var arr = [];\n  var getProto = Object.getPrototypeOf;\n  var slice = arr.slice;\n  var flat = arr.flat ? function (array***REMOVED*** {\n    return arr.flat.call(array***REMOVED***;\n  ***REMOVED*** : function (array***REMOVED*** {\n    return arr.concat.apply([], array***REMOVED***;\n  ***REMOVED***;\n  var push = arr.push;\n  var indexOf = arr.indexOf;\n  var class2type = {***REMOVED***;\n  var toString = class2type.toString;\n  var hasOwn = class2type.hasOwnProperty;\n  var fnToString = hasOwn.toString;\n  var ObjectFunctionString = fnToString.call(Object***REMOVED***;\n  var support = {***REMOVED***;\n  var isFunction = function isFunction(obj***REMOVED*** {\n    // Support: Chrome <=57, Firefox <=52\n    // In some browsers, typeof returns \"function\" for HTML <object> elements\n    // (i.e., `typeof document.createElement( \"object\" ***REMOVED*** === \"function\"`***REMOVED***.\n    // We don't want to classify *any* DOM node as a function.\n    return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  ***REMOVED***;\n  var isWindow = function isWindow(obj***REMOVED*** {\n    return obj != null && obj === obj.window;\n  ***REMOVED***;\n  var document = window.document;\n  var preservedScriptAttributes = {\n    type: true,\n    src: true,\n    nonce: true,\n    noModule: true\n  ***REMOVED***;\n  function DOMEval(code, node, doc***REMOVED*** {\n    doc = doc || document;\n    var i,\n      val,\n      script = doc.createElement(\"script\"***REMOVED***;\n    script.text = code;\n    if (node***REMOVED*** {\n      for (i in preservedScriptAttributes***REMOVED*** {\n        // Support: Firefox 64+, Edge 18+\n        // Some browsers don't support the \"nonce\" property on scripts.\n        // On the other hand, just using `getAttribute` is not enough as\n        // the `nonce` attribute is reset to an empty string whenever it\n        // becomes browsing-context connected.\n        // See https://github.com/whatwg/html/issues/2369\n        // See https://html.spec.whatwg.org/#nonce-attributes\n        // The `node.getAttribute` check was added for the sake of\n        // `jQuery.globalEval` so that it can fake a nonce-containing node\n        // via an object.\n        val = node[i] || node.getAttribute && node.getAttribute(i***REMOVED***;\n        if (val***REMOVED*** {\n          script.setAttribute(i, val***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n    doc.head.appendChild(script***REMOVED***.parentNode.removeChild(script***REMOVED***;\n  ***REMOVED***\n  function toType(obj***REMOVED*** {\n    if (obj == null***REMOVED*** {\n      return obj + \"\";\n    ***REMOVED***\n\n    // Support: Android <=2.3 only (functionish RegExp***REMOVED***\n    return typeof obj === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj***REMOVED***] || \"object\" : typeof obj;\n  ***REMOVED***\n  /* global Symbol */\n  // Defining this global in .eslintrc.json would create a danger of using the global\n  // unguarded in another place, it seems safer to define global only for this module\n\n  var version = \"3.5.1\",\n    // Define a local copy of jQuery\n    jQuery = function (selector, context***REMOVED*** {\n      // The jQuery object is actually just the init constructor 'enhanced'\n      // Need init if jQuery is called (just allow error to be thrown if not included***REMOVED***\n      return new jQuery.fn.init(selector, context***REMOVED***;\n    ***REMOVED***;\n  jQuery.fn = jQuery.prototype = {\n    // The current version of jQuery being used\n    jquery: version,\n    constructor: jQuery,\n    // The default length of a jQuery object is 0\n    length: 0,\n    toArray: function (***REMOVED*** {\n      return slice.call(this***REMOVED***;\n    ***REMOVED***,\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function (num***REMOVED*** {\n      // Return all the elements in a clean array\n      if (num == null***REMOVED*** {\n        return slice.call(this***REMOVED***;\n      ***REMOVED***\n\n      // Return just the one element from the set\n      return num < 0 ? this[num + this.length] : this[num];\n    ***REMOVED***,\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set***REMOVED***\n    pushStack: function (elems***REMOVED*** {\n      // Build a new jQuery matched element set\n      var ret = jQuery.merge(this.constructor(***REMOVED***, elems***REMOVED***;\n\n      // Add the old object onto the stack (as a reference***REMOVED***\n      ret.prevObject = this;\n\n      // Return the newly-formed element set\n      return ret;\n    ***REMOVED***,\n    // Execute a callback for every element in the matched set.\n    each: function (callback***REMOVED*** {\n      return jQuery.each(this, callback***REMOVED***;\n    ***REMOVED***,\n    map: function (callback***REMOVED*** {\n      return this.pushStack(jQuery.map(this, function (elem, i***REMOVED*** {\n        return callback.call(elem, i, elem***REMOVED***;\n      ***REMOVED******REMOVED******REMOVED***;\n    ***REMOVED***,\n    slice: function (***REMOVED*** {\n      return this.pushStack(slice.apply(this, arguments***REMOVED******REMOVED***;\n    ***REMOVED***,\n    first: function (***REMOVED*** {\n      return this.eq(0***REMOVED***;\n    ***REMOVED***,\n    last: function (***REMOVED*** {\n      return this.eq(-1***REMOVED***;\n    ***REMOVED***,\n    even: function (***REMOVED*** {\n      return this.pushStack(jQuery.grep(this, function (_elem, i***REMOVED*** {\n        return (i + 1***REMOVED*** % 2;\n      ***REMOVED******REMOVED******REMOVED***;\n    ***REMOVED***,\n    odd: function (***REMOVED*** {\n      return this.pushStack(jQuery.grep(this, function (_elem, i***REMOVED*** {\n        return i % 2;\n      ***REMOVED******REMOVED******REMOVED***;\n    ***REMOVED***,\n    eq: function (i***REMOVED*** {\n      var len = this.length,\n        j = +i + (i < 0 ? len : 0***REMOVED***;\n      return this.pushStack(j >= 0 && j < len ? [this[j]] : []***REMOVED***;\n    ***REMOVED***,\n    end: function (***REMOVED*** {\n      return this.prevObject || this.constructor(***REMOVED***;\n    ***REMOVED***,\n    // For internal use only.\n    // Behaves like an Array's method, not like a jQuery method.\n    push: push,\n    sort: arr.sort,\n    splice: arr.splice\n  ***REMOVED***;\n  jQuery.extend = jQuery.fn.extend = function (***REMOVED*** {\n    var options,\n      name,\n      src,\n      copy,\n      copyIsArray,\n      clone,\n      target = arguments[0] || {***REMOVED***,\n      i = 1,\n      length = arguments.length,\n      deep = false;\n\n    // Handle a deep copy situation\n    if (typeof target === \"boolean\"***REMOVED*** {\n      deep = target;\n\n      // Skip the boolean and the target\n      target = arguments[i] || {***REMOVED***;\n      i++;\n    ***REMOVED***\n\n    // Handle case when target is a string or something (possible in deep copy***REMOVED***\n    if (typeof target !== \"object\" && !isFunction(target***REMOVED******REMOVED*** {\n      target = {***REMOVED***;\n    ***REMOVED***\n\n    // Extend jQuery itself if only one argument is passed\n    if (i === length***REMOVED*** {\n      target = this;\n      i--;\n    ***REMOVED***\n    for (; i < length; i++***REMOVED*** {\n      // Only deal with non-null/undefined values\n      if ((options = arguments[i]***REMOVED*** != null***REMOVED*** {\n        // Extend the base object\n        for (name in options***REMOVED*** {\n          copy = options[name];\n\n          // Prevent Object.prototype pollution\n          // Prevent never-ending loop\n          if (name === \"__proto__\" || target === copy***REMOVED*** {\n            continue;\n          ***REMOVED***\n\n          // Recurse if we're merging plain objects or arrays\n          if (deep && copy && (jQuery.isPlainObject(copy***REMOVED*** || (copyIsArray = Array.isArray(copy***REMOVED******REMOVED******REMOVED******REMOVED*** {\n            src = target[name];\n\n            // Ensure proper type for the source value\n            if (copyIsArray && !Array.isArray(src***REMOVED******REMOVED*** {\n              clone = [];\n            ***REMOVED*** else if (!copyIsArray && !jQuery.isPlainObject(src***REMOVED******REMOVED*** {\n              clone = {***REMOVED***;\n            ***REMOVED*** else {\n              clone = src;\n            ***REMOVED***\n            copyIsArray = false;\n\n            // Never move original objects, clone them\n            target[name] = jQuery.extend(deep, clone, copy***REMOVED***;\n\n            // Don't bring in undefined values\n          ***REMOVED*** else if (copy !== undefined***REMOVED*** {\n            target[name] = copy;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n\n    // Return the modified object\n    return target;\n  ***REMOVED***;\n  jQuery.extend({\n    // Unique for each copy of jQuery on the page\n    expando: \"jQuery\" + (version + Math.random(***REMOVED******REMOVED***.replace(/\\D/g, \"\"***REMOVED***,\n    // Assume jQuery is ready without the ready module\n    isReady: true,\n    error: function (msg***REMOVED*** {\n      throw new Error(msg***REMOVED***;\n    ***REMOVED***,\n    noop: function (***REMOVED*** {***REMOVED***,\n    isPlainObject: function (obj***REMOVED*** {\n      var proto, Ctor;\n\n      // Detect obvious negatives\n      // Use toString instead of jQuery.type to catch host objects\n      if (!obj || toString.call(obj***REMOVED*** !== \"[object Object]\"***REMOVED*** {\n        return false;\n      ***REMOVED***\n      proto = getProto(obj***REMOVED***;\n\n      // Objects with no prototype (e.g., `Object.create( null ***REMOVED***`***REMOVED*** are plain\n      if (!proto***REMOVED*** {\n        return true;\n      ***REMOVED***\n\n      // Objects with prototype are plain iff they were constructed by a global Object function\n      Ctor = hasOwn.call(proto, \"constructor\"***REMOVED*** && proto.constructor;\n      return typeof Ctor === \"function\" && fnToString.call(Ctor***REMOVED*** === ObjectFunctionString;\n    ***REMOVED***,\n    isEmptyObject: function (obj***REMOVED*** {\n      var name;\n      for (name in obj***REMOVED*** {\n        return false;\n      ***REMOVED***\n      return true;\n    ***REMOVED***,\n    // Evaluates a script in a provided context; falls back to the global one\n    // if not specified.\n    globalEval: function (code, options, doc***REMOVED*** {\n      DOMEval(code, {\n        nonce: options && options.nonce\n      ***REMOVED***, doc***REMOVED***;\n    ***REMOVED***,\n    each: function (obj, callback***REMOVED*** {\n      var length,\n        i = 0;\n      if (isArrayLike(obj***REMOVED******REMOVED*** {\n        length = obj.length;\n        for (; i < length; i++***REMOVED*** {\n          if (callback.call(obj[i], i, obj[i]***REMOVED*** === false***REMOVED*** {\n            break;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED*** else {\n        for (i in obj***REMOVED*** {\n          if (callback.call(obj[i], i, obj[i]***REMOVED*** === false***REMOVED*** {\n            break;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n      return obj;\n    ***REMOVED***,\n    // results is for internal usage only\n    makeArray: function (arr, results***REMOVED*** {\n      var ret = results || [];\n      if (arr != null***REMOVED*** {\n        if (isArrayLike(Object(arr***REMOVED******REMOVED******REMOVED*** {\n          jQuery.merge(ret, typeof arr === \"string\" ? [arr] : arr***REMOVED***;\n        ***REMOVED*** else {\n          push.call(ret, arr***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n      return ret;\n    ***REMOVED***,\n    inArray: function (elem, arr, i***REMOVED*** {\n      return arr == null ? -1 : indexOf.call(arr, elem, i***REMOVED***;\n    ***REMOVED***,\n    // Support: Android <=4.0 only, PhantomJS 1 only\n    // push.apply(_, arraylike***REMOVED*** throws on ancient WebKit\n    merge: function (first, second***REMOVED*** {\n      var len = +second.length,\n        j = 0,\n        i = first.length;\n      for (; j < len; j++***REMOVED*** {\n        first[i++] = second[j];\n      ***REMOVED***\n      first.length = i;\n      return first;\n    ***REMOVED***,\n    grep: function (elems, callback, invert***REMOVED*** {\n      var callbackInverse,\n        matches = [],\n        i = 0,\n        length = elems.length,\n        callbackExpect = !invert;\n\n      // Go through the array, only saving the items\n      // that pass the validator function\n      for (; i < length; i++***REMOVED*** {\n        callbackInverse = !callback(elems[i], i***REMOVED***;\n        if (callbackInverse !== callbackExpect***REMOVED*** {\n          matches.push(elems[i]***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n      return matches;\n    ***REMOVED***,\n    // arg is for internal usage only\n    map: function (elems, callback, arg***REMOVED*** {\n      var length,\n        value,\n        i = 0,\n        ret = [];\n\n      // Go through the array, translating each of the items to their new values\n      if (isArrayLike(elems***REMOVED******REMOVED*** {\n        length = elems.length;\n        for (; i < length; i++***REMOVED*** {\n          value = callback(elems[i], i, arg***REMOVED***;\n          if (value != null***REMOVED*** {\n            ret.push(value***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n\n        // Go through every key on the object,\n      ***REMOVED*** else {\n        for (i in elems***REMOVED*** {\n          value = callback(elems[i], i, arg***REMOVED***;\n          if (value != null***REMOVED*** {\n            ret.push(value***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n\n      // Flatten any nested arrays\n      return flat(ret***REMOVED***;\n    ***REMOVED***,\n    // A global GUID counter for objects\n    guid: 1,\n    // jQuery.support is not used in Core but other projects attach their\n    // properties to it so it needs to exist.\n    support: support\n  ***REMOVED******REMOVED***;\n  if (typeof Symbol === \"function\"***REMOVED*** {\n    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n  ***REMOVED***\n\n  // Populate the class2type map\n  jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"***REMOVED***, function (_i, name***REMOVED*** {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase(***REMOVED***;\n  ***REMOVED******REMOVED***;\n  function isArrayLike(obj***REMOVED*** {\n    // Support: real iOS 8.2 only (not reproducible in simulator***REMOVED***\n    // `in` check used to prevent JIT error (gh-2145***REMOVED***\n    // hasOwn isn't used here due to false negatives\n    // regarding Nodelist length in IE\n    var length = !!obj && \"length\" in obj && obj.length,\n      type = toType(obj***REMOVED***;\n    if (isFunction(obj***REMOVED*** || isWindow(obj***REMOVED******REMOVED*** {\n      return false;\n    ***REMOVED***\n    return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && length - 1 in obj;\n  ***REMOVED***\n  var Sizzle =\n  /*!\n   * Sizzle CSS Selector Engine v2.3.5\n   * https://sizzlejs.com/\n   *\n   * Copyright JS Foundation and other contributors\n   * Released under the MIT license\n   * https://js.foundation/\n   *\n   * Date: 2020-03-14\n   */\n  function (window***REMOVED*** {\n    var i,\n      support,\n      Expr,\n      getText,\n      isXML,\n      tokenize,\n      compile,\n      select,\n      outermostContext,\n      sortInput,\n      hasDuplicate,\n      // Local document vars\n      setDocument,\n      document,\n      docElem,\n      documentIsHTML,\n      rbuggyQSA,\n      rbuggyMatches,\n      matches,\n      contains,\n      // Instance-specific data\n      expando = \"sizzle\" + 1 * new Date(***REMOVED***,\n      preferredDoc = window.document,\n      dirruns = 0,\n      done = 0,\n      classCache = createCache(***REMOVED***,\n      tokenCache = createCache(***REMOVED***,\n      compilerCache = createCache(***REMOVED***,\n      nonnativeSelectorCache = createCache(***REMOVED***,\n      sortOrder = function (a, b***REMOVED*** {\n        if (a === b***REMOVED*** {\n          hasDuplicate = true;\n        ***REMOVED***\n        return 0;\n      ***REMOVED***,\n      // Instance methods\n      hasOwn = {***REMOVED***.hasOwnProperty,\n      arr = [],\n      pop = arr.pop,\n      pushNative = arr.push,\n      push = arr.push,\n      slice = arr.slice,\n      // Use a stripped-down indexOf as it's faster than native\n      // https://jsperf.com/thor-indexof-vs-for/5\n      indexOf = function (list, elem***REMOVED*** {\n        var i = 0,\n          len = list.length;\n        for (; i < len; i++***REMOVED*** {\n          if (list[i] === elem***REMOVED*** {\n            return i;\n          ***REMOVED***\n        ***REMOVED***\n        return -1;\n      ***REMOVED***,\n      booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|\" + \"ismap|loop|multiple|open|readonly|required|scoped\",\n      // Regular expressions\n\n      // http://www.w3.org/TR/css3-selectors/#whitespace\n      whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n      // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n      identifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6***REMOVED***\" + whitespace + \"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f]***REMOVED***+\",\n      // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n      attributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \"***REMOVED***(?:\" + whitespace +\n      // Operator (capture 2***REMOVED***\n      \"*([*^$|!~]?=***REMOVED***\" + whitespace +\n      // \"Attribute values must be CSS identifiers [capture 5]\n      // or strings [capture 3 or capture 4]\"\n      \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\']***REMOVED*******REMOVED***'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"]***REMOVED*******REMOVED***\\\"|(\" + identifier + \"***REMOVED******REMOVED***|***REMOVED***\" + whitespace + \"*\\\\]\",\n      pseudos = \":(\" + identifier + \"***REMOVED***(?:\\\\((\" +\n      // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n      // 1. quoted (capture 3; capture 4 or capture 5***REMOVED***\n      \"('((?:\\\\\\\\.|[^\\\\\\\\']***REMOVED*******REMOVED***'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"]***REMOVED*******REMOVED***\\\"***REMOVED***|\" +\n      // 2. simple (capture 6***REMOVED***\n      \"((?:\\\\\\\\.|[^\\\\\\\\(***REMOVED***[\\\\]]|\" + attributes + \"***REMOVED*******REMOVED***|\" +\n      // 3. anything else (capture 2***REMOVED***\n      \".*\" + \"***REMOVED***\\\\***REMOVED***|***REMOVED***\",\n      // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n      rwhitespace = new RegExp(whitespace + \"+\", \"g\"***REMOVED***,\n      rtrim = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\]***REMOVED***(?:\\\\\\\\.***REMOVED*******REMOVED***\" + whitespace + \"+$\", \"g\"***REMOVED***,\n      rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"***REMOVED***,\n      rcombinators = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \"***REMOVED***\" + whitespace + \"*\"***REMOVED***,\n      rdescend = new RegExp(whitespace + \"|>\"***REMOVED***,\n      rpseudo = new RegExp(pseudos***REMOVED***,\n      ridentifier = new RegExp(\"^\" + identifier + \"$\"***REMOVED***,\n      matchExpr = {\n        \"ID\": new RegExp(\"^#(\" + identifier + \"***REMOVED***\"***REMOVED***,\n        \"CLASS\": new RegExp(\"^\\\\.(\" + identifier + \"***REMOVED***\"***REMOVED***,\n        \"TAG\": new RegExp(\"^(\" + identifier + \"|[*]***REMOVED***\"***REMOVED***,\n        \"ATTR\": new RegExp(\"^\" + attributes***REMOVED***,\n        \"PSEUDO\": new RegExp(\"^\" + pseudos***REMOVED***,\n        \"CHILD\": new RegExp(\"^:(only|first|last|nth|nth-last***REMOVED***-(child|of-type***REMOVED***(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|***REMOVED***(\\\\d****REMOVED***n|***REMOVED***\" + whitespace + \"*(?:([+-]|***REMOVED***\" + whitespace + \"*(\\\\d+***REMOVED***|***REMOVED******REMOVED***\" + whitespace + \"*\\\\***REMOVED***|***REMOVED***\", \"i\"***REMOVED***,\n        \"bool\": new RegExp(\"^(?:\" + booleans + \"***REMOVED***$\", \"i\"***REMOVED***,\n        // For use in libraries implementing .is(***REMOVED***\n        // We use this for POS matching in `select`\n        \"needsContext\": new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last***REMOVED***(?:\\\\(\" + whitespace + \"*((?:-\\\\d***REMOVED***?\\\\d****REMOVED***\" + whitespace + \"*\\\\***REMOVED***|***REMOVED***(?=[^-]|$***REMOVED***\", \"i\"***REMOVED***\n      ***REMOVED***,\n      rhtml = /HTML$/i,\n      rinputs = /^(?:input|select|textarea|button***REMOVED***$/i,\n      rheader = /^h\\d$/i,\n      rnative = /^[^{]+\\{\\s*\\[native \\w/,\n      // Easily-parseable/retrievable ID or TAG or CLASS selectors\n      rquickExpr = /^(?:#([\\w-]+***REMOVED***|(\\w+***REMOVED***|\\.([\\w-]+***REMOVED******REMOVED***$/,\n      rsibling = /[+~]/,\n      // CSS escapes\n      // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n      runescape = new RegExp(\"\\\\\\\\[\\\\da-fA-F]{1,6***REMOVED***\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f]***REMOVED***\", \"g\"***REMOVED***,\n      funescape = function (escape, nonHex***REMOVED*** {\n        var high = \"0x\" + escape.slice(1***REMOVED*** - 0x10000;\n        return nonHex ?\n        // Strip the backslash prefix from a non-hex escape sequence\n        nonHex :\n        // Replace a hexadecimal escape sequence with the encoded Unicode code point\n        // Support: IE <=11+\n        // For values outside the Basic Multilingual Plane (BMP***REMOVED***, manually construct a\n        // surrogate pair\n        high < 0 ? String.fromCharCode(high + 0x10000***REMOVED*** : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00***REMOVED***;\n      ***REMOVED***,\n      // CSS string/identifier serialization\n      // https://drafts.csswg.org/cssom/#common-serializing-idioms\n      rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d***REMOVED***|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n      fcssescape = function (ch, asCodePoint***REMOVED*** {\n        if (asCodePoint***REMOVED*** {\n          // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n          if (ch === \"\\0\"***REMOVED*** {\n            return \"\\uFFFD\";\n          ***REMOVED***\n\n          // Control characters and (dependent upon position***REMOVED*** numbers get escaped as code points\n          return ch.slice(0, -1***REMOVED*** + \"\\\\\" + ch.charCodeAt(ch.length - 1***REMOVED***.toString(16***REMOVED*** + \" \";\n        ***REMOVED***\n\n        // Other potentially-special ASCII characters get backslash-escaped\n        return \"\\\\\" + ch;\n      ***REMOVED***,\n      // Used for iframes\n      // See setDocument(***REMOVED***\n      // Removing the function wrapper causes a \"Permission Denied\"\n      // error in IE\n      unloadHandler = function (***REMOVED*** {\n        setDocument(***REMOVED***;\n      ***REMOVED***,\n      inDisabledFieldset = addCombinator(function (elem***REMOVED*** {\n        return elem.disabled === true && elem.nodeName.toLowerCase(***REMOVED*** === \"fieldset\";\n      ***REMOVED***, {\n        dir: \"parentNode\",\n        next: \"legend\"\n      ***REMOVED******REMOVED***;\n\n    // Optimize for push.apply( _, NodeList ***REMOVED***\n    try {\n      push.apply(arr = slice.call(preferredDoc.childNodes***REMOVED***, preferredDoc.childNodes***REMOVED***;\n\n      // Support: Android<4.0\n      // Detect silently failing push.apply\n      // eslint-disable-next-line no-unused-expressions\n      arr[preferredDoc.childNodes.length].nodeType;\n    ***REMOVED*** catch (e***REMOVED*** {\n      push = {\n        apply: arr.length ?\n        // Leverage slice if possible\n        function (target, els***REMOVED*** {\n          pushNative.apply(target, slice.call(els***REMOVED******REMOVED***;\n        ***REMOVED*** :\n        // Support: IE<9\n        // Otherwise append directly\n        function (target, els***REMOVED*** {\n          var j = target.length,\n            i = 0;\n\n          // Can't trust NodeList.length\n          while (target[j++] = els[i++]***REMOVED*** {***REMOVED***\n          target.length = j - 1;\n        ***REMOVED***\n      ***REMOVED***;\n    ***REMOVED***\n    function Sizzle(selector, context, results, seed***REMOVED*** {\n      var m,\n        i,\n        elem,\n        nid,\n        match,\n        groups,\n        newSelector,\n        newContext = context && context.ownerDocument,\n        // nodeType defaults to 9, since context defaults to document\n        nodeType = context ? context.nodeType : 9;\n      results = results || [];\n\n      // Return early from calls with invalid selector or context\n      if (typeof selector !== \"string\" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11***REMOVED*** {\n        return results;\n      ***REMOVED***\n\n      // Try to shortcut find operations (as opposed to filters***REMOVED*** in HTML documents\n      if (!seed***REMOVED*** {\n        setDocument(context***REMOVED***;\n        context = context || document;\n        if (documentIsHTML***REMOVED*** {\n          // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n          // (excepting DocumentFragment context, where the methods don't exist***REMOVED***\n          if (nodeType !== 11 && (match = rquickExpr.exec(selector***REMOVED******REMOVED******REMOVED*** {\n            // ID selector\n            if (m = match[1]***REMOVED*** {\n              // Document context\n              if (nodeType === 9***REMOVED*** {\n                if (elem = context.getElementById(m***REMOVED******REMOVED*** {\n                  // Support: IE, Opera, Webkit\n                  // TODO: identify versions\n                  // getElementById can match elements by name instead of ID\n                  if (elem.id === m***REMOVED*** {\n                    results.push(elem***REMOVED***;\n                    return results;\n                  ***REMOVED***\n                ***REMOVED*** else {\n                  return results;\n                ***REMOVED***\n\n                // Element context\n              ***REMOVED*** else {\n                // Support: IE, Opera, Webkit\n                // TODO: identify versions\n                // getElementById can match elements by name instead of ID\n                if (newContext && (elem = newContext.getElementById(m***REMOVED******REMOVED*** && contains(context, elem***REMOVED*** && elem.id === m***REMOVED*** {\n                  results.push(elem***REMOVED***;\n                  return results;\n                ***REMOVED***\n              ***REMOVED***\n\n              // Type selector\n            ***REMOVED*** else if (match[2]***REMOVED*** {\n              push.apply(results, context.getElementsByTagName(selector***REMOVED******REMOVED***;\n              return results;\n\n              // Class selector\n            ***REMOVED*** else if ((m = match[3]***REMOVED*** && support.getElementsByClassName && context.getElementsByClassName***REMOVED*** {\n              push.apply(results, context.getElementsByClassName(m***REMOVED******REMOVED***;\n              return results;\n            ***REMOVED***\n          ***REMOVED***\n\n          // Take advantage of querySelectorAll\n          if (support.qsa && !nonnativeSelectorCache[selector + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(selector***REMOVED******REMOVED*** && (\n          // Support: IE 8 only\n          // Exclude object elements\n          nodeType !== 1 || context.nodeName.toLowerCase(***REMOVED*** !== \"object\"***REMOVED******REMOVED*** {\n            newSelector = selector;\n            newContext = context;\n\n            // qSA considers elements outside a scoping root when evaluating child or\n            // descendant combinators, which is not what we want.\n            // In such cases, we work around the behavior by prefixing every selector in the\n            // list with an ID selector referencing the scope context.\n            // The technique has to be used as well when a leading combinator is used\n            // as such selectors are not recognized by querySelectorAll.\n            // Thanks to Andrew Dupont for this technique.\n            if (nodeType === 1 && (rdescend.test(selector***REMOVED*** || rcombinators.test(selector***REMOVED******REMOVED******REMOVED*** {\n              // Expand context for sibling selectors\n              newContext = rsibling.test(selector***REMOVED*** && testContext(context.parentNode***REMOVED*** || context;\n\n              // We can use :scope instead of the ID hack if the browser\n              // supports it & if we're not changing the context.\n              if (newContext !== context || !support.scope***REMOVED*** {\n                // Capture the context ID, setting it first if necessary\n                if (nid = context.getAttribute(\"id\"***REMOVED******REMOVED*** {\n                  nid = nid.replace(rcssescape, fcssescape***REMOVED***;\n                ***REMOVED*** else {\n                  context.setAttribute(\"id\", nid = expando***REMOVED***;\n                ***REMOVED***\n              ***REMOVED***\n\n              // Prefix every selector in the list\n              groups = tokenize(selector***REMOVED***;\n              i = groups.length;\n              while (i--***REMOVED*** {\n                groups[i] = (nid ? \"#\" + nid : \":scope\"***REMOVED*** + \" \" + toSelector(groups[i]***REMOVED***;\n              ***REMOVED***\n              newSelector = groups.join(\",\"***REMOVED***;\n            ***REMOVED***\n            try {\n              push.apply(results, newContext.querySelectorAll(newSelector***REMOVED******REMOVED***;\n              return results;\n            ***REMOVED*** catch (qsaError***REMOVED*** {\n              nonnativeSelectorCache(selector, true***REMOVED***;\n            ***REMOVED*** finally {\n              if (nid === expando***REMOVED*** {\n                context.removeAttribute(\"id\"***REMOVED***;\n              ***REMOVED***\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n\n      // All others\n      return select(selector.replace(rtrim, \"$1\"***REMOVED***, context, results, seed***REMOVED***;\n    ***REMOVED***\n\n    /**\n     * Create key-value caches of limited size\n     * @returns {function(string, object***REMOVED******REMOVED*** Returns the Object data after storing it on itself with\n     *\tproperty name the (space-suffixed***REMOVED*** string and (if the cache is larger than Expr.cacheLength***REMOVED***\n     *\tdeleting the oldest entry\n     */\n    function createCache(***REMOVED*** {\n      var keys = [];\n      function cache(key, value***REMOVED*** {\n        // Use (key + \" \"***REMOVED*** to avoid collision with native prototype properties (see Issue #157***REMOVED***\n        if (keys.push(key + \" \"***REMOVED*** > Expr.cacheLength***REMOVED*** {\n          // Only keep the most recent entries\n          delete cache[keys.shift(***REMOVED***];\n        ***REMOVED***\n        return cache[key + \" \"] = value;\n      ***REMOVED***\n      return cache;\n    ***REMOVED***\n\n    /**\n     * Mark a function for special use by Sizzle\n     * @param {Function***REMOVED*** fn The function to mark\n     */\n    function markFunction(fn***REMOVED*** {\n      fn[expando] = true;\n      return fn;\n    ***REMOVED***\n\n    /**\n     * Support testing using an element\n     * @param {Function***REMOVED*** fn Passed the created element and returns a boolean result\n     */\n    function assert(fn***REMOVED*** {\n      var el = document.createElement(\"fieldset\"***REMOVED***;\n      try {\n        return !!fn(el***REMOVED***;\n      ***REMOVED*** catch (e***REMOVED*** {\n        return false;\n      ***REMOVED*** finally {\n        // Remove from its parent by default\n        if (el.parentNode***REMOVED*** {\n          el.parentNode.removeChild(el***REMOVED***;\n        ***REMOVED***\n\n        // release memory in IE\n        el = null;\n      ***REMOVED***\n    ***REMOVED***\n\n    /**\n     * Adds the same handler for all of the specified attrs\n     * @param {String***REMOVED*** attrs Pipe-separated list of attributes\n     * @param {Function***REMOVED*** handler The method that will be applied\n     */\n    function addHandle(attrs, handler***REMOVED*** {\n      var arr = attrs.split(\"|\"***REMOVED***,\n        i = arr.length;\n      while (i--***REMOVED*** {\n        Expr.attrHandle[arr[i]] = handler;\n      ***REMOVED***\n    ***REMOVED***\n\n    /**\n     * Checks document order of two siblings\n     * @param {Element***REMOVED*** a\n     * @param {Element***REMOVED*** b\n     * @returns {Number***REMOVED*** Returns less than 0 if a precedes b, greater than 0 if a follows b\n     */\n    function siblingCheck(a, b***REMOVED*** {\n      var cur = b && a,\n        diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex;\n\n      // Use IE sourceIndex if available on both nodes\n      if (diff***REMOVED*** {\n        return diff;\n      ***REMOVED***\n\n      // Check if b follows a\n      if (cur***REMOVED*** {\n        while (cur = cur.nextSibling***REMOVED*** {\n          if (cur === b***REMOVED*** {\n            return -1;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n      return a ? 1 : -1;\n    ***REMOVED***\n\n    /**\n     * Returns a function to use in pseudos for input types\n     * @param {String***REMOVED*** type\n     */\n    function createInputPseudo(type***REMOVED*** {\n      return function (elem***REMOVED*** {\n        var name = elem.nodeName.toLowerCase(***REMOVED***;\n        return name === \"input\" && elem.type === type;\n      ***REMOVED***;\n    ***REMOVED***\n\n    /**\n     * Returns a function to use in pseudos for buttons\n     * @param {String***REMOVED*** type\n     */\n    function createButtonPseudo(type***REMOVED*** {\n      return function (elem***REMOVED*** {\n        var name = elem.nodeName.toLowerCase(***REMOVED***;\n        return (name === \"input\" || name === \"button\"***REMOVED*** && elem.type === type;\n      ***REMOVED***;\n    ***REMOVED***\n\n    /**\n     * Returns a function to use in pseudos for :enabled/:disabled\n     * @param {Boolean***REMOVED*** disabled true for :disabled; false for :enabled\n     */\n    function createDisabledPseudo(disabled***REMOVED*** {\n      // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2***REMOVED*** :can-disable\n      return function (elem***REMOVED*** {\n        // Only certain elements can match :enabled or :disabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n        if (\"form\" in elem***REMOVED*** {\n          // Check for inherited disabledness on relevant non-disabled elements:\n          // * listed form-associated elements in a disabled fieldset\n          //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n          // * option elements in a disabled optgroup\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n          // All such elements have a \"form\" property.\n          if (elem.parentNode && elem.disabled === false***REMOVED*** {\n            // Option elements defer to a parent optgroup if present\n            if (\"label\" in elem***REMOVED*** {\n              if (\"label\" in elem.parentNode***REMOVED*** {\n                return elem.parentNode.disabled === disabled;\n              ***REMOVED*** else {\n                return elem.disabled === disabled;\n              ***REMOVED***\n            ***REMOVED***\n\n            // Support: IE 6 - 11\n            // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n            return elem.isDisabled === disabled ||\n            // Where there is no isDisabled, check manually\n            /* jshint -W018 */\n            elem.isDisabled !== !disabled && inDisabledFieldset(elem***REMOVED*** === disabled;\n          ***REMOVED***\n          return elem.disabled === disabled;\n\n          // Try to winnow out elements that can't be disabled before trusting the disabled property.\n          // Some victims get caught in our net (label, legend, menu, track***REMOVED***, but it shouldn't\n          // even exist on them, let alone have a boolean value.\n        ***REMOVED*** else if (\"label\" in elem***REMOVED*** {\n          return elem.disabled === disabled;\n        ***REMOVED***\n\n        // Remaining elements are neither :enabled nor :disabled\n        return false;\n      ***REMOVED***;\n    ***REMOVED***\n\n    /**\n     * Returns a function to use in pseudos for positionals\n     * @param {Function***REMOVED*** fn\n     */\n    function createPositionalPseudo(fn***REMOVED*** {\n      return markFunction(function (argument***REMOVED*** {\n        argument = +argument;\n        return markFunction(function (seed, matches***REMOVED*** {\n          var j,\n            matchIndexes = fn([], seed.length, argument***REMOVED***,\n            i = matchIndexes.length;\n\n          // Match elements found at the specified indexes\n          while (i--***REMOVED*** {\n            if (seed[j = matchIndexes[i]]***REMOVED*** {\n              seed[j] = !(matches[j] = seed[j]***REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED******REMOVED***;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n\n    /**\n     * Checks a node for validity as a Sizzle context\n     * @param {Element|Object=***REMOVED*** context\n     * @returns {Element|Object|Boolean***REMOVED*** The input node if acceptable, otherwise a falsy value\n     */\n    function testContext(context***REMOVED*** {\n      return context && typeof context.getElementsByTagName !== \"undefined\" && context;\n    ***REMOVED***\n\n    // Expose support vars for convenience\n    support = Sizzle.support = {***REMOVED***;\n\n    /**\n     * Detects XML nodes\n     * @param {Element|Object***REMOVED*** elem An element or a document\n     * @returns {Boolean***REMOVED*** True iff elem is a non-HTML XML node\n     */\n    isXML = Sizzle.isXML = function (elem***REMOVED*** {\n      var namespace = elem.namespaceURI,\n        docElem = (elem.ownerDocument || elem***REMOVED***.documentElement;\n\n      // Support: IE <=8\n      // Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n      // https://bugs.jquery.com/ticket/4833\n      return !rhtml.test(namespace || docElem && docElem.nodeName || \"HTML\"***REMOVED***;\n    ***REMOVED***;\n\n    /**\n     * Sets document-related variables once based on the current document\n     * @param {Element|Object***REMOVED*** [doc] An element or document object to use to set the document\n     * @returns {Object***REMOVED*** Returns the current document\n     */\n    setDocument = Sizzle.setDocument = function (node***REMOVED*** {\n      var hasCompare,\n        subWindow,\n        doc = node ? node.ownerDocument || node : preferredDoc;\n\n      // Return early if doc is invalid or already selected\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if (doc == document || doc.nodeType !== 9 || !doc.documentElement***REMOVED*** {\n        return document;\n      ***REMOVED***\n\n      // Update global variables\n      document = doc;\n      docElem = document.documentElement;\n      documentIsHTML = !isXML(document***REMOVED***;\n\n      // Support: IE 9 - 11+, Edge 12 - 18+\n      // Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936***REMOVED***\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if (preferredDoc != document && (subWindow = document.defaultView***REMOVED*** && subWindow.top !== subWindow***REMOVED*** {\n        // Support: IE 11, Edge\n        if (subWindow.addEventListener***REMOVED*** {\n          subWindow.addEventListener(\"unload\", unloadHandler, false***REMOVED***;\n\n          // Support: IE 9 - 10 only\n        ***REMOVED*** else if (subWindow.attachEvent***REMOVED*** {\n          subWindow.attachEvent(\"onunload\", unloadHandler***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n\n      // Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n      // Safari 4 - 5 only, Opera <=11.6 - 12.x only\n      // IE/Edge & older browsers don't support the :scope pseudo-class.\n      // Support: Safari 6.0 only\n      // Safari 6.0 supports :scope but it's an alias of :root there.\n      support.scope = assert(function (el***REMOVED*** {\n        docElem.appendChild(el***REMOVED***.appendChild(document.createElement(\"div\"***REMOVED******REMOVED***;\n        return typeof el.querySelectorAll !== \"undefined\" && !el.querySelectorAll(\":scope fieldset div\"***REMOVED***.length;\n      ***REMOVED******REMOVED***;\n\n      /* Attributes\n      ---------------------------------------------------------------------- */\n\n      // Support: IE<8\n      // Verify that getAttribute really returns attributes and not properties\n      // (excepting IE8 booleans***REMOVED***\n      support.attributes = assert(function (el***REMOVED*** {\n        el.className = \"i\";\n        return !el.getAttribute(\"className\"***REMOVED***;\n      ***REMOVED******REMOVED***;\n\n      /* getElement(s***REMOVED***By*\n      ---------------------------------------------------------------------- */\n\n      // Check if getElementsByTagName(\"*\"***REMOVED*** returns only elements\n      support.getElementsByTagName = assert(function (el***REMOVED*** {\n        el.appendChild(document.createComment(\"\"***REMOVED******REMOVED***;\n        return !el.getElementsByTagName(\"*\"***REMOVED***.length;\n      ***REMOVED******REMOVED***;\n\n      // Support: IE<9\n      support.getElementsByClassName = rnative.test(document.getElementsByClassName***REMOVED***;\n\n      // Support: IE<10\n      // Check if getElementById returns elements by name\n      // The broken getElementById methods don't pick up programmatically-set names,\n      // so use a roundabout getElementsByName test\n      support.getById = assert(function (el***REMOVED*** {\n        docElem.appendChild(el***REMOVED***.id = expando;\n        return !document.getElementsByName || !document.getElementsByName(expando***REMOVED***.length;\n      ***REMOVED******REMOVED***;\n\n      // ID filter and find\n      if (support.getById***REMOVED*** {\n        Expr.filter[\"ID\"] = function (id***REMOVED*** {\n          var attrId = id.replace(runescape, funescape***REMOVED***;\n          return function (elem***REMOVED*** {\n            return elem.getAttribute(\"id\"***REMOVED*** === attrId;\n          ***REMOVED***;\n        ***REMOVED***;\n        Expr.find[\"ID\"] = function (id, context***REMOVED*** {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML***REMOVED*** {\n            var elem = context.getElementById(id***REMOVED***;\n            return elem ? [elem] : [];\n          ***REMOVED***\n        ***REMOVED***;\n      ***REMOVED*** else {\n        Expr.filter[\"ID\"] = function (id***REMOVED*** {\n          var attrId = id.replace(runescape, funescape***REMOVED***;\n          return function (elem***REMOVED*** {\n            var node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\"***REMOVED***;\n            return node && node.value === attrId;\n          ***REMOVED***;\n        ***REMOVED***;\n\n        // Support: IE 6 - 7 only\n        // getElementById is not reliable as a find shortcut\n        Expr.find[\"ID\"] = function (id, context***REMOVED*** {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML***REMOVED*** {\n            var node,\n              i,\n              elems,\n              elem = context.getElementById(id***REMOVED***;\n            if (elem***REMOVED*** {\n              // Verify the id attribute\n              node = elem.getAttributeNode(\"id\"***REMOVED***;\n              if (node && node.value === id***REMOVED*** {\n                return [elem];\n              ***REMOVED***\n\n              // Fall back on getElementsByName\n              elems = context.getElementsByName(id***REMOVED***;\n              i = 0;\n              while (elem = elems[i++]***REMOVED*** {\n                node = elem.getAttributeNode(\"id\"***REMOVED***;\n                if (node && node.value === id***REMOVED*** {\n                  return [elem];\n                ***REMOVED***\n              ***REMOVED***\n            ***REMOVED***\n            return [];\n          ***REMOVED***\n        ***REMOVED***;\n      ***REMOVED***\n\n      // Tag\n      Expr.find[\"TAG\"] = support.getElementsByTagName ? function (tag, context***REMOVED*** {\n        if (typeof context.getElementsByTagName !== \"undefined\"***REMOVED*** {\n          return context.getElementsByTagName(tag***REMOVED***;\n\n          // DocumentFragment nodes don't have gEBTN\n        ***REMOVED*** else if (support.qsa***REMOVED*** {\n          return context.querySelectorAll(tag***REMOVED***;\n        ***REMOVED***\n      ***REMOVED*** : function (tag, context***REMOVED*** {\n        var elem,\n          tmp = [],\n          i = 0,\n          // By happy coincidence, a (broken***REMOVED*** gEBTN appears on DocumentFragment nodes too\n          results = context.getElementsByTagName(tag***REMOVED***;\n\n        // Filter out possible comments\n        if (tag === \"*\"***REMOVED*** {\n          while (elem = results[i++]***REMOVED*** {\n            if (elem.nodeType === 1***REMOVED*** {\n              tmp.push(elem***REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n          return tmp;\n        ***REMOVED***\n        return results;\n      ***REMOVED***;\n\n      // Class\n      Expr.find[\"CLASS\"] = support.getElementsByClassName && function (className, context***REMOVED*** {\n        if (typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML***REMOVED*** {\n          return context.getElementsByClassName(className***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***;\n\n      /* QSA/matchesSelector\n      ---------------------------------------------------------------------- */\n\n      // QSA and matchesSelector support\n\n      // matchesSelector(:active***REMOVED*** reports false when true (IE9/Opera 11.5***REMOVED***\n      rbuggyMatches = [];\n\n      // qSa(:focus***REMOVED*** reports false when true (Chrome 21***REMOVED***\n      // We allow this because of a bug in IE8/9 that throws an error\n      // whenever `document.activeElement` is accessed on an iframe\n      // So, we allow :focus to pass through QSA all the time to avoid the IE error\n      // See https://bugs.jquery.com/ticket/13378\n      rbuggyQSA = [];\n      if (support.qsa = rnative.test(document.querySelectorAll***REMOVED******REMOVED*** {\n        // Build QSA regex\n        // Regex strategy adopted from Diego Perini\n        assert(function (el***REMOVED*** {\n          var input;\n\n          // Select is set to empty string on purpose\n          // This is to test IE's treatment of not explicitly\n          // setting a boolean content attribute,\n          // since its presence should be enough\n          // https://bugs.jquery.com/ticket/12359\n          docElem.appendChild(el***REMOVED***.innerHTML = \"<a id='\" + expando + \"'></a>\" + \"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" + \"<option selected=''></option></select>\";\n\n          // Support: IE8, Opera 11-12.16\n          // Nothing should be selected when empty strings follow ^= or $= or *=\n          // The test attribute must be unknown in Opera but \"safe\" for WinRT\n          // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n          if (el.querySelectorAll(\"[msallowcapture^='']\"***REMOVED***.length***REMOVED*** {\n            rbuggyQSA.push(\"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\"***REMOVED***\"***REMOVED***;\n          ***REMOVED***\n\n          // Support: IE8\n          // Boolean attributes and \"value\" are not treated correctly\n          if (!el.querySelectorAll(\"[selected]\"***REMOVED***.length***REMOVED*** {\n            rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \"***REMOVED***\"***REMOVED***;\n          ***REMOVED***\n\n          // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n          if (!el.querySelectorAll(\"[id~=\" + expando + \"-]\"***REMOVED***.length***REMOVED*** {\n            rbuggyQSA.push(\"~=\"***REMOVED***;\n          ***REMOVED***\n\n          // Support: IE 11+, Edge 15 - 18+\n          // IE 11/Edge don't find elements on a `[name='']` query in some cases.\n          // Adding a temporary attribute to the document before the selection works\n          // around the issue.\n          // Interestingly, IE 10 & older don't seem to have the issue.\n          input = document.createElement(\"input\"***REMOVED***;\n          input.setAttribute(\"name\", \"\"***REMOVED***;\n          el.appendChild(input***REMOVED***;\n          if (!el.querySelectorAll(\"[name='']\"***REMOVED***.length***REMOVED*** {\n            rbuggyQSA.push(\"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" + whitespace + \"*(?:''|\\\"\\\"***REMOVED***\"***REMOVED***;\n          ***REMOVED***\n\n          // Webkit/Opera - :checked should return selected option elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          // IE8 throws error here and will not see later tests\n          if (!el.querySelectorAll(\":checked\"***REMOVED***.length***REMOVED*** {\n            rbuggyQSA.push(\":checked\"***REMOVED***;\n          ***REMOVED***\n\n          // Support: Safari 8+, iOS 8+\n          // https://bugs.webkit.org/show_bug.cgi?id=136851\n          // In-page `selector#id sibling-combinator selector` fails\n          if (!el.querySelectorAll(\"a#\" + expando + \"+*\"***REMOVED***.length***REMOVED*** {\n            rbuggyQSA.push(\".#.+[+~]\"***REMOVED***;\n          ***REMOVED***\n\n          // Support: Firefox <=3.6 - 5 only\n          // Old Firefox doesn't throw on a badly-escaped identifier.\n          el.querySelectorAll(\"\\\\\\f\"***REMOVED***;\n          rbuggyQSA.push(\"[\\\\r\\\\n\\\\f]\"***REMOVED***;\n        ***REMOVED******REMOVED***;\n        assert(function (el***REMOVED*** {\n          el.innerHTML = \"<a href='' disabled='disabled'></a>\" + \"<select disabled='disabled'><option/></select>\";\n\n          // Support: Windows 8 Native Apps\n          // The type and name attributes are restricted during .innerHTML assignment\n          var input = document.createElement(\"input\"***REMOVED***;\n          input.setAttribute(\"type\", \"hidden\"***REMOVED***;\n          el.appendChild(input***REMOVED***.setAttribute(\"name\", \"D\"***REMOVED***;\n\n          // Support: IE8\n          // Enforce case-sensitivity of name attribute\n          if (el.querySelectorAll(\"[name=d]\"***REMOVED***.length***REMOVED*** {\n            rbuggyQSA.push(\"name\" + whitespace + \"*[*^$|!~]?=\"***REMOVED***;\n          ***REMOVED***\n\n          // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled***REMOVED***\n          // IE8 throws error here and will not see later tests\n          if (el.querySelectorAll(\":enabled\"***REMOVED***.length !== 2***REMOVED*** {\n            rbuggyQSA.push(\":enabled\", \":disabled\"***REMOVED***;\n          ***REMOVED***\n\n          // Support: IE9-11+\n          // IE's :disabled selector does not pick up the children of disabled fieldsets\n          docElem.appendChild(el***REMOVED***.disabled = true;\n          if (el.querySelectorAll(\":disabled\"***REMOVED***.length !== 2***REMOVED*** {\n            rbuggyQSA.push(\":enabled\", \":disabled\"***REMOVED***;\n          ***REMOVED***\n\n          // Support: Opera 10 - 11 only\n          // Opera 10-11 does not throw on post-comma invalid pseudos\n          el.querySelectorAll(\"*,:x\"***REMOVED***;\n          rbuggyQSA.push(\",.*:\"***REMOVED***;\n        ***REMOVED******REMOVED***;\n      ***REMOVED***\n      if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector***REMOVED******REMOVED*** {\n        assert(function (el***REMOVED*** {\n          // Check to see if it's possible to do matchesSelector\n          // on a disconnected node (IE 9***REMOVED***\n          support.disconnectedMatch = matches.call(el, \"*\"***REMOVED***;\n\n          // This should fail with an exception\n          // Gecko does not error, returns false instead\n          matches.call(el, \"[s!='']:x\"***REMOVED***;\n          rbuggyMatches.push(\"!=\", pseudos***REMOVED***;\n        ***REMOVED******REMOVED***;\n      ***REMOVED***\n      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"***REMOVED******REMOVED***;\n      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\"|\"***REMOVED******REMOVED***;\n\n      /* Contains\n      ---------------------------------------------------------------------- */\n      hasCompare = rnative.test(docElem.compareDocumentPosition***REMOVED***;\n\n      // Element contains another\n      // Purposefully self-exclusive\n      // As in, an element does not contain itself\n      contains = hasCompare || rnative.test(docElem.contains***REMOVED*** ? function (a, b***REMOVED*** {\n        var adown = a.nodeType === 9 ? a.documentElement : a,\n          bup = b && b.parentNode;\n        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup***REMOVED*** : a.compareDocumentPosition && a.compareDocumentPosition(bup***REMOVED*** & 16***REMOVED******REMOVED***;\n      ***REMOVED*** : function (a, b***REMOVED*** {\n        if (b***REMOVED*** {\n          while (b = b.parentNode***REMOVED*** {\n            if (b === a***REMOVED*** {\n              return true;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n        return false;\n      ***REMOVED***;\n\n      /* Sorting\n      ---------------------------------------------------------------------- */\n\n      // Document order sorting\n      sortOrder = hasCompare ? function (a, b***REMOVED*** {\n        // Flag for duplicate removal\n        if (a === b***REMOVED*** {\n          hasDuplicate = true;\n          return 0;\n        ***REMOVED***\n\n        // Sort on method existence if only one input has compareDocumentPosition\n        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n        if (compare***REMOVED*** {\n          return compare;\n        ***REMOVED***\n\n        // Calculate position if both inputs belong to the same document\n        // Support: IE 11+, Edge 17 - 18+\n        // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n        // two documents; shallow comparisons work.\n        // eslint-disable-next-line eqeqeq\n        compare = (a.ownerDocument || a***REMOVED*** == (b.ownerDocument || b***REMOVED*** ? a.compareDocumentPosition(b***REMOVED*** :\n        // Otherwise we know they are disconnected\n        1;\n\n        // Disconnected nodes\n        if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a***REMOVED*** === compare***REMOVED*** {\n          // Choose the first element that is related to our preferred document\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          if (a == document || a.ownerDocument == preferredDoc && contains(preferredDoc, a***REMOVED******REMOVED*** {\n            return -1;\n          ***REMOVED***\n\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          if (b == document || b.ownerDocument == preferredDoc && contains(preferredDoc, b***REMOVED******REMOVED*** {\n            return 1;\n          ***REMOVED***\n\n          // Maintain original order\n          return sortInput ? indexOf(sortInput, a***REMOVED*** - indexOf(sortInput, b***REMOVED*** : 0;\n        ***REMOVED***\n        return compare & 4 ? -1 : 1;\n      ***REMOVED*** : function (a, b***REMOVED*** {\n        // Exit early if the nodes are identical\n        if (a === b***REMOVED*** {\n          hasDuplicate = true;\n          return 0;\n        ***REMOVED***\n        var cur,\n          i = 0,\n          aup = a.parentNode,\n          bup = b.parentNode,\n          ap = [a],\n          bp = [b];\n\n        // Parentless nodes are either documents or disconnected\n        if (!aup || !bup***REMOVED*** {\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          /* eslint-disable eqeqeq */\n          return a == document ? -1 : b == document ? 1 : /* eslint-enable eqeqeq */\n          aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a***REMOVED*** - indexOf(sortInput, b***REMOVED*** : 0;\n\n          // If the nodes are siblings, we can do a quick check\n        ***REMOVED*** else if (aup === bup***REMOVED*** {\n          return siblingCheck(a, b***REMOVED***;\n        ***REMOVED***\n\n        // Otherwise we need full lists of their ancestors for comparison\n        cur = a;\n        while (cur = cur.parentNode***REMOVED*** {\n          ap.unshift(cur***REMOVED***;\n        ***REMOVED***\n        cur = b;\n        while (cur = cur.parentNode***REMOVED*** {\n          bp.unshift(cur***REMOVED***;\n        ***REMOVED***\n\n        // Walk down the tree looking for a discrepancy\n        while (ap[i] === bp[i]***REMOVED*** {\n          i++;\n        ***REMOVED***\n        return i ?\n        // Do a sibling check if the nodes have a common ancestor\n        siblingCheck(ap[i], bp[i]***REMOVED*** :\n        // Otherwise nodes in our document sort first\n        // Support: IE 11+, Edge 17 - 18+\n        // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n        // two documents; shallow comparisons work.\n        /* eslint-disable eqeqeq */\n        ap[i] == preferredDoc ? -1 : bp[i] == preferredDoc ? 1 : /* eslint-enable eqeqeq */\n        0;\n      ***REMOVED***;\n      return document;\n    ***REMOVED***;\n    Sizzle.matches = function (expr, elements***REMOVED*** {\n      return Sizzle(expr, null, null, elements***REMOVED***;\n    ***REMOVED***;\n    Sizzle.matchesSelector = function (elem, expr***REMOVED*** {\n      setDocument(elem***REMOVED***;\n      if (support.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + \" \"] && (!rbuggyMatches || !rbuggyMatches.test(expr***REMOVED******REMOVED*** && (!rbuggyQSA || !rbuggyQSA.test(expr***REMOVED******REMOVED******REMOVED*** {\n        try {\n          var ret = matches.call(elem, expr***REMOVED***;\n\n          // IE 9's matchesSelector returns false on disconnected nodes\n          if (ret || support.disconnectedMatch ||\n          // As well, disconnected nodes are said to be in a document\n          // fragment in IE 9\n          elem.document && elem.document.nodeType !== 11***REMOVED*** {\n            return ret;\n          ***REMOVED***\n        ***REMOVED*** catch (e***REMOVED*** {\n          nonnativeSelectorCache(expr, true***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n      return Sizzle(expr, document, null, [elem]***REMOVED***.length > 0;\n    ***REMOVED***;\n    Sizzle.contains = function (context, elem***REMOVED*** {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((context.ownerDocument || context***REMOVED*** != document***REMOVED*** {\n        setDocument(context***REMOVED***;\n      ***REMOVED***\n      return contains(context, elem***REMOVED***;\n    ***REMOVED***;\n    Sizzle.attr = function (elem, name***REMOVED*** {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((elem.ownerDocument || elem***REMOVED*** != document***REMOVED*** {\n        setDocument(elem***REMOVED***;\n      ***REMOVED***\n      var fn = Expr.attrHandle[name.toLowerCase(***REMOVED***],\n        // Don't get fooled by Object.prototype properties (jQuery #13807***REMOVED***\n        val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase(***REMOVED******REMOVED*** ? fn(elem, name, !documentIsHTML***REMOVED*** : undefined;\n      return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name***REMOVED*** : (val = elem.getAttributeNode(name***REMOVED******REMOVED*** && val.specified ? val.value : null;\n    ***REMOVED***;\n    Sizzle.escape = function (sel***REMOVED*** {\n      return (sel + \"\"***REMOVED***.replace(rcssescape, fcssescape***REMOVED***;\n    ***REMOVED***;\n    Sizzle.error = function (msg***REMOVED*** {\n      throw new Error(\"Syntax error, unrecognized expression: \" + msg***REMOVED***;\n    ***REMOVED***;\n\n    /**\n     * Document sorting and removing duplicates\n     * @param {ArrayLike***REMOVED*** results\n     */\n    Sizzle.uniqueSort = function (results***REMOVED*** {\n      var elem,\n        duplicates = [],\n        j = 0,\n        i = 0;\n\n      // Unless we *know* we can detect duplicates, assume their presence\n      hasDuplicate = !support.detectDuplicates;\n      sortInput = !support.sortStable && results.slice(0***REMOVED***;\n      results.sort(sortOrder***REMOVED***;\n      if (hasDuplicate***REMOVED*** {\n        while (elem = results[i++]***REMOVED*** {\n          if (elem === results[i]***REMOVED*** {\n            j = duplicates.push(i***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n        while (j--***REMOVED*** {\n          results.splice(duplicates[j], 1***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n\n      // Clear input after sorting to release objects\n      // See https://github.com/jquery/sizzle/pull/225\n      sortInput = null;\n      return results;\n    ***REMOVED***;\n\n    /**\n     * Utility function for retrieving the text value of an array of DOM nodes\n     * @param {Array|Element***REMOVED*** elem\n     */\n    getText = Sizzle.getText = function (elem***REMOVED*** {\n      var node,\n        ret = \"\",\n        i = 0,\n        nodeType = elem.nodeType;\n      if (!nodeType***REMOVED*** {\n        // If no nodeType, this is expected to be an array\n        while (node = elem[i++]***REMOVED*** {\n          // Do not traverse comment nodes\n          ret += getText(node***REMOVED***;\n        ***REMOVED***\n      ***REMOVED*** else if (nodeType === 1 || nodeType === 9 || nodeType === 11***REMOVED*** {\n        // Use textContent for elements\n        // innerText usage removed for consistency of new lines (jQuery #11153***REMOVED***\n        if (typeof elem.textContent === \"string\"***REMOVED*** {\n          return elem.textContent;\n        ***REMOVED*** else {\n          // Traverse its children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling***REMOVED*** {\n            ret += getText(elem***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED*** else if (nodeType === 3 || nodeType === 4***REMOVED*** {\n        return elem.nodeValue;\n      ***REMOVED***\n\n      // Do not include comment or processing instruction nodes\n\n      return ret;\n    ***REMOVED***;\n    Expr = Sizzle.selectors = {\n      // Can be adjusted by the user\n      cacheLength: 50,\n      createPseudo: markFunction,\n      match: matchExpr,\n      attrHandle: {***REMOVED***,\n      find: {***REMOVED***,\n      relative: {\n        \">\": {\n          dir: \"parentNode\",\n          first: true\n        ***REMOVED***,\n        \" \": {\n          dir: \"parentNode\"\n        ***REMOVED***,\n        \"+\": {\n          dir: \"previousSibling\",\n          first: true\n        ***REMOVED***,\n        \"~\": {\n          dir: \"previousSibling\"\n        ***REMOVED***\n      ***REMOVED***,\n      preFilter: {\n        \"ATTR\": function (match***REMOVED*** {\n          match[1] = match[1].replace(runescape, funescape***REMOVED***;\n\n          // Move the given value to match[3] whether quoted or unquoted\n          match[3] = (match[3] || match[4] || match[5] || \"\"***REMOVED***.replace(runescape, funescape***REMOVED***;\n          if (match[2] === \"~=\"***REMOVED*** {\n            match[3] = \" \" + match[3] + \" \";\n          ***REMOVED***\n          return match.slice(0, 4***REMOVED***;\n        ***REMOVED***,\n        \"CHILD\": function (match***REMOVED*** {\n          /* matches from matchExpr[\"CHILD\"]\n          \t1 type (only|nth|...***REMOVED***\n          \t2 what (child|of-type***REMOVED***\n          \t3 argument (even|odd|\\d*|\\d*n([+-]\\d+***REMOVED***?|...***REMOVED***\n          \t4 xn-component of xn+y argument ([+-]?\\d*n|***REMOVED***\n          \t5 sign of xn-component\n          \t6 x of xn-component\n          \t7 sign of y-component\n          \t8 y of y-component\n          */\n          match[1] = match[1].toLowerCase(***REMOVED***;\n          if (match[1].slice(0, 3***REMOVED*** === \"nth\"***REMOVED*** {\n            // nth-* requires argument\n            if (!match[3]***REMOVED*** {\n              Sizzle.error(match[0]***REMOVED***;\n            ***REMOVED***\n\n            // numeric x and y parameters for Expr.filter.CHILD\n            // remember that false/true cast respectively to 0/1\n            match[4] = +(match[4] ? match[5] + (match[6] || 1***REMOVED*** : 2 * (match[3] === \"even\" || match[3] === \"odd\"***REMOVED******REMOVED***;\n            match[5] = +(match[7] + match[8] || match[3] === \"odd\"***REMOVED***;\n\n            // other types prohibit arguments\n          ***REMOVED*** else if (match[3]***REMOVED*** {\n            Sizzle.error(match[0]***REMOVED***;\n          ***REMOVED***\n          return match;\n        ***REMOVED***,\n        \"PSEUDO\": function (match***REMOVED*** {\n          var excess,\n            unquoted = !match[6] && match[2];\n          if (matchExpr[\"CHILD\"].test(match[0]***REMOVED******REMOVED*** {\n            return null;\n          ***REMOVED***\n\n          // Accept quoted arguments as-is\n          if (match[3]***REMOVED*** {\n            match[2] = match[4] || match[5] || \"\";\n\n            // Strip excess characters from unquoted arguments\n          ***REMOVED*** else if (unquoted && rpseudo.test(unquoted***REMOVED*** && (\n          // Get excess from tokenize (recursively***REMOVED***\n          excess = tokenize(unquoted, true***REMOVED******REMOVED*** && (\n          // advance to the next closing parenthesis\n          excess = unquoted.indexOf(\"***REMOVED***\", unquoted.length - excess***REMOVED*** - unquoted.length***REMOVED******REMOVED*** {\n            // excess is a negative index\n            match[0] = match[0].slice(0, excess***REMOVED***;\n            match[2] = unquoted.slice(0, excess***REMOVED***;\n          ***REMOVED***\n\n          // Return only captures needed by the pseudo filter method (type and argument***REMOVED***\n          return match.slice(0, 3***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***,\n      filter: {\n        \"TAG\": function (nodeNameSelector***REMOVED*** {\n          var nodeName = nodeNameSelector.replace(runescape, funescape***REMOVED***.toLowerCase(***REMOVED***;\n          return nodeNameSelector === \"*\" ? function (***REMOVED*** {\n            return true;\n          ***REMOVED*** : function (elem***REMOVED*** {\n            return elem.nodeName && elem.nodeName.toLowerCase(***REMOVED*** === nodeName;\n          ***REMOVED***;\n        ***REMOVED***,\n        \"CLASS\": function (className***REMOVED*** {\n          var pattern = classCache[className + \" \"];\n          return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \"***REMOVED***\" + className + \"(\" + whitespace + \"|$***REMOVED***\"***REMOVED******REMOVED*** && classCache(className, function (elem***REMOVED*** {\n            return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\"***REMOVED*** || \"\"***REMOVED***;\n          ***REMOVED******REMOVED***;\n        ***REMOVED***,\n        \"ATTR\": function (name, operator, check***REMOVED*** {\n          return function (elem***REMOVED*** {\n            var result = Sizzle.attr(elem, name***REMOVED***;\n            if (result == null***REMOVED*** {\n              return operator === \"!=\";\n            ***REMOVED***\n            if (!operator***REMOVED*** {\n              return true;\n            ***REMOVED***\n            result += \"\";\n\n            /* eslint-disable max-len */\n\n            return operator === \"=\" ? result === check : operator === \"!=\" ? result !== check : operator === \"^=\" ? check && result.indexOf(check***REMOVED*** === 0 : operator === \"*=\" ? check && result.indexOf(check***REMOVED*** > -1 : operator === \"$=\" ? check && result.slice(-check.length***REMOVED*** === check : operator === \"~=\" ? (\" \" + result.replace(rwhitespace, \" \"***REMOVED*** + \" \"***REMOVED***.indexOf(check***REMOVED*** > -1 : operator === \"|=\" ? result === check || result.slice(0, check.length + 1***REMOVED*** === check + \"-\" : false;\n            /* eslint-enable max-len */\n          ***REMOVED***;\n        ***REMOVED***,\n\n        \"CHILD\": function (type, what, _argument, first, last***REMOVED*** {\n          var simple = type.slice(0, 3***REMOVED*** !== \"nth\",\n            forward = type.slice(-4***REMOVED*** !== \"last\",\n            ofType = what === \"of-type\";\n          return first === 1 && last === 0 ?\n          // Shortcut for :nth-*(n***REMOVED***\n          function (elem***REMOVED*** {\n            return !!elem.parentNode;\n          ***REMOVED*** : function (elem, _context, xml***REMOVED*** {\n            var cache,\n              uniqueCache,\n              outerCache,\n              node,\n              nodeIndex,\n              start,\n              dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n              parent = elem.parentNode,\n              name = ofType && elem.nodeName.toLowerCase(***REMOVED***,\n              useCache = !xml && !ofType,\n              diff = false;\n            if (parent***REMOVED*** {\n              // :(first|last|only***REMOVED***-(child|of-type***REMOVED***\n              if (simple***REMOVED*** {\n                while (dir***REMOVED*** {\n                  node = elem;\n                  while (node = node[dir]***REMOVED*** {\n                    if (ofType ? node.nodeName.toLowerCase(***REMOVED*** === name : node.nodeType === 1***REMOVED*** {\n                      return false;\n                    ***REMOVED***\n                  ***REMOVED***\n\n                  // Reverse direction for :only-* (if we haven't yet done so***REMOVED***\n                  start = dir = type === \"only\" && !start && \"nextSibling\";\n                ***REMOVED***\n                return true;\n              ***REMOVED***\n              start = [forward ? parent.firstChild : parent.lastChild];\n\n              // non-xml :nth-child(...***REMOVED*** stores cache data on `parent`\n              if (forward && useCache***REMOVED*** {\n                // Seek `elem` from a previously-cached index\n\n                // ...in a gzip-friendly way\n                node = parent;\n                outerCache = node[expando] || (node[expando] = {***REMOVED******REMOVED***;\n\n                // Support: IE <9 only\n                // Defend against cloned attroperties (jQuery gh-1709***REMOVED***\n                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {***REMOVED******REMOVED***;\n                cache = uniqueCache[type] || [];\n                nodeIndex = cache[0] === dirruns && cache[1];\n                diff = nodeIndex && cache[2];\n                node = nodeIndex && parent.childNodes[nodeIndex];\n                while (node = ++nodeIndex && node && node[dir] || (\n                // Fallback to seeking `elem` from the start\n                diff = nodeIndex = 0***REMOVED*** || start.pop(***REMOVED******REMOVED*** {\n                  // When found, cache indexes on `parent` and break\n                  if (node.nodeType === 1 && ++diff && node === elem***REMOVED*** {\n                    uniqueCache[type] = [dirruns, nodeIndex, diff];\n                    break;\n                  ***REMOVED***\n                ***REMOVED***\n              ***REMOVED*** else {\n                // Use previously-cached element index if available\n                if (useCache***REMOVED*** {\n                  // ...in a gzip-friendly way\n                  node = elem;\n                  outerCache = node[expando] || (node[expando] = {***REMOVED******REMOVED***;\n\n                  // Support: IE <9 only\n                  // Defend against cloned attroperties (jQuery gh-1709***REMOVED***\n                  uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {***REMOVED******REMOVED***;\n                  cache = uniqueCache[type] || [];\n                  nodeIndex = cache[0] === dirruns && cache[1];\n                  diff = nodeIndex;\n                ***REMOVED***\n\n                // xml :nth-child(...***REMOVED***\n                // or :nth-last-child(...***REMOVED*** or :nth(-last***REMOVED***?-of-type(...***REMOVED***\n                if (diff === false***REMOVED*** {\n                  // Use the same loop as above to seek `elem` from the start\n                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0***REMOVED*** || start.pop(***REMOVED******REMOVED*** {\n                    if ((ofType ? node.nodeName.toLowerCase(***REMOVED*** === name : node.nodeType === 1***REMOVED*** && ++diff***REMOVED*** {\n                      // Cache the index of each encountered element\n                      if (useCache***REMOVED*** {\n                        outerCache = node[expando] || (node[expando] = {***REMOVED******REMOVED***;\n\n                        // Support: IE <9 only\n                        // Defend against cloned attroperties (jQuery gh-1709***REMOVED***\n                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {***REMOVED******REMOVED***;\n                        uniqueCache[type] = [dirruns, diff];\n                      ***REMOVED***\n                      if (node === elem***REMOVED*** {\n                        break;\n                      ***REMOVED***\n                    ***REMOVED***\n                  ***REMOVED***\n                ***REMOVED***\n              ***REMOVED***\n\n              // Incorporate the offset, then check against cycle size\n              diff -= last;\n              return diff === first || diff % first === 0 && diff / first >= 0;\n            ***REMOVED***\n          ***REMOVED***;\n        ***REMOVED***,\n        \"PSEUDO\": function (pseudo, argument***REMOVED*** {\n          // pseudo-class names are case-insensitive\n          // http://www.w3.org/TR/selectors/#pseudo-classes\n          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n          // Remember that setFilters inherits from pseudos\n          var args,\n            fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase(***REMOVED***] || Sizzle.error(\"unsupported pseudo: \" + pseudo***REMOVED***;\n\n          // The user may use createPseudo to indicate that\n          // arguments are needed to create the filter function\n          // just as Sizzle does\n          if (fn[expando]***REMOVED*** {\n            return fn(argument***REMOVED***;\n          ***REMOVED***\n\n          // But maintain support for old signatures\n          if (fn.length > 1***REMOVED*** {\n            args = [pseudo, pseudo, \"\", argument];\n            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase(***REMOVED******REMOVED*** ? markFunction(function (seed, matches***REMOVED*** {\n              var idx,\n                matched = fn(seed, argument***REMOVED***,\n                i = matched.length;\n              while (i--***REMOVED*** {\n                idx = indexOf(seed, matched[i]***REMOVED***;\n                seed[idx] = !(matches[idx] = matched[i]***REMOVED***;\n              ***REMOVED***\n            ***REMOVED******REMOVED*** : function (elem***REMOVED*** {\n              return fn(elem, 0, args***REMOVED***;\n            ***REMOVED***;\n          ***REMOVED***\n          return fn;\n        ***REMOVED***\n      ***REMOVED***,\n      pseudos: {\n        // Potentially complex pseudos\n        \"not\": markFunction(function (selector***REMOVED*** {\n          // Trim the selector passed to compile\n          // to avoid treating leading and trailing\n          // spaces as combinators\n          var input = [],\n            results = [],\n            matcher = compile(selector.replace(rtrim, \"$1\"***REMOVED******REMOVED***;\n          return matcher[expando] ? markFunction(function (seed, matches, _context, xml***REMOVED*** {\n            var elem,\n              unmatched = matcher(seed, null, xml, []***REMOVED***,\n              i = seed.length;\n\n            // Match elements unmatched by `matcher`\n            while (i--***REMOVED*** {\n              if (elem = unmatched[i]***REMOVED*** {\n                seed[i] = !(matches[i] = elem***REMOVED***;\n              ***REMOVED***\n            ***REMOVED***\n          ***REMOVED******REMOVED*** : function (elem, _context, xml***REMOVED*** {\n            input[0] = elem;\n            matcher(input, null, xml, results***REMOVED***;\n\n            // Don't keep the element (issue #299***REMOVED***\n            input[0] = null;\n            return !results.pop(***REMOVED***;\n          ***REMOVED***;\n        ***REMOVED******REMOVED***,\n        \"has\": markFunction(function (selector***REMOVED*** {\n          return function (elem***REMOVED*** {\n            return Sizzle(selector, elem***REMOVED***.length > 0;\n          ***REMOVED***;\n        ***REMOVED******REMOVED***,\n        \"contains\": markFunction(function (text***REMOVED*** {\n          text = text.replace(runescape, funescape***REMOVED***;\n          return function (elem***REMOVED*** {\n            return (elem.textContent || getText(elem***REMOVED******REMOVED***.indexOf(text***REMOVED*** > -1;\n          ***REMOVED***;\n        ***REMOVED******REMOVED***,\n        // \"Whether an element is represented by a :lang(***REMOVED*** selector\n        // is based solely on the element's language value\n        // being equal to the identifier C,\n        // or beginning with the identifier C immediately followed by \"-\".\n        // The matching of C against the element's language value is performed case-insensitively.\n        // The identifier C does not have to be a valid language name.\"\n        // http://www.w3.org/TR/selectors/#lang-pseudo\n        \"lang\": markFunction(function (lang***REMOVED*** {\n          // lang value must be a valid identifier\n          if (!ridentifier.test(lang || \"\"***REMOVED******REMOVED*** {\n            Sizzle.error(\"unsupported lang: \" + lang***REMOVED***;\n          ***REMOVED***\n          lang = lang.replace(runescape, funescape***REMOVED***.toLowerCase(***REMOVED***;\n          return function (elem***REMOVED*** {\n            var elemLang;\n            do {\n              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\"***REMOVED*** || elem.getAttribute(\"lang\"***REMOVED******REMOVED*** {\n                elemLang = elemLang.toLowerCase(***REMOVED***;\n                return elemLang === lang || elemLang.indexOf(lang + \"-\"***REMOVED*** === 0;\n              ***REMOVED***\n            ***REMOVED*** while ((elem = elem.parentNode***REMOVED*** && elem.nodeType === 1***REMOVED***;\n            return false;\n          ***REMOVED***;\n        ***REMOVED******REMOVED***,\n        // Miscellaneous\n        \"target\": function (elem***REMOVED*** {\n          var hash = window.location && window.location.hash;\n          return hash && hash.slice(1***REMOVED*** === elem.id;\n        ***REMOVED***,\n        \"root\": function (elem***REMOVED*** {\n          return elem === docElem;\n        ***REMOVED***,\n        \"focus\": function (elem***REMOVED*** {\n          return elem === document.activeElement && (!document.hasFocus || document.hasFocus(***REMOVED******REMOVED*** && !!(elem.type || elem.href || ~elem.tabIndex***REMOVED***;\n        ***REMOVED***,\n        // Boolean properties\n        \"enabled\": createDisabledPseudo(false***REMOVED***,\n        \"disabled\": createDisabledPseudo(true***REMOVED***,\n        \"checked\": function (elem***REMOVED*** {\n          // In CSS3, :checked should return both checked and selected elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          var nodeName = elem.nodeName.toLowerCase(***REMOVED***;\n          return nodeName === \"input\" && !!elem.checked || nodeName === \"option\" && !!elem.selected;\n        ***REMOVED***,\n        \"selected\": function (elem***REMOVED*** {\n          // Accessing this property makes selected-by-default\n          // options in Safari work properly\n          if (elem.parentNode***REMOVED*** {\n            // eslint-disable-next-line no-unused-expressions\n            elem.parentNode.selectedIndex;\n          ***REMOVED***\n          return elem.selected === true;\n        ***REMOVED***,\n        // Contents\n        \"empty\": function (elem***REMOVED*** {\n          // http://www.w3.org/TR/selectors/#empty-pseudo\n          // :empty is negated by element (1***REMOVED*** or content nodes (text: 3; cdata: 4; entity ref: 5***REMOVED***,\n          //   but not by others (comment: 8; processing instruction: 7; etc.***REMOVED***\n          // nodeType < 6 works because attributes (2***REMOVED*** do not appear as children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling***REMOVED*** {\n            if (elem.nodeType < 6***REMOVED*** {\n              return false;\n            ***REMOVED***\n          ***REMOVED***\n          return true;\n        ***REMOVED***,\n        \"parent\": function (elem***REMOVED*** {\n          return !Expr.pseudos[\"empty\"](elem***REMOVED***;\n        ***REMOVED***,\n        // Element/input types\n        \"header\": function (elem***REMOVED*** {\n          return rheader.test(elem.nodeName***REMOVED***;\n        ***REMOVED***,\n        \"input\": function (elem***REMOVED*** {\n          return rinputs.test(elem.nodeName***REMOVED***;\n        ***REMOVED***,\n        \"button\": function (elem***REMOVED*** {\n          var name = elem.nodeName.toLowerCase(***REMOVED***;\n          return name === \"input\" && elem.type === \"button\" || name === \"button\";\n        ***REMOVED***,\n        \"text\": function (elem***REMOVED*** {\n          var attr;\n          return elem.nodeName.toLowerCase(***REMOVED*** === \"input\" && elem.type === \"text\" && (\n          // Support: IE<8\n          // New HTML5 attribute values (e.g., \"search\"***REMOVED*** appear with elem.type === \"text\"\n          (attr = elem.getAttribute(\"type\"***REMOVED******REMOVED*** == null || attr.toLowerCase(***REMOVED*** === \"text\"***REMOVED***;\n        ***REMOVED***,\n        // Position-in-collection\n        \"first\": createPositionalPseudo(function (***REMOVED*** {\n          return [0];\n        ***REMOVED******REMOVED***,\n        \"last\": createPositionalPseudo(function (_matchIndexes, length***REMOVED*** {\n          return [length - 1];\n        ***REMOVED******REMOVED***,\n        \"eq\": createPositionalPseudo(function (_matchIndexes, length, argument***REMOVED*** {\n          return [argument < 0 ? argument + length : argument];\n        ***REMOVED******REMOVED***,\n        \"even\": createPositionalPseudo(function (matchIndexes, length***REMOVED*** {\n          var i = 0;\n          for (; i < length; i += 2***REMOVED*** {\n            matchIndexes.push(i***REMOVED***;\n          ***REMOVED***\n          return matchIndexes;\n        ***REMOVED******REMOVED***,\n        \"odd\": createPositionalPseudo(function (matchIndexes, length***REMOVED*** {\n          var i = 1;\n          for (; i < length; i += 2***REMOVED*** {\n            matchIndexes.push(i***REMOVED***;\n          ***REMOVED***\n          return matchIndexes;\n        ***REMOVED******REMOVED***,\n        \"lt\": createPositionalPseudo(function (matchIndexes, length, argument***REMOVED*** {\n          var i = argument < 0 ? argument + length : argument > length ? length : argument;\n          for (; --i >= 0;***REMOVED*** {\n            matchIndexes.push(i***REMOVED***;\n          ***REMOVED***\n          return matchIndexes;\n        ***REMOVED******REMOVED***,\n        \"gt\": createPositionalPseudo(function (matchIndexes, length, argument***REMOVED*** {\n          var i = argument < 0 ? argument + length : argument;\n          for (; ++i < length;***REMOVED*** {\n            matchIndexes.push(i***REMOVED***;\n          ***REMOVED***\n          return matchIndexes;\n        ***REMOVED******REMOVED***\n      ***REMOVED***\n    ***REMOVED***;\n    Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n    // Add button/input type pseudos\n    for (i in {\n      radio: true,\n      checkbox: true,\n      file: true,\n      password: true,\n      image: true\n    ***REMOVED******REMOVED*** {\n      Expr.pseudos[i] = createInputPseudo(i***REMOVED***;\n    ***REMOVED***\n    for (i in {\n      submit: true,\n      reset: true\n    ***REMOVED******REMOVED*** {\n      Expr.pseudos[i] = createButtonPseudo(i***REMOVED***;\n    ***REMOVED***\n\n    // Easy API for creating new setFilters\n    function setFilters(***REMOVED*** {***REMOVED***\n    setFilters.prototype = Expr.filters = Expr.pseudos;\n    Expr.setFilters = new setFilters(***REMOVED***;\n    tokenize = Sizzle.tokenize = function (selector, parseOnly***REMOVED*** {\n      var matched,\n        match,\n        tokens,\n        type,\n        soFar,\n        groups,\n        preFilters,\n        cached = tokenCache[selector + \" \"];\n      if (cached***REMOVED*** {\n        return parseOnly ? 0 : cached.slice(0***REMOVED***;\n      ***REMOVED***\n      soFar = selector;\n      groups = [];\n      preFilters = Expr.preFilter;\n      while (soFar***REMOVED*** {\n        // Comma and first run\n        if (!matched || (match = rcomma.exec(soFar***REMOVED******REMOVED******REMOVED*** {\n          if (match***REMOVED*** {\n            // Don't consume trailing commas as valid\n            soFar = soFar.slice(match[0].length***REMOVED*** || soFar;\n          ***REMOVED***\n          groups.push(tokens = []***REMOVED***;\n        ***REMOVED***\n        matched = false;\n\n        // Combinators\n        if (match = rcombinators.exec(soFar***REMOVED******REMOVED*** {\n          matched = match.shift(***REMOVED***;\n          tokens.push({\n            value: matched,\n            // Cast descendant combinators to space\n            type: match[0].replace(rtrim, \" \"***REMOVED***\n          ***REMOVED******REMOVED***;\n          soFar = soFar.slice(matched.length***REMOVED***;\n        ***REMOVED***\n\n        // Filters\n        for (type in Expr.filter***REMOVED*** {\n          if ((match = matchExpr[type].exec(soFar***REMOVED******REMOVED*** && (!preFilters[type] || (match = preFilters[type](match***REMOVED******REMOVED******REMOVED******REMOVED*** {\n            matched = match.shift(***REMOVED***;\n            tokens.push({\n              value: matched,\n              type: type,\n              matches: match\n            ***REMOVED******REMOVED***;\n            soFar = soFar.slice(matched.length***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n        if (!matched***REMOVED*** {\n          break;\n        ***REMOVED***\n      ***REMOVED***\n\n      // Return the length of the invalid excess\n      // if we're just parsing\n      // Otherwise, throw an error or return tokens\n      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector***REMOVED*** :\n      // Cache the tokens\n      tokenCache(selector, groups***REMOVED***.slice(0***REMOVED***;\n    ***REMOVED***;\n    function toSelector(tokens***REMOVED*** {\n      var i = 0,\n        len = tokens.length,\n        selector = \"\";\n      for (; i < len; i++***REMOVED*** {\n        selector += tokens[i].value;\n      ***REMOVED***\n      return selector;\n    ***REMOVED***\n    function addCombinator(matcher, combinator, base***REMOVED*** {\n      var dir = combinator.dir,\n        skip = combinator.next,\n        key = skip || dir,\n        checkNonElements = base && key === \"parentNode\",\n        doneName = done++;\n      return combinator.first ?\n      // Check against closest ancestor/preceding element\n      function (elem, context, xml***REMOVED*** {\n        while (elem = elem[dir]***REMOVED*** {\n          if (elem.nodeType === 1 || checkNonElements***REMOVED*** {\n            return matcher(elem, context, xml***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n        return false;\n      ***REMOVED*** :\n      // Check against all ancestor/preceding elements\n      function (elem, context, xml***REMOVED*** {\n        var oldCache,\n          uniqueCache,\n          outerCache,\n          newCache = [dirruns, doneName];\n\n        // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n        if (xml***REMOVED*** {\n          while (elem = elem[dir]***REMOVED*** {\n            if (elem.nodeType === 1 || checkNonElements***REMOVED*** {\n              if (matcher(elem, context, xml***REMOVED******REMOVED*** {\n                return true;\n              ***REMOVED***\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED*** else {\n          while (elem = elem[dir]***REMOVED*** {\n            if (elem.nodeType === 1 || checkNonElements***REMOVED*** {\n              outerCache = elem[expando] || (elem[expando] = {***REMOVED******REMOVED***;\n\n              // Support: IE <9 only\n              // Defend against cloned attroperties (jQuery gh-1709***REMOVED***\n              uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {***REMOVED******REMOVED***;\n              if (skip && skip === elem.nodeName.toLowerCase(***REMOVED******REMOVED*** {\n                elem = elem[dir] || elem;\n              ***REMOVED*** else if ((oldCache = uniqueCache[key]***REMOVED*** && oldCache[0] === dirruns && oldCache[1] === doneName***REMOVED*** {\n                // Assign to newCache so results back-propagate to previous elements\n                return newCache[2] = oldCache[2];\n              ***REMOVED*** else {\n                // Reuse newcache so results back-propagate to previous elements\n                uniqueCache[key] = newCache;\n\n                // A match means we're done; a fail means we have to keep checking\n                if (newCache[2] = matcher(elem, context, xml***REMOVED******REMOVED*** {\n                  return true;\n                ***REMOVED***\n              ***REMOVED***\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n        return false;\n      ***REMOVED***;\n    ***REMOVED***\n    function elementMatcher(matchers***REMOVED*** {\n      return matchers.length > 1 ? function (elem, context, xml***REMOVED*** {\n        var i = matchers.length;\n        while (i--***REMOVED*** {\n          if (!matchers[i](elem, context, xml***REMOVED******REMOVED*** {\n            return false;\n          ***REMOVED***\n        ***REMOVED***\n        return true;\n      ***REMOVED*** : matchers[0];\n    ***REMOVED***\n    function multipleContexts(selector, contexts, results***REMOVED*** {\n      var i = 0,\n        len = contexts.length;\n      for (; i < len; i++***REMOVED*** {\n        Sizzle(selector, contexts[i], results***REMOVED***;\n      ***REMOVED***\n      return results;\n    ***REMOVED***\n    function condense(unmatched, map, filter, context, xml***REMOVED*** {\n      var elem,\n        newUnmatched = [],\n        i = 0,\n        len = unmatched.length,\n        mapped = map != null;\n      for (; i < len; i++***REMOVED*** {\n        if (elem = unmatched[i]***REMOVED*** {\n          if (!filter || filter(elem, context, xml***REMOVED******REMOVED*** {\n            newUnmatched.push(elem***REMOVED***;\n            if (mapped***REMOVED*** {\n              map.push(i***REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n      return newUnmatched;\n    ***REMOVED***\n    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector***REMOVED*** {\n      if (postFilter && !postFilter[expando]***REMOVED*** {\n        postFilter = setMatcher(postFilter***REMOVED***;\n      ***REMOVED***\n      if (postFinder && !postFinder[expando]***REMOVED*** {\n        postFinder = setMatcher(postFinder, postSelector***REMOVED***;\n      ***REMOVED***\n      return markFunction(function (seed, results, context, xml***REMOVED*** {\n        var temp,\n          i,\n          elem,\n          preMap = [],\n          postMap = [],\n          preexisting = results.length,\n          // Get initial elements from seed or context\n          elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []***REMOVED***,\n          // Prefilter to get matcher input, preserving a map for seed-results synchronization\n          matcherIn = preFilter && (seed || !selector***REMOVED*** ? condense(elems, preMap, preFilter, context, xml***REMOVED*** : elems,\n          matcherOut = matcher ?\n          // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n          postFinder || (seed ? preFilter : preexisting || postFilter***REMOVED*** ?\n          // ...intermediate processing is necessary\n          [] :\n          // ...otherwise use results directly\n          results : matcherIn;\n\n        // Find primary matches\n        if (matcher***REMOVED*** {\n          matcher(matcherIn, matcherOut, context, xml***REMOVED***;\n        ***REMOVED***\n\n        // Apply postFilter\n        if (postFilter***REMOVED*** {\n          temp = condense(matcherOut, postMap***REMOVED***;\n          postFilter(temp, [], context, xml***REMOVED***;\n\n          // Un-match failing elements by moving them back to matcherIn\n          i = temp.length;\n          while (i--***REMOVED*** {\n            if (elem = temp[i]***REMOVED*** {\n              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem***REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n        if (seed***REMOVED*** {\n          if (postFinder || preFilter***REMOVED*** {\n            if (postFinder***REMOVED*** {\n              // Get the final matcherOut by condensing this intermediate into postFinder contexts\n              temp = [];\n              i = matcherOut.length;\n              while (i--***REMOVED*** {\n                if (elem = matcherOut[i]***REMOVED*** {\n                  // Restore matcherIn since elem is not yet a final match\n                  temp.push(matcherIn[i] = elem***REMOVED***;\n                ***REMOVED***\n              ***REMOVED***\n              postFinder(null, matcherOut = [], temp, xml***REMOVED***;\n            ***REMOVED***\n\n            // Move matched elements from seed to results to keep them synchronized\n            i = matcherOut.length;\n            while (i--***REMOVED*** {\n              if ((elem = matcherOut[i]***REMOVED*** && (temp = postFinder ? indexOf(seed, elem***REMOVED*** : preMap[i]***REMOVED*** > -1***REMOVED*** {\n                seed[temp] = !(results[temp] = elem***REMOVED***;\n              ***REMOVED***\n            ***REMOVED***\n          ***REMOVED***\n\n          // Add elements to results, through postFinder if defined\n        ***REMOVED*** else {\n          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length***REMOVED*** : matcherOut***REMOVED***;\n          if (postFinder***REMOVED*** {\n            postFinder(null, results, matcherOut, xml***REMOVED***;\n          ***REMOVED*** else {\n            push.apply(results, matcherOut***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n    function matcherFromTokens(tokens***REMOVED*** {\n      var checkContext,\n        matcher,\n        j,\n        len = tokens.length,\n        leadingRelative = Expr.relative[tokens[0].type],\n        implicitRelative = leadingRelative || Expr.relative[\" \"],\n        i = leadingRelative ? 1 : 0,\n        // The foundational matcher ensures that elements are reachable from top-level context(s***REMOVED***\n        matchContext = addCombinator(function (elem***REMOVED*** {\n          return elem === checkContext;\n        ***REMOVED***, implicitRelative, true***REMOVED***,\n        matchAnyContext = addCombinator(function (elem***REMOVED*** {\n          return indexOf(checkContext, elem***REMOVED*** > -1;\n        ***REMOVED***, implicitRelative, true***REMOVED***,\n        matchers = [function (elem, context, xml***REMOVED*** {\n          var ret = !leadingRelative && (xml || context !== outermostContext***REMOVED*** || ((checkContext = context***REMOVED***.nodeType ? matchContext(elem, context, xml***REMOVED*** : matchAnyContext(elem, context, xml***REMOVED******REMOVED***;\n\n          // Avoid hanging onto element (issue #299***REMOVED***\n          checkContext = null;\n          return ret;\n        ***REMOVED***];\n      for (; i < len; i++***REMOVED*** {\n        if (matcher = Expr.relative[tokens[i].type]***REMOVED*** {\n          matchers = [addCombinator(elementMatcher(matchers***REMOVED***, matcher***REMOVED***];\n        ***REMOVED*** else {\n          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches***REMOVED***;\n\n          // Return special upon seeing a positional matcher\n          if (matcher[expando]***REMOVED*** {\n            // Find the next relative operator (if any***REMOVED*** for proper handling\n            j = ++i;\n            for (; j < len; j++***REMOVED*** {\n              if (Expr.relative[tokens[j].type]***REMOVED*** {\n                break;\n              ***REMOVED***\n            ***REMOVED***\n            return setMatcher(i > 1 && elementMatcher(matchers***REMOVED***, i > 1 && toSelector(\n            // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n            tokens.slice(0, i - 1***REMOVED***.concat({\n              value: tokens[i - 2].type === \" \" ? \"*\" : \"\"\n            ***REMOVED******REMOVED******REMOVED***.replace(rtrim, \"$1\"***REMOVED***, matcher, i < j && matcherFromTokens(tokens.slice(i, j***REMOVED******REMOVED***, j < len && matcherFromTokens(tokens = tokens.slice(j***REMOVED******REMOVED***, j < len && toSelector(tokens***REMOVED******REMOVED***;\n          ***REMOVED***\n          matchers.push(matcher***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n      return elementMatcher(matchers***REMOVED***;\n    ***REMOVED***\n    function matcherFromGroupMatchers(elementMatchers, setMatchers***REMOVED*** {\n      var bySet = setMatchers.length > 0,\n        byElement = elementMatchers.length > 0,\n        superMatcher = function (seed, context, xml, results, outermost***REMOVED*** {\n          var elem,\n            j,\n            matcher,\n            matchedCount = 0,\n            i = \"0\",\n            unmatched = seed && [],\n            setMatched = [],\n            contextBackup = outermostContext,\n            // We must always have either seed elements or outermost context\n            elems = seed || byElement && Expr.find[\"TAG\"](\"*\", outermost***REMOVED***,\n            // Use integer dirruns iff this is the outermost matcher\n            dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random(***REMOVED*** || 0.1,\n            len = elems.length;\n          if (outermost***REMOVED*** {\n            // Support: IE 11+, Edge 17 - 18+\n            // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n            // two documents; shallow comparisons work.\n            // eslint-disable-next-line eqeqeq\n            outermostContext = context == document || context || outermost;\n          ***REMOVED***\n\n          // Add elements passing elementMatchers directly to results\n          // Support: IE<9, Safari\n          // Tolerate NodeList properties (IE: \"length\"; Safari: <number>***REMOVED*** matching elements by id\n          for (; i !== len && (elem = elems[i]***REMOVED*** != null; i++***REMOVED*** {\n            if (byElement && elem***REMOVED*** {\n              j = 0;\n\n              // Support: IE 11+, Edge 17 - 18+\n              // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n              // two documents; shallow comparisons work.\n              // eslint-disable-next-line eqeqeq\n              if (!context && elem.ownerDocument != document***REMOVED*** {\n                setDocument(elem***REMOVED***;\n                xml = !documentIsHTML;\n              ***REMOVED***\n              while (matcher = elementMatchers[j++]***REMOVED*** {\n                if (matcher(elem, context || document, xml***REMOVED******REMOVED*** {\n                  results.push(elem***REMOVED***;\n                  break;\n                ***REMOVED***\n              ***REMOVED***\n              if (outermost***REMOVED*** {\n                dirruns = dirrunsUnique;\n              ***REMOVED***\n            ***REMOVED***\n\n            // Track unmatched elements for set filters\n            if (bySet***REMOVED*** {\n              // They will have gone through all possible matchers\n              if (elem = !matcher && elem***REMOVED*** {\n                matchedCount--;\n              ***REMOVED***\n\n              // Lengthen the array for every element, matched or not\n              if (seed***REMOVED*** {\n                unmatched.push(elem***REMOVED***;\n              ***REMOVED***\n            ***REMOVED***\n          ***REMOVED***\n\n          // `i` is now the count of elements visited above, and adding it to `matchedCount`\n          // makes the latter nonnegative.\n          matchedCount += i;\n\n          // Apply set filters to unmatched elements\n          // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n          // equals `i`***REMOVED***, unless we didn't visit _any_ elements in the above loop because we have\n          // no element matchers and no seed.\n          // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n          // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n          // numerically zero.\n          if (bySet && i !== matchedCount***REMOVED*** {\n            j = 0;\n            while (matcher = setMatchers[j++]***REMOVED*** {\n              matcher(unmatched, setMatched, context, xml***REMOVED***;\n            ***REMOVED***\n            if (seed***REMOVED*** {\n              // Reintegrate element matches to eliminate the need for sorting\n              if (matchedCount > 0***REMOVED*** {\n                while (i--***REMOVED*** {\n                  if (!(unmatched[i] || setMatched[i]***REMOVED******REMOVED*** {\n                    setMatched[i] = pop.call(results***REMOVED***;\n                  ***REMOVED***\n                ***REMOVED***\n              ***REMOVED***\n\n              // Discard index placeholder values to get only actual matches\n              setMatched = condense(setMatched***REMOVED***;\n            ***REMOVED***\n\n            // Add matches to results\n            push.apply(results, setMatched***REMOVED***;\n\n            // Seedless set matches succeeding multiple successful matchers stipulate sorting\n            if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1***REMOVED*** {\n              Sizzle.uniqueSort(results***REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n\n          // Override manipulation of globals by nested matchers\n          if (outermost***REMOVED*** {\n            dirruns = dirrunsUnique;\n            outermostContext = contextBackup;\n          ***REMOVED***\n          return unmatched;\n        ***REMOVED***;\n      return bySet ? markFunction(superMatcher***REMOVED*** : superMatcher;\n    ***REMOVED***\n    compile = Sizzle.compile = function (selector, match /* Internal Use Only */***REMOVED*** {\n      var i,\n        setMatchers = [],\n        elementMatchers = [],\n        cached = compilerCache[selector + \" \"];\n      if (!cached***REMOVED*** {\n        // Generate a function of recursive functions that can be used to check each element\n        if (!match***REMOVED*** {\n          match = tokenize(selector***REMOVED***;\n        ***REMOVED***\n        i = match.length;\n        while (i--***REMOVED*** {\n          cached = matcherFromTokens(match[i]***REMOVED***;\n          if (cached[expando]***REMOVED*** {\n            setMatchers.push(cached***REMOVED***;\n          ***REMOVED*** else {\n            elementMatchers.push(cached***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n\n        // Cache the compiled function\n        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers***REMOVED******REMOVED***;\n\n        // Save selector and tokenization\n        cached.selector = selector;\n      ***REMOVED***\n      return cached;\n    ***REMOVED***;\n\n    /**\n     * A low-level selection function that works with Sizzle's compiled\n     *  selector functions\n     * @param {String|Function***REMOVED*** selector A selector or a pre-compiled\n     *  selector function built with Sizzle.compile\n     * @param {Element***REMOVED*** context\n     * @param {Array***REMOVED*** [results]\n     * @param {Array***REMOVED*** [seed] A set of elements to match against\n     */\n    select = Sizzle.select = function (selector, context, results, seed***REMOVED*** {\n      var i,\n        tokens,\n        token,\n        type,\n        find,\n        compiled = typeof selector === \"function\" && selector,\n        match = !seed && tokenize(selector = compiled.selector || selector***REMOVED***;\n      results = results || [];\n\n      // Try to minimize operations if there is only one selector in the list and no seed\n      // (the latter of which guarantees us context***REMOVED***\n      if (match.length === 1***REMOVED*** {\n        // Reduce context if the leading compound selector is an ID\n        tokens = match[0] = match[0].slice(0***REMOVED***;\n        if (tokens.length > 2 && (token = tokens[0]***REMOVED***.type === \"ID\" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]***REMOVED*** {\n          context = (Expr.find[\"ID\"](token.matches[0].replace(runescape, funescape***REMOVED***, context***REMOVED*** || []***REMOVED***[0];\n          if (!context***REMOVED*** {\n            return results;\n\n            // Precompiled matchers will still verify ancestry, so step up a level\n          ***REMOVED*** else if (compiled***REMOVED*** {\n            context = context.parentNode;\n          ***REMOVED***\n          selector = selector.slice(tokens.shift(***REMOVED***.value.length***REMOVED***;\n        ***REMOVED***\n\n        // Fetch a seed set for right-to-left matching\n        i = matchExpr[\"needsContext\"].test(selector***REMOVED*** ? 0 : tokens.length;\n        while (i--***REMOVED*** {\n          token = tokens[i];\n\n          // Abort if we hit a combinator\n          if (Expr.relative[type = token.type]***REMOVED*** {\n            break;\n          ***REMOVED***\n          if (find = Expr.find[type]***REMOVED*** {\n            // Search, expanding context for leading sibling combinators\n            if (seed = find(token.matches[0].replace(runescape, funescape***REMOVED***, rsibling.test(tokens[0].type***REMOVED*** && testContext(context.parentNode***REMOVED*** || context***REMOVED******REMOVED*** {\n              // If seed is empty or no tokens remain, we can return early\n              tokens.splice(i, 1***REMOVED***;\n              selector = seed.length && toSelector(tokens***REMOVED***;\n              if (!selector***REMOVED*** {\n                push.apply(results, seed***REMOVED***;\n                return results;\n              ***REMOVED***\n              break;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n\n      // Compile and execute a filtering function if one is not provided\n      // Provide `match` to avoid retokenization if we modified the selector above\n      (compiled || compile(selector, match***REMOVED******REMOVED***(seed, context, !documentIsHTML, results, !context || rsibling.test(selector***REMOVED*** && testContext(context.parentNode***REMOVED*** || context***REMOVED***;\n      return results;\n    ***REMOVED***;\n\n    // One-time assignments\n\n    // Sort stability\n    support.sortStable = expando.split(\"\"***REMOVED***.sort(sortOrder***REMOVED***.join(\"\"***REMOVED*** === expando;\n\n    // Support: Chrome 14-35+\n    // Always assume duplicates if they aren't passed to the comparison function\n    support.detectDuplicates = !!hasDuplicate;\n\n    // Initialize against the default document\n    setDocument(***REMOVED***;\n\n    // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27***REMOVED***\n    // Detached nodes confoundingly follow *each other*\n    support.sortDetached = assert(function (el***REMOVED*** {\n      // Should return 1, but returns 4 (following***REMOVED***\n      return el.compareDocumentPosition(document.createElement(\"fieldset\"***REMOVED******REMOVED*** & 1;\n    ***REMOVED******REMOVED***;\n\n    // Support: IE<8\n    // Prevent attribute/property \"interpolation\"\n    // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n    if (!assert(function (el***REMOVED*** {\n      el.innerHTML = \"<a href='#'></a>\";\n      return el.firstChild.getAttribute(\"href\"***REMOVED*** === \"#\";\n    ***REMOVED******REMOVED******REMOVED*** {\n      addHandle(\"type|href|height|width\", function (elem, name, isXML***REMOVED*** {\n        if (!isXML***REMOVED*** {\n          return elem.getAttribute(name, name.toLowerCase(***REMOVED*** === \"type\" ? 1 : 2***REMOVED***;\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n\n    // Support: IE<9\n    // Use defaultValue in place of getAttribute(\"value\"***REMOVED***\n    if (!support.attributes || !assert(function (el***REMOVED*** {\n      el.innerHTML = \"<input/>\";\n      el.firstChild.setAttribute(\"value\", \"\"***REMOVED***;\n      return el.firstChild.getAttribute(\"value\"***REMOVED*** === \"\";\n    ***REMOVED******REMOVED******REMOVED*** {\n      addHandle(\"value\", function (elem, _name, isXML***REMOVED*** {\n        if (!isXML && elem.nodeName.toLowerCase(***REMOVED*** === \"input\"***REMOVED*** {\n          return elem.defaultValue;\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n\n    // Support: IE<9\n    // Use getAttributeNode to fetch booleans when getAttribute lies\n    if (!assert(function (el***REMOVED*** {\n      return el.getAttribute(\"disabled\"***REMOVED*** == null;\n    ***REMOVED******REMOVED******REMOVED*** {\n      addHandle(booleans, function (elem, name, isXML***REMOVED*** {\n        var val;\n        if (!isXML***REMOVED*** {\n          return elem[name] === true ? name.toLowerCase(***REMOVED*** : (val = elem.getAttributeNode(name***REMOVED******REMOVED*** && val.specified ? val.value : null;\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n    return Sizzle;\n  ***REMOVED***(window***REMOVED***;\n  jQuery.find = Sizzle;\n  jQuery.expr = Sizzle.selectors;\n\n  // Deprecated\n  jQuery.expr[\":\"] = jQuery.expr.pseudos;\n  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n  jQuery.text = Sizzle.getText;\n  jQuery.isXMLDoc = Sizzle.isXML;\n  jQuery.contains = Sizzle.contains;\n  jQuery.escapeSelector = Sizzle.escape;\n  var dir = function (elem, dir, until***REMOVED*** {\n    var matched = [],\n      truncate = until !== undefined;\n    while ((elem = elem[dir]***REMOVED*** && elem.nodeType !== 9***REMOVED*** {\n      if (elem.nodeType === 1***REMOVED*** {\n        if (truncate && jQuery(elem***REMOVED***.is(until***REMOVED******REMOVED*** {\n          break;\n        ***REMOVED***\n        matched.push(elem***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***\n    return matched;\n  ***REMOVED***;\n  var siblings = function (n, elem***REMOVED*** {\n    var matched = [];\n    for (; n; n = n.nextSibling***REMOVED*** {\n      if (n.nodeType === 1 && n !== elem***REMOVED*** {\n        matched.push(n***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***\n    return matched;\n  ***REMOVED***;\n  var rneedsContext = jQuery.expr.match.needsContext;\n  function nodeName(elem, name***REMOVED*** {\n    return elem.nodeName && elem.nodeName.toLowerCase(***REMOVED*** === name.toLowerCase(***REMOVED***;\n  ***REMOVED***\n  ;\n  var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]****REMOVED***[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|***REMOVED***$/i;\n\n  // Implement the identical functionality for filter and not\n  function winnow(elements, qualifier, not***REMOVED*** {\n    if (isFunction(qualifier***REMOVED******REMOVED*** {\n      return jQuery.grep(elements, function (elem, i***REMOVED*** {\n        return !!qualifier.call(elem, i, elem***REMOVED*** !== not;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n\n    // Single element\n    if (qualifier.nodeType***REMOVED*** {\n      return jQuery.grep(elements, function (elem***REMOVED*** {\n        return elem === qualifier !== not;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n\n    // Arraylike of elements (jQuery, arguments, Array***REMOVED***\n    if (typeof qualifier !== \"string\"***REMOVED*** {\n      return jQuery.grep(elements, function (elem***REMOVED*** {\n        return indexOf.call(qualifier, elem***REMOVED*** > -1 !== not;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n\n    // Filtered directly for both simple and complex selectors\n    return jQuery.filter(qualifier, elements, not***REMOVED***;\n  ***REMOVED***\n  jQuery.filter = function (expr, elems, not***REMOVED*** {\n    var elem = elems[0];\n    if (not***REMOVED*** {\n      expr = \":not(\" + expr + \"***REMOVED***\";\n    ***REMOVED***\n    if (elems.length === 1 && elem.nodeType === 1***REMOVED*** {\n      return jQuery.find.matchesSelector(elem, expr***REMOVED*** ? [elem] : [];\n    ***REMOVED***\n    return jQuery.find.matches(expr, jQuery.grep(elems, function (elem***REMOVED*** {\n      return elem.nodeType === 1;\n    ***REMOVED******REMOVED******REMOVED***;\n  ***REMOVED***;\n  jQuery.fn.extend({\n    find: function (selector***REMOVED*** {\n      var i,\n        ret,\n        len = this.length,\n        self = this;\n      if (typeof selector !== \"string\"***REMOVED*** {\n        return this.pushStack(jQuery(selector***REMOVED***.filter(function (***REMOVED*** {\n          for (i = 0; i < len; i++***REMOVED*** {\n            if (jQuery.contains(self[i], this***REMOVED******REMOVED*** {\n              return true;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED******REMOVED******REMOVED***;\n      ***REMOVED***\n      ret = this.pushStack([]***REMOVED***;\n      for (i = 0; i < len; i++***REMOVED*** {\n        jQuery.find(selector, self[i], ret***REMOVED***;\n      ***REMOVED***\n      return len > 1 ? jQuery.uniqueSort(ret***REMOVED*** : ret;\n    ***REMOVED***,\n    filter: function (selector***REMOVED*** {\n      return this.pushStack(winnow(this, selector || [], false***REMOVED******REMOVED***;\n    ***REMOVED***,\n    not: function (selector***REMOVED*** {\n      return this.pushStack(winnow(this, selector || [], true***REMOVED******REMOVED***;\n    ***REMOVED***,\n    is: function (selector***REMOVED*** {\n      return !!winnow(this,\n      // If this is a positional/relative selector, check membership in the returned set\n      // so $(\"p:first\"***REMOVED***.is(\"p:last\"***REMOVED*** won't return true for a doc with two \"p\".\n      typeof selector === \"string\" && rneedsContext.test(selector***REMOVED*** ? jQuery(selector***REMOVED*** : selector || [], false***REMOVED***.length;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n\n  // Initialize a jQuery object\n\n  // A central reference to the root jQuery(document***REMOVED***\n  var rootjQuery,\n    // A simple way to check for HTML strings\n    // Prioritize #id over <tag> to avoid XSS via location.hash (#9521***REMOVED***\n    // Strict HTML recognition (#11290: must start with <***REMOVED***\n    // Shortcut simple #id case for speed\n    rquickExpr = /^(?:\\s*(<[\\w\\W]+>***REMOVED***[^>]*|#([\\w-]+***REMOVED******REMOVED***$/,\n    init = jQuery.fn.init = function (selector, context, root***REMOVED*** {\n      var match, elem;\n\n      // HANDLE: $(\"\"***REMOVED***, $(null***REMOVED***, $(undefined***REMOVED***, $(false***REMOVED***\n      if (!selector***REMOVED*** {\n        return this;\n      ***REMOVED***\n\n      // Method init(***REMOVED*** accepts an alternate rootjQuery\n      // so migrate can support jQuery.sub (gh-2101***REMOVED***\n      root = root || rootjQuery;\n\n      // Handle HTML strings\n      if (typeof selector === \"string\"***REMOVED*** {\n        if (selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3***REMOVED*** {\n          // Assume that strings that start and end with <> are HTML and skip the regex check\n          match = [null, selector, null];\n        ***REMOVED*** else {\n          match = rquickExpr.exec(selector***REMOVED***;\n        ***REMOVED***\n\n        // Match html or make sure no context is specified for #id\n        if (match && (match[1] || !context***REMOVED******REMOVED*** {\n          // HANDLE: $(html***REMOVED*** -> $(array***REMOVED***\n          if (match[1]***REMOVED*** {\n            context = context instanceof jQuery ? context[0] : context;\n\n            // Option to run scripts is true for back-compat\n            // Intentionally let the error be thrown if parseHTML is not present\n            jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true***REMOVED******REMOVED***;\n\n            // HANDLE: $(html, props***REMOVED***\n            if (rsingleTag.test(match[1]***REMOVED*** && jQuery.isPlainObject(context***REMOVED******REMOVED*** {\n              for (match in context***REMOVED*** {\n                // Properties of context are called as methods if possible\n                if (isFunction(this[match]***REMOVED******REMOVED*** {\n                  this[match](context[match]***REMOVED***;\n\n                  // ...and otherwise set as attributes\n                ***REMOVED*** else {\n                  this.attr(match, context[match]***REMOVED***;\n                ***REMOVED***\n              ***REMOVED***\n            ***REMOVED***\n            return this;\n\n            // HANDLE: $(#id***REMOVED***\n          ***REMOVED*** else {\n            elem = document.getElementById(match[2]***REMOVED***;\n            if (elem***REMOVED*** {\n              // Inject the element directly into the jQuery object\n              this[0] = elem;\n              this.length = 1;\n            ***REMOVED***\n            return this;\n          ***REMOVED***\n\n          // HANDLE: $(expr, $(...***REMOVED******REMOVED***\n        ***REMOVED*** else if (!context || context.jquery***REMOVED*** {\n          return (context || root***REMOVED***.find(selector***REMOVED***;\n\n          // HANDLE: $(expr, context***REMOVED***\n          // (which is just equivalent to: $(context***REMOVED***.find(expr***REMOVED***\n        ***REMOVED*** else {\n          return this.constructor(context***REMOVED***.find(selector***REMOVED***;\n        ***REMOVED***\n\n        // HANDLE: $(DOMElement***REMOVED***\n      ***REMOVED*** else if (selector.nodeType***REMOVED*** {\n        this[0] = selector;\n        this.length = 1;\n        return this;\n\n        // HANDLE: $(function***REMOVED***\n        // Shortcut for document ready\n      ***REMOVED*** else if (isFunction(selector***REMOVED******REMOVED*** {\n        return root.ready !== undefined ? root.ready(selector***REMOVED*** :\n        // Execute immediately if ready is not present\n        selector(jQuery***REMOVED***;\n      ***REMOVED***\n      return jQuery.makeArray(selector, this***REMOVED***;\n    ***REMOVED***;\n\n  // Give the init function the jQuery prototype for later instantiation\n  init.prototype = jQuery.fn;\n\n  // Initialize central reference\n  rootjQuery = jQuery(document***REMOVED***;\n  var rparentsprev = /^(?:parents|prev(?:Until|All***REMOVED******REMOVED***/,\n    // Methods guaranteed to produce a unique set when starting from a unique set\n    guaranteedUnique = {\n      children: true,\n      contents: true,\n      next: true,\n      prev: true\n    ***REMOVED***;\n  jQuery.fn.extend({\n    has: function (target***REMOVED*** {\n      var targets = jQuery(target, this***REMOVED***,\n        l = targets.length;\n      return this.filter(function (***REMOVED*** {\n        var i = 0;\n        for (; i < l; i++***REMOVED*** {\n          if (jQuery.contains(this, targets[i]***REMOVED******REMOVED*** {\n            return true;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***,\n    closest: function (selectors, context***REMOVED*** {\n      var cur,\n        i = 0,\n        l = this.length,\n        matched = [],\n        targets = typeof selectors !== \"string\" && jQuery(selectors***REMOVED***;\n\n      // Positional selectors never match, since there's no _selection_ context\n      if (!rneedsContext.test(selectors***REMOVED******REMOVED*** {\n        for (; i < l; i++***REMOVED*** {\n          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode***REMOVED*** {\n            // Always skip document fragments\n            if (cur.nodeType < 11 && (targets ? targets.index(cur***REMOVED*** > -1 :\n            // Don't pass non-elements to Sizzle\n            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors***REMOVED******REMOVED******REMOVED*** {\n              matched.push(cur***REMOVED***;\n              break;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched***REMOVED*** : matched***REMOVED***;\n    ***REMOVED***,\n    // Determine the position of an element within the set\n    index: function (elem***REMOVED*** {\n      // No argument, return index in parent\n      if (!elem***REMOVED*** {\n        return this[0] && this[0].parentNode ? this.first(***REMOVED***.prevAll(***REMOVED***.length : -1;\n      ***REMOVED***\n\n      // Index in selector\n      if (typeof elem === \"string\"***REMOVED*** {\n        return indexOf.call(jQuery(elem***REMOVED***, this[0]***REMOVED***;\n      ***REMOVED***\n\n      // Locate the position of the desired element\n      return indexOf.call(this,\n      // If it receives a jQuery object, the first element is used\n      elem.jquery ? elem[0] : elem***REMOVED***;\n    ***REMOVED***,\n    add: function (selector, context***REMOVED*** {\n      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(***REMOVED***, jQuery(selector, context***REMOVED******REMOVED******REMOVED******REMOVED***;\n    ***REMOVED***,\n    addBack: function (selector***REMOVED*** {\n      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector***REMOVED******REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  function sibling(cur, dir***REMOVED*** {\n    while ((cur = cur[dir]***REMOVED*** && cur.nodeType !== 1***REMOVED*** {***REMOVED***\n    return cur;\n  ***REMOVED***\n  jQuery.each({\n    parent: function (elem***REMOVED*** {\n      var parent = elem.parentNode;\n      return parent && parent.nodeType !== 11 ? parent : null;\n    ***REMOVED***,\n    parents: function (elem***REMOVED*** {\n      return dir(elem, \"parentNode\"***REMOVED***;\n    ***REMOVED***,\n    parentsUntil: function (elem, _i, until***REMOVED*** {\n      return dir(elem, \"parentNode\", until***REMOVED***;\n    ***REMOVED***,\n    next: function (elem***REMOVED*** {\n      return sibling(elem, \"nextSibling\"***REMOVED***;\n    ***REMOVED***,\n    prev: function (elem***REMOVED*** {\n      return sibling(elem, \"previousSibling\"***REMOVED***;\n    ***REMOVED***,\n    nextAll: function (elem***REMOVED*** {\n      return dir(elem, \"nextSibling\"***REMOVED***;\n    ***REMOVED***,\n    prevAll: function (elem***REMOVED*** {\n      return dir(elem, \"previousSibling\"***REMOVED***;\n    ***REMOVED***,\n    nextUntil: function (elem, _i, until***REMOVED*** {\n      return dir(elem, \"nextSibling\", until***REMOVED***;\n    ***REMOVED***,\n    prevUntil: function (elem, _i, until***REMOVED*** {\n      return dir(elem, \"previousSibling\", until***REMOVED***;\n    ***REMOVED***,\n    siblings: function (elem***REMOVED*** {\n      return siblings((elem.parentNode || {***REMOVED******REMOVED***.firstChild, elem***REMOVED***;\n    ***REMOVED***,\n    children: function (elem***REMOVED*** {\n      return siblings(elem.firstChild***REMOVED***;\n    ***REMOVED***,\n    contents: function (elem***REMOVED*** {\n      if (elem.contentDocument != null &&\n      // Support: IE 11+\n      // <object> elements with no `data` attribute has an object\n      // `contentDocument` with a `null` prototype.\n      getProto(elem.contentDocument***REMOVED******REMOVED*** {\n        return elem.contentDocument;\n      ***REMOVED***\n\n      // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n      // Treat the template element as a regular one in browsers that\n      // don't support it.\n      if (nodeName(elem, \"template\"***REMOVED******REMOVED*** {\n        elem = elem.content || elem;\n      ***REMOVED***\n      return jQuery.merge([], elem.childNodes***REMOVED***;\n    ***REMOVED***\n  ***REMOVED***, function (name, fn***REMOVED*** {\n    jQuery.fn[name] = function (until, selector***REMOVED*** {\n      var matched = jQuery.map(this, fn, until***REMOVED***;\n      if (name.slice(-5***REMOVED*** !== \"Until\"***REMOVED*** {\n        selector = until;\n      ***REMOVED***\n      if (selector && typeof selector === \"string\"***REMOVED*** {\n        matched = jQuery.filter(selector, matched***REMOVED***;\n      ***REMOVED***\n      if (this.length > 1***REMOVED*** {\n        // Remove duplicates\n        if (!guaranteedUnique[name]***REMOVED*** {\n          jQuery.uniqueSort(matched***REMOVED***;\n        ***REMOVED***\n\n        // Reverse order for parents* and prev-derivatives\n        if (rparentsprev.test(name***REMOVED******REMOVED*** {\n          matched.reverse(***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n      return this.pushStack(matched***REMOVED***;\n    ***REMOVED***;\n  ***REMOVED******REMOVED***;\n  var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n\n  // Convert String-formatted options into Object-formatted ones\n  function createOptions(options***REMOVED*** {\n    var object = {***REMOVED***;\n    jQuery.each(options.match(rnothtmlwhite***REMOVED*** || [], function (_, flag***REMOVED*** {\n      object[flag] = true;\n    ***REMOVED******REMOVED***;\n    return object;\n  ***REMOVED***\n\n  /*\n   * Create a callback list using the following parameters:\n   *\n   *\toptions: an optional list of space-separated options that will change how\n   *\t\t\tthe callback list behaves or a more traditional option object\n   *\n   * By default a callback list will act like an event callback list and can be\n   * \"fired\" multiple times.\n   *\n   * Possible options:\n   *\n   *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred***REMOVED***\n   *\n   *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n   *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n   *\t\t\t\t\tvalues (like a Deferred***REMOVED***\n   *\n   *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list***REMOVED***\n   *\n   *\tstopOnFalse:\tinterrupt callings when a callback returns false\n   *\n   */\n  jQuery.Callbacks = function (options***REMOVED*** {\n    // Convert options from String-formatted to Object-formatted if needed\n    // (we check in cache first***REMOVED***\n    options = typeof options === \"string\" ? createOptions(options***REMOVED*** : jQuery.extend({***REMOVED***, options***REMOVED***;\n    var\n      // Flag to know if list is currently firing\n      firing,\n      // Last fire value for non-forgettable lists\n      memory,\n      // Flag to know if list was already fired\n      fired,\n      // Flag to prevent firing\n      locked,\n      // Actual callback list\n      list = [],\n      // Queue of execution data for repeatable lists\n      queue = [],\n      // Index of currently firing callback (modified by add/remove as needed***REMOVED***\n      firingIndex = -1,\n      // Fire callbacks\n      fire = function (***REMOVED*** {\n        // Enforce single-firing\n        locked = locked || options.once;\n\n        // Execute callbacks for all pending executions,\n        // respecting firingIndex overrides and runtime changes\n        fired = firing = true;\n        for (; queue.length; firingIndex = -1***REMOVED*** {\n          memory = queue.shift(***REMOVED***;\n          while (++firingIndex < list.length***REMOVED*** {\n            // Run callback and check for early termination\n            if (list[firingIndex].apply(memory[0], memory[1]***REMOVED*** === false && options.stopOnFalse***REMOVED*** {\n              // Jump to end and forget the data so .add doesn't re-fire\n              firingIndex = list.length;\n              memory = false;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n\n        // Forget the data if we're done with it\n        if (!options.memory***REMOVED*** {\n          memory = false;\n        ***REMOVED***\n        firing = false;\n\n        // Clean up if we're done firing for good\n        if (locked***REMOVED*** {\n          // Keep an empty list if we have data for future add calls\n          if (memory***REMOVED*** {\n            list = [];\n\n            // Otherwise, this object is spent\n          ***REMOVED*** else {\n            list = \"\";\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***,\n      // Actual Callbacks object\n      self = {\n        // Add a callback or a collection of callbacks to the list\n        add: function (***REMOVED*** {\n          if (list***REMOVED*** {\n            // If we have memory from a past run, we should fire after adding\n            if (memory && !firing***REMOVED*** {\n              firingIndex = list.length - 1;\n              queue.push(memory***REMOVED***;\n            ***REMOVED***\n            (function add(args***REMOVED*** {\n              jQuery.each(args, function (_, arg***REMOVED*** {\n                if (isFunction(arg***REMOVED******REMOVED*** {\n                  if (!options.unique || !self.has(arg***REMOVED******REMOVED*** {\n                    list.push(arg***REMOVED***;\n                  ***REMOVED***\n                ***REMOVED*** else if (arg && arg.length && toType(arg***REMOVED*** !== \"string\"***REMOVED*** {\n                  // Inspect recursively\n                  add(arg***REMOVED***;\n                ***REMOVED***\n              ***REMOVED******REMOVED***;\n            ***REMOVED******REMOVED***(arguments***REMOVED***;\n            if (memory && !firing***REMOVED*** {\n              fire(***REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n          return this;\n        ***REMOVED***,\n        // Remove a callback from the list\n        remove: function (***REMOVED*** {\n          jQuery.each(arguments, function (_, arg***REMOVED*** {\n            var index;\n            while ((index = jQuery.inArray(arg, list, index***REMOVED******REMOVED*** > -1***REMOVED*** {\n              list.splice(index, 1***REMOVED***;\n\n              // Handle firing indexes\n              if (index <= firingIndex***REMOVED*** {\n                firingIndex--;\n              ***REMOVED***\n            ***REMOVED***\n          ***REMOVED******REMOVED***;\n          return this;\n        ***REMOVED***,\n        // Check if a given callback is in the list.\n        // If no argument is given, return whether or not list has callbacks attached.\n        has: function (fn***REMOVED*** {\n          return fn ? jQuery.inArray(fn, list***REMOVED*** > -1 : list.length > 0;\n        ***REMOVED***,\n        // Remove all callbacks from the list\n        empty: function (***REMOVED*** {\n          if (list***REMOVED*** {\n            list = [];\n          ***REMOVED***\n          return this;\n        ***REMOVED***,\n        // Disable .fire and .add\n        // Abort any current/pending executions\n        // Clear all callbacks and values\n        disable: function (***REMOVED*** {\n          locked = queue = [];\n          list = memory = \"\";\n          return this;\n        ***REMOVED***,\n        disabled: function (***REMOVED*** {\n          return !list;\n        ***REMOVED***,\n        // Disable .fire\n        // Also disable .add unless we have memory (since it would have no effect***REMOVED***\n        // Abort any pending executions\n        lock: function (***REMOVED*** {\n          locked = queue = [];\n          if (!memory && !firing***REMOVED*** {\n            list = memory = \"\";\n          ***REMOVED***\n          return this;\n        ***REMOVED***,\n        locked: function (***REMOVED*** {\n          return !!locked;\n        ***REMOVED***,\n        // Call all callbacks with the given context and arguments\n        fireWith: function (context, args***REMOVED*** {\n          if (!locked***REMOVED*** {\n            args = args || [];\n            args = [context, args.slice ? args.slice(***REMOVED*** : args];\n            queue.push(args***REMOVED***;\n            if (!firing***REMOVED*** {\n              fire(***REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n          return this;\n        ***REMOVED***,\n        // Call all the callbacks with the given arguments\n        fire: function (***REMOVED*** {\n          self.fireWith(this, arguments***REMOVED***;\n          return this;\n        ***REMOVED***,\n        // To know if the callbacks have already been called at least once\n        fired: function (***REMOVED*** {\n          return !!fired;\n        ***REMOVED***\n      ***REMOVED***;\n    return self;\n  ***REMOVED***;\n  function Identity(v***REMOVED*** {\n    return v;\n  ***REMOVED***\n  function Thrower(ex***REMOVED*** {\n    throw ex;\n  ***REMOVED***\n  function adoptValue(value, resolve, reject, noValue***REMOVED*** {\n    var method;\n    try {\n      // Check for promise aspect first to privilege synchronous behavior\n      if (value && isFunction(method = value.promise***REMOVED******REMOVED*** {\n        method.call(value***REMOVED***.done(resolve***REMOVED***.fail(reject***REMOVED***;\n\n        // Other thenables\n      ***REMOVED*** else if (value && isFunction(method = value.then***REMOVED******REMOVED*** {\n        method.call(value, resolve, reject***REMOVED***;\n\n        // Other non-thenables\n      ***REMOVED*** else {\n        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n        // * false: [ value ].slice( 0 ***REMOVED*** => resolve( value ***REMOVED***\n        // * true: [ value ].slice( 1 ***REMOVED*** => resolve(***REMOVED***\n        resolve.apply(undefined, [value].slice(noValue***REMOVED******REMOVED***;\n      ***REMOVED***\n\n      // For Promises/A+, convert exceptions into rejections\n      // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n      // Deferred#then to conditionally suppress rejection.\n    ***REMOVED*** catch (value***REMOVED*** {\n      // Support: Android 4.0 only\n      // Strict mode functions invoked without .call/.apply get global-object context\n      reject.apply(undefined, [value]***REMOVED***;\n    ***REMOVED***\n  ***REMOVED***\n  jQuery.extend({\n    Deferred: function (func***REMOVED*** {\n      var tuples = [\n        // action, add listener, callbacks,\n        // ... .then handlers, argument index, [final state]\n        [\"notify\", \"progress\", jQuery.Callbacks(\"memory\"***REMOVED***, jQuery.Callbacks(\"memory\"***REMOVED***, 2], [\"resolve\", \"done\", jQuery.Callbacks(\"once memory\"***REMOVED***, jQuery.Callbacks(\"once memory\"***REMOVED***, 0, \"resolved\"], [\"reject\", \"fail\", jQuery.Callbacks(\"once memory\"***REMOVED***, jQuery.Callbacks(\"once memory\"***REMOVED***, 1, \"rejected\"]],\n        state = \"pending\",\n        promise = {\n          state: function (***REMOVED*** {\n            return state;\n          ***REMOVED***,\n          always: function (***REMOVED*** {\n            deferred.done(arguments***REMOVED***.fail(arguments***REMOVED***;\n            return this;\n          ***REMOVED***,\n          \"catch\": function (fn***REMOVED*** {\n            return promise.then(null, fn***REMOVED***;\n          ***REMOVED***,\n          // Keep pipe for back-compat\n          pipe: function /* fnDone, fnFail, fnProgress */\n          (***REMOVED*** {\n            var fns = arguments;\n            return jQuery.Deferred(function (newDefer***REMOVED*** {\n              jQuery.each(tuples, function (_i, tuple***REMOVED*** {\n                // Map tuples (progress, done, fail***REMOVED*** to arguments (done, fail, progress***REMOVED***\n                var fn = isFunction(fns[tuple[4]]***REMOVED*** && fns[tuple[4]];\n\n                // deferred.progress(function(***REMOVED*** { bind to newDefer or newDefer.notify ***REMOVED******REMOVED***\n                // deferred.done(function(***REMOVED*** { bind to newDefer or newDefer.resolve ***REMOVED******REMOVED***\n                // deferred.fail(function(***REMOVED*** { bind to newDefer or newDefer.reject ***REMOVED******REMOVED***\n                deferred[tuple[1]](function (***REMOVED*** {\n                  var returned = fn && fn.apply(this, arguments***REMOVED***;\n                  if (returned && isFunction(returned.promise***REMOVED******REMOVED*** {\n                    returned.promise(***REMOVED***.progress(newDefer.notify***REMOVED***.done(newDefer.resolve***REMOVED***.fail(newDefer.reject***REMOVED***;\n                  ***REMOVED*** else {\n                    newDefer[tuple[0] + \"With\"](this, fn ? [returned] : arguments***REMOVED***;\n                  ***REMOVED***\n                ***REMOVED******REMOVED***;\n              ***REMOVED******REMOVED***;\n              fns = null;\n            ***REMOVED******REMOVED***.promise(***REMOVED***;\n          ***REMOVED***,\n          then: function (onFulfilled, onRejected, onProgress***REMOVED*** {\n            var maxDepth = 0;\n            function resolve(depth, deferred, handler, special***REMOVED*** {\n              return function (***REMOVED*** {\n                var that = this,\n                  args = arguments,\n                  mightThrow = function (***REMOVED*** {\n                    var returned, then;\n\n                    // Support: Promises/A+ section 2.3.3.3.3\n                    // https://promisesaplus.com/#point-59\n                    // Ignore double-resolution attempts\n                    if (depth < maxDepth***REMOVED*** {\n                      return;\n                    ***REMOVED***\n                    returned = handler.apply(that, args***REMOVED***;\n\n                    // Support: Promises/A+ section 2.3.1\n                    // https://promisesaplus.com/#point-48\n                    if (returned === deferred.promise(***REMOVED******REMOVED*** {\n                      throw new TypeError(\"Thenable self-resolution\"***REMOVED***;\n                    ***REMOVED***\n\n                    // Support: Promises/A+ sections 2.3.3.1, 3.5\n                    // https://promisesaplus.com/#point-54\n                    // https://promisesaplus.com/#point-75\n                    // Retrieve `then` only once\n                    then = returned && (\n                    // Support: Promises/A+ section 2.3.4\n                    // https://promisesaplus.com/#point-64\n                    // Only check objects and functions for thenability\n                    typeof returned === \"object\" || typeof returned === \"function\"***REMOVED*** && returned.then;\n\n                    // Handle a returned thenable\n                    if (isFunction(then***REMOVED******REMOVED*** {\n                      // Special processors (notify***REMOVED*** just wait for resolution\n                      if (special***REMOVED*** {\n                        then.call(returned, resolve(maxDepth, deferred, Identity, special***REMOVED***, resolve(maxDepth, deferred, Thrower, special***REMOVED******REMOVED***;\n\n                        // Normal processors (resolve***REMOVED*** also hook into progress\n                      ***REMOVED*** else {\n                        // ...and disregard older resolution values\n                        maxDepth++;\n                        then.call(returned, resolve(maxDepth, deferred, Identity, special***REMOVED***, resolve(maxDepth, deferred, Thrower, special***REMOVED***, resolve(maxDepth, deferred, Identity, deferred.notifyWith***REMOVED******REMOVED***;\n                      ***REMOVED***\n\n                      // Handle all other returned values\n                    ***REMOVED*** else {\n                      // Only substitute handlers pass on context\n                      // and multiple values (non-spec behavior***REMOVED***\n                      if (handler !== Identity***REMOVED*** {\n                        that = undefined;\n                        args = [returned];\n                      ***REMOVED***\n\n                      // Process the value(s***REMOVED***\n                      // Default process is resolve\n                      (special || deferred.resolveWith***REMOVED***(that, args***REMOVED***;\n                    ***REMOVED***\n                  ***REMOVED***,\n                  // Only normal processors (resolve***REMOVED*** catch and reject exceptions\n                  process = special ? mightThrow : function (***REMOVED*** {\n                    try {\n                      mightThrow(***REMOVED***;\n                    ***REMOVED*** catch (e***REMOVED*** {\n                      if (jQuery.Deferred.exceptionHook***REMOVED*** {\n                        jQuery.Deferred.exceptionHook(e, process.stackTrace***REMOVED***;\n                      ***REMOVED***\n\n                      // Support: Promises/A+ section 2.3.3.3.4.1\n                      // https://promisesaplus.com/#point-61\n                      // Ignore post-resolution exceptions\n                      if (depth + 1 >= maxDepth***REMOVED*** {\n                        // Only substitute handlers pass on context\n                        // and multiple values (non-spec behavior***REMOVED***\n                        if (handler !== Thrower***REMOVED*** {\n                          that = undefined;\n                          args = [e];\n                        ***REMOVED***\n                        deferred.rejectWith(that, args***REMOVED***;\n                      ***REMOVED***\n                    ***REMOVED***\n                  ***REMOVED***;\n\n                // Support: Promises/A+ section 2.3.3.3.1\n                // https://promisesaplus.com/#point-57\n                // Re-resolve promises immediately to dodge false rejection from\n                // subsequent errors\n                if (depth***REMOVED*** {\n                  process(***REMOVED***;\n                ***REMOVED*** else {\n                  // Call an optional hook to record the stack, in case of exception\n                  // since it's otherwise lost when execution goes async\n                  if (jQuery.Deferred.getStackHook***REMOVED*** {\n                    process.stackTrace = jQuery.Deferred.getStackHook(***REMOVED***;\n                  ***REMOVED***\n                  window.setTimeout(process***REMOVED***;\n                ***REMOVED***\n              ***REMOVED***;\n            ***REMOVED***\n            return jQuery.Deferred(function (newDefer***REMOVED*** {\n              // progress_handlers.add( ... ***REMOVED***\n              tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress***REMOVED*** ? onProgress : Identity, newDefer.notifyWith***REMOVED******REMOVED***;\n\n              // fulfilled_handlers.add( ... ***REMOVED***\n              tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled***REMOVED*** ? onFulfilled : Identity***REMOVED******REMOVED***;\n\n              // rejected_handlers.add( ... ***REMOVED***\n              tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected***REMOVED*** ? onRejected : Thrower***REMOVED******REMOVED***;\n            ***REMOVED******REMOVED***.promise(***REMOVED***;\n          ***REMOVED***,\n          // Get a promise for this deferred\n          // If obj is provided, the promise aspect is added to the object\n          promise: function (obj***REMOVED*** {\n            return obj != null ? jQuery.extend(obj, promise***REMOVED*** : promise;\n          ***REMOVED***\n        ***REMOVED***,\n        deferred = {***REMOVED***;\n\n      // Add list-specific methods\n      jQuery.each(tuples, function (i, tuple***REMOVED*** {\n        var list = tuple[2],\n          stateString = tuple[5];\n\n        // promise.progress = list.add\n        // promise.done = list.add\n        // promise.fail = list.add\n        promise[tuple[1]] = list.add;\n\n        // Handle state\n        if (stateString***REMOVED*** {\n          list.add(function (***REMOVED*** {\n            // state = \"resolved\" (i.e., fulfilled***REMOVED***\n            // state = \"rejected\"\n            state = stateString;\n          ***REMOVED***,\n          // rejected_callbacks.disable\n          // fulfilled_callbacks.disable\n          tuples[3 - i][2].disable,\n          // rejected_handlers.disable\n          // fulfilled_handlers.disable\n          tuples[3 - i][3].disable,\n          // progress_callbacks.lock\n          tuples[0][2].lock,\n          // progress_handlers.lock\n          tuples[0][3].lock***REMOVED***;\n        ***REMOVED***\n\n        // progress_handlers.fire\n        // fulfilled_handlers.fire\n        // rejected_handlers.fire\n        list.add(tuple[3].fire***REMOVED***;\n\n        // deferred.notify = function(***REMOVED*** { deferred.notifyWith(...***REMOVED*** ***REMOVED***\n        // deferred.resolve = function(***REMOVED*** { deferred.resolveWith(...***REMOVED*** ***REMOVED***\n        // deferred.reject = function(***REMOVED*** { deferred.rejectWith(...***REMOVED*** ***REMOVED***\n        deferred[tuple[0]] = function (***REMOVED*** {\n          deferred[tuple[0] + \"With\"](this === deferred ? undefined : this, arguments***REMOVED***;\n          return this;\n        ***REMOVED***;\n\n        // deferred.notifyWith = list.fireWith\n        // deferred.resolveWith = list.fireWith\n        // deferred.rejectWith = list.fireWith\n        deferred[tuple[0] + \"With\"] = list.fireWith;\n      ***REMOVED******REMOVED***;\n\n      // Make the deferred a promise\n      promise.promise(deferred***REMOVED***;\n\n      // Call given func if any\n      if (func***REMOVED*** {\n        func.call(deferred, deferred***REMOVED***;\n      ***REMOVED***\n\n      // All done!\n      return deferred;\n    ***REMOVED***,\n    // Deferred helper\n    when: function (singleValue***REMOVED*** {\n      var\n        // count of uncompleted subordinates\n        remaining = arguments.length,\n        // count of unprocessed arguments\n        i = remaining,\n        // subordinate fulfillment data\n        resolveContexts = Array(i***REMOVED***,\n        resolveValues = slice.call(arguments***REMOVED***,\n        // the master Deferred\n        master = jQuery.Deferred(***REMOVED***,\n        // subordinate callback factory\n        updateFunc = function (i***REMOVED*** {\n          return function (value***REMOVED*** {\n            resolveContexts[i] = this;\n            resolveValues[i] = arguments.length > 1 ? slice.call(arguments***REMOVED*** : value;\n            if (! --remaining***REMOVED*** {\n              master.resolveWith(resolveContexts, resolveValues***REMOVED***;\n            ***REMOVED***\n          ***REMOVED***;\n        ***REMOVED***;\n\n      // Single- and empty arguments are adopted like Promise.resolve\n      if (remaining <= 1***REMOVED*** {\n        adoptValue(singleValue, master.done(updateFunc(i***REMOVED******REMOVED***.resolve, master.reject, !remaining***REMOVED***;\n\n        // Use .then(***REMOVED*** to unwrap secondary thenables (cf. gh-3000***REMOVED***\n        if (master.state(***REMOVED*** === \"pending\" || isFunction(resolveValues[i] && resolveValues[i].then***REMOVED******REMOVED*** {\n          return master.then(***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n\n      // Multiple arguments are aggregated like Promise.all array elements\n      while (i--***REMOVED*** {\n        adoptValue(resolveValues[i], updateFunc(i***REMOVED***, master.reject***REMOVED***;\n      ***REMOVED***\n      return master.promise(***REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n\n  // These usually indicate a programmer mistake during development,\n  // warn about them ASAP rather than swallowing them by default.\n  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI***REMOVED***Error$/;\n  jQuery.Deferred.exceptionHook = function (error, stack***REMOVED*** {\n    // Support: IE 8 - 9 only\n    // Console exists when dev tools are open, which can happen at any time\n    if (window.console && window.console.warn && error && rerrorNames.test(error.name***REMOVED******REMOVED*** {\n      window.console.warn(\"jQuery.Deferred exception: \" + error.message, error.stack, stack***REMOVED***;\n    ***REMOVED***\n  ***REMOVED***;\n  jQuery.readyException = function (error***REMOVED*** {\n    window.setTimeout(function (***REMOVED*** {\n      throw error;\n    ***REMOVED******REMOVED***;\n  ***REMOVED***;\n\n  // The deferred used on DOM ready\n  var readyList = jQuery.Deferred(***REMOVED***;\n  jQuery.fn.ready = function (fn***REMOVED*** {\n    readyList.then(fn***REMOVED***\n\n    // Wrap jQuery.readyException in a function so that the lookup\n    // happens at the time of error handling instead of callback\n    // registration.\n    .catch(function (error***REMOVED*** {\n      jQuery.readyException(error***REMOVED***;\n    ***REMOVED******REMOVED***;\n    return this;\n  ***REMOVED***;\n  jQuery.extend({\n    // Is the DOM ready to be used? Set to true once it occurs.\n    isReady: false,\n    // A counter to track how many items to wait for before\n    // the ready event fires. See #6781\n    readyWait: 1,\n    // Handle when the DOM is ready\n    ready: function (wait***REMOVED*** {\n      // Abort if there are pending holds or we're already ready\n      if (wait === true ? --jQuery.readyWait : jQuery.isReady***REMOVED*** {\n        return;\n      ***REMOVED***\n\n      // Remember that the DOM is ready\n      jQuery.isReady = true;\n\n      // If a normal DOM Ready event fired, decrement, and wait if need be\n      if (wait !== true && --jQuery.readyWait > 0***REMOVED*** {\n        return;\n      ***REMOVED***\n\n      // If there are functions bound, to execute\n      readyList.resolveWith(document, [jQuery]***REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.ready.then = readyList.then;\n\n  // The ready event handler and self cleanup method\n  function completed(***REMOVED*** {\n    document.removeEventListener(\"DOMContentLoaded\", completed***REMOVED***;\n    window.removeEventListener(\"load\", completed***REMOVED***;\n    jQuery.ready(***REMOVED***;\n  ***REMOVED***\n\n  // Catch cases where $(document***REMOVED***.ready(***REMOVED*** is called\n  // after the browser event has already occurred.\n  // Support: IE <=9 - 10 only\n  // Older IE sometimes signals \"interactive\" too soon\n  if (document.readyState === \"complete\" || document.readyState !== \"loading\" && !document.documentElement.doScroll***REMOVED*** {\n    // Handle it asynchronously to allow scripts the opportunity to delay ready\n    window.setTimeout(jQuery.ready***REMOVED***;\n  ***REMOVED*** else {\n    // Use the handy event callback\n    document.addEventListener(\"DOMContentLoaded\", completed***REMOVED***;\n\n    // A fallback to window.onload, that will always work\n    window.addEventListener(\"load\", completed***REMOVED***;\n  ***REMOVED***\n\n  // Multifunctional method to get and set values of a collection\n  // The value/s can optionally be executed if it's a function\n  var access = function (elems, fn, key, value, chainable, emptyGet, raw***REMOVED*** {\n    var i = 0,\n      len = elems.length,\n      bulk = key == null;\n\n    // Sets many values\n    if (toType(key***REMOVED*** === \"object\"***REMOVED*** {\n      chainable = true;\n      for (i in key***REMOVED*** {\n        access(elems, fn, i, key[i], true, emptyGet, raw***REMOVED***;\n      ***REMOVED***\n\n      // Sets one value\n    ***REMOVED*** else if (value !== undefined***REMOVED*** {\n      chainable = true;\n      if (!isFunction(value***REMOVED******REMOVED*** {\n        raw = true;\n      ***REMOVED***\n      if (bulk***REMOVED*** {\n        // Bulk operations run against the entire set\n        if (raw***REMOVED*** {\n          fn.call(elems, value***REMOVED***;\n          fn = null;\n\n          // ...except when executing function values\n        ***REMOVED*** else {\n          bulk = fn;\n          fn = function (elem, _key, value***REMOVED*** {\n            return bulk.call(jQuery(elem***REMOVED***, value***REMOVED***;\n          ***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n      if (fn***REMOVED*** {\n        for (; i < len; i++***REMOVED*** {\n          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key***REMOVED******REMOVED******REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n    if (chainable***REMOVED*** {\n      return elems;\n    ***REMOVED***\n\n    // Gets\n    if (bulk***REMOVED*** {\n      return fn.call(elems***REMOVED***;\n    ***REMOVED***\n    return len ? fn(elems[0], key***REMOVED*** : emptyGet;\n  ***REMOVED***;\n\n  // Matches dashed string for camelizing\n  var rmsPrefix = /^-ms-/,\n    rdashAlpha = /-([a-z]***REMOVED***/g;\n\n  // Used by camelCase as callback to replace(***REMOVED***\n  function fcamelCase(_all, letter***REMOVED*** {\n    return letter.toUpperCase(***REMOVED***;\n  ***REMOVED***\n\n  // Convert dashed to camelCase; used by the css and data modules\n  // Support: IE <=9 - 11, Edge 12 - 15\n  // Microsoft forgot to hump their vendor prefix (#9572***REMOVED***\n  function camelCase(string***REMOVED*** {\n    return string.replace(rmsPrefix, \"ms-\"***REMOVED***.replace(rdashAlpha, fcamelCase***REMOVED***;\n  ***REMOVED***\n  var acceptData = function (owner***REMOVED*** {\n    // Accepts only:\n    //  - Node\n    //    - Node.ELEMENT_NODE\n    //    - Node.DOCUMENT_NODE\n    //  - Object\n    //    - Any\n    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n  ***REMOVED***;\n  function Data(***REMOVED*** {\n    this.expando = jQuery.expando + Data.uid++;\n  ***REMOVED***\n  Data.uid = 1;\n  Data.prototype = {\n    cache: function (owner***REMOVED*** {\n      // Check if the owner object already has a cache\n      var value = owner[this.expando];\n\n      // If not, create one\n      if (!value***REMOVED*** {\n        value = {***REMOVED***;\n\n        // We can accept data for non-element nodes in modern browsers,\n        // but we should not, see #8335.\n        // Always return an empty object.\n        if (acceptData(owner***REMOVED******REMOVED*** {\n          // If it is a node unlikely to be stringify-ed or looped over\n          // use plain assignment\n          if (owner.nodeType***REMOVED*** {\n            owner[this.expando] = value;\n\n            // Otherwise secure it in a non-enumerable property\n            // configurable must be true to allow the property to be\n            // deleted when data is removed\n          ***REMOVED*** else {\n            Object.defineProperty(owner, this.expando, {\n              value: value,\n              configurable: true\n            ***REMOVED******REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n      return value;\n    ***REMOVED***,\n    set: function (owner, data, value***REMOVED*** {\n      var prop,\n        cache = this.cache(owner***REMOVED***;\n\n      // Handle: [ owner, key, value ] args\n      // Always use camelCase key (gh-2257***REMOVED***\n      if (typeof data === \"string\"***REMOVED*** {\n        cache[camelCase(data***REMOVED***] = value;\n\n        // Handle: [ owner, { properties ***REMOVED*** ] args\n      ***REMOVED*** else {\n        // Copy the properties one-by-one to the cache object\n        for (prop in data***REMOVED*** {\n          cache[camelCase(prop***REMOVED***] = data[prop];\n        ***REMOVED***\n      ***REMOVED***\n      return cache;\n    ***REMOVED***,\n    get: function (owner, key***REMOVED*** {\n      return key === undefined ? this.cache(owner***REMOVED*** :\n      // Always use camelCase key (gh-2257***REMOVED***\n      owner[this.expando] && owner[this.expando][camelCase(key***REMOVED***];\n    ***REMOVED***,\n    access: function (owner, key, value***REMOVED*** {\n      // In cases where either:\n      //\n      //   1. No key was specified\n      //   2. A string key was specified, but no value provided\n      //\n      // Take the \"read\" path and allow the get method to determine\n      // which value to return, respectively either:\n      //\n      //   1. The entire cache object\n      //   2. The data stored at the key\n      //\n      if (key === undefined || key && typeof key === \"string\" && value === undefined***REMOVED*** {\n        return this.get(owner, key***REMOVED***;\n      ***REMOVED***\n\n      // When the key is not a string, or both a key and value\n      // are specified, set or extend (existing objects***REMOVED*** with either:\n      //\n      //   1. An object of properties\n      //   2. A key and value\n      //\n      this.set(owner, key, value***REMOVED***;\n\n      // Since the \"set\" path can have two possible entry points\n      // return the expected data based on which path was taken[*]\n      return value !== undefined ? value : key;\n    ***REMOVED***,\n    remove: function (owner, key***REMOVED*** {\n      var i,\n        cache = owner[this.expando];\n      if (cache === undefined***REMOVED*** {\n        return;\n      ***REMOVED***\n      if (key !== undefined***REMOVED*** {\n        // Support array or space separated string of keys\n        if (Array.isArray(key***REMOVED******REMOVED*** {\n          // If key is an array of keys...\n          // We always set camelCase keys, so remove that.\n          key = key.map(camelCase***REMOVED***;\n        ***REMOVED*** else {\n          key = camelCase(key***REMOVED***;\n\n          // If a key with the spaces exists, use it.\n          // Otherwise, create an array by matching non-whitespace\n          key = key in cache ? [key] : key.match(rnothtmlwhite***REMOVED*** || [];\n        ***REMOVED***\n        i = key.length;\n        while (i--***REMOVED*** {\n          delete cache[key[i]];\n        ***REMOVED***\n      ***REMOVED***\n\n      // Remove the expando if there's no more data\n      if (key === undefined || jQuery.isEmptyObject(cache***REMOVED******REMOVED*** {\n        // Support: Chrome <=35 - 45\n        // Webkit & Blink performance suffers when deleting properties\n        // from DOM nodes, so set to undefined instead\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted***REMOVED***\n        if (owner.nodeType***REMOVED*** {\n          owner[this.expando] = undefined;\n        ***REMOVED*** else {\n          delete owner[this.expando];\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***,\n    hasData: function (owner***REMOVED*** {\n      var cache = owner[this.expando];\n      return cache !== undefined && !jQuery.isEmptyObject(cache***REMOVED***;\n    ***REMOVED***\n  ***REMOVED***;\n  var dataPriv = new Data(***REMOVED***;\n  var dataUser = new Data(***REMOVED***;\n\n  //\tImplementation Summary\n  //\n  //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n  //\t2. Improve the module's maintainability by reducing the storage\n  //\t\tpaths to a single mechanism.\n  //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n  //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData***REMOVED***\n  //\t5. Avoid exposing implementation details on user objects (eg. expando properties***REMOVED***\n  //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n  var rbrace = /^(?:\\{[\\w\\W]*\\***REMOVED***|\\[[\\w\\W]*\\]***REMOVED***$/,\n    rmultiDash = /[A-Z]/g;\n  function getData(data***REMOVED*** {\n    if (data === \"true\"***REMOVED*** {\n      return true;\n    ***REMOVED***\n    if (data === \"false\"***REMOVED*** {\n      return false;\n    ***REMOVED***\n    if (data === \"null\"***REMOVED*** {\n      return null;\n    ***REMOVED***\n\n    // Only convert to a number if it doesn't change the string\n    if (data === +data + \"\"***REMOVED*** {\n      return +data;\n    ***REMOVED***\n    if (rbrace.test(data***REMOVED******REMOVED*** {\n      return JSON.parse(data***REMOVED***;\n    ***REMOVED***\n    return data;\n  ***REMOVED***\n  function dataAttr(elem, key, data***REMOVED*** {\n    var name;\n\n    // If nothing was found internally, try to fetch any\n    // data from the HTML5 data-* attribute\n    if (data === undefined && elem.nodeType === 1***REMOVED*** {\n      name = \"data-\" + key.replace(rmultiDash, \"-$&\"***REMOVED***.toLowerCase(***REMOVED***;\n      data = elem.getAttribute(name***REMOVED***;\n      if (typeof data === \"string\"***REMOVED*** {\n        try {\n          data = getData(data***REMOVED***;\n        ***REMOVED*** catch (e***REMOVED*** {***REMOVED***\n\n        // Make sure we set the data so it isn't changed later\n        dataUser.set(elem, key, data***REMOVED***;\n      ***REMOVED*** else {\n        data = undefined;\n      ***REMOVED***\n    ***REMOVED***\n    return data;\n  ***REMOVED***\n  jQuery.extend({\n    hasData: function (elem***REMOVED*** {\n      return dataUser.hasData(elem***REMOVED*** || dataPriv.hasData(elem***REMOVED***;\n    ***REMOVED***,\n    data: function (elem, name, data***REMOVED*** {\n      return dataUser.access(elem, name, data***REMOVED***;\n    ***REMOVED***,\n    removeData: function (elem, name***REMOVED*** {\n      dataUser.remove(elem, name***REMOVED***;\n    ***REMOVED***,\n    // TODO: Now that all calls to _data and _removeData have been replaced\n    // with direct calls to dataPriv methods, these can be deprecated.\n    _data: function (elem, name, data***REMOVED*** {\n      return dataPriv.access(elem, name, data***REMOVED***;\n    ***REMOVED***,\n    _removeData: function (elem, name***REMOVED*** {\n      dataPriv.remove(elem, name***REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.fn.extend({\n    data: function (key, value***REMOVED*** {\n      var i,\n        name,\n        data,\n        elem = this[0],\n        attrs = elem && elem.attributes;\n\n      // Gets all values\n      if (key === undefined***REMOVED*** {\n        if (this.length***REMOVED*** {\n          data = dataUser.get(elem***REMOVED***;\n          if (elem.nodeType === 1 && !dataPriv.get(elem, \"hasDataAttrs\"***REMOVED******REMOVED*** {\n            i = attrs.length;\n            while (i--***REMOVED*** {\n              // Support: IE 11 only\n              // The attrs elements can be null (#14894***REMOVED***\n              if (attrs[i]***REMOVED*** {\n                name = attrs[i].name;\n                if (name.indexOf(\"data-\"***REMOVED*** === 0***REMOVED*** {\n                  name = camelCase(name.slice(5***REMOVED******REMOVED***;\n                  dataAttr(elem, name, data[name]***REMOVED***;\n                ***REMOVED***\n              ***REMOVED***\n            ***REMOVED***\n            dataPriv.set(elem, \"hasDataAttrs\", true***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n        return data;\n      ***REMOVED***\n\n      // Sets multiple values\n      if (typeof key === \"object\"***REMOVED*** {\n        return this.each(function (***REMOVED*** {\n          dataUser.set(this, key***REMOVED***;\n        ***REMOVED******REMOVED***;\n      ***REMOVED***\n      return access(this, function (value***REMOVED*** {\n        var data;\n\n        // The calling jQuery object (element matches***REMOVED*** is not empty\n        // (and therefore has an element appears at this[ 0 ]***REMOVED*** and the\n        // `value` parameter was not undefined. An empty jQuery object\n        // will result in `undefined` for elem = this[ 0 ] which will\n        // throw an exception if an attempt to read a data cache is made.\n        if (elem && value === undefined***REMOVED*** {\n          // Attempt to get data from the cache\n          // The key will always be camelCased in Data\n          data = dataUser.get(elem, key***REMOVED***;\n          if (data !== undefined***REMOVED*** {\n            return data;\n          ***REMOVED***\n\n          // Attempt to \"discover\" the data in\n          // HTML5 custom data-* attrs\n          data = dataAttr(elem, key***REMOVED***;\n          if (data !== undefined***REMOVED*** {\n            return data;\n          ***REMOVED***\n\n          // We tried really hard, but the data doesn't exist.\n          return;\n        ***REMOVED***\n\n        // Set the data...\n        this.each(function (***REMOVED*** {\n          // We always store the camelCased key\n          dataUser.set(this, key, value***REMOVED***;\n        ***REMOVED******REMOVED***;\n      ***REMOVED***, null, value, arguments.length > 1, null, true***REMOVED***;\n    ***REMOVED***,\n    removeData: function (key***REMOVED*** {\n      return this.each(function (***REMOVED*** {\n        dataUser.remove(this, key***REMOVED***;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.extend({\n    queue: function (elem, type, data***REMOVED*** {\n      var queue;\n      if (elem***REMOVED*** {\n        type = (type || \"fx\"***REMOVED*** + \"queue\";\n        queue = dataPriv.get(elem, type***REMOVED***;\n\n        // Speed up dequeue by getting out quickly if this is just a lookup\n        if (data***REMOVED*** {\n          if (!queue || Array.isArray(data***REMOVED******REMOVED*** {\n            queue = dataPriv.access(elem, type, jQuery.makeArray(data***REMOVED******REMOVED***;\n          ***REMOVED*** else {\n            queue.push(data***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n        return queue || [];\n      ***REMOVED***\n    ***REMOVED***,\n    dequeue: function (elem, type***REMOVED*** {\n      type = type || \"fx\";\n      var queue = jQuery.queue(elem, type***REMOVED***,\n        startLength = queue.length,\n        fn = queue.shift(***REMOVED***,\n        hooks = jQuery._queueHooks(elem, type***REMOVED***,\n        next = function (***REMOVED*** {\n          jQuery.dequeue(elem, type***REMOVED***;\n        ***REMOVED***;\n\n      // If the fx queue is dequeued, always remove the progress sentinel\n      if (fn === \"inprogress\"***REMOVED*** {\n        fn = queue.shift(***REMOVED***;\n        startLength--;\n      ***REMOVED***\n      if (fn***REMOVED*** {\n        // Add a progress sentinel to prevent the fx queue from being\n        // automatically dequeued\n        if (type === \"fx\"***REMOVED*** {\n          queue.unshift(\"inprogress\"***REMOVED***;\n        ***REMOVED***\n\n        // Clear up the last queue stop function\n        delete hooks.stop;\n        fn.call(elem, next, hooks***REMOVED***;\n      ***REMOVED***\n      if (!startLength && hooks***REMOVED*** {\n        hooks.empty.fire(***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***,\n    // Not public - generate a queueHooks object, or return the current one\n    _queueHooks: function (elem, type***REMOVED*** {\n      var key = type + \"queueHooks\";\n      return dataPriv.get(elem, key***REMOVED*** || dataPriv.access(elem, key, {\n        empty: jQuery.Callbacks(\"once memory\"***REMOVED***.add(function (***REMOVED*** {\n          dataPriv.remove(elem, [type + \"queue\", key]***REMOVED***;\n        ***REMOVED******REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.fn.extend({\n    queue: function (type, data***REMOVED*** {\n      var setter = 2;\n      if (typeof type !== \"string\"***REMOVED*** {\n        data = type;\n        type = \"fx\";\n        setter--;\n      ***REMOVED***\n      if (arguments.length < setter***REMOVED*** {\n        return jQuery.queue(this[0], type***REMOVED***;\n      ***REMOVED***\n      return data === undefined ? this : this.each(function (***REMOVED*** {\n        var queue = jQuery.queue(this, type, data***REMOVED***;\n\n        // Ensure a hooks for this queue\n        jQuery._queueHooks(this, type***REMOVED***;\n        if (type === \"fx\" && queue[0] !== \"inprogress\"***REMOVED*** {\n          jQuery.dequeue(this, type***REMOVED***;\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***,\n    dequeue: function (type***REMOVED*** {\n      return this.each(function (***REMOVED*** {\n        jQuery.dequeue(this, type***REMOVED***;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***,\n    clearQueue: function (type***REMOVED*** {\n      return this.queue(type || \"fx\", []***REMOVED***;\n    ***REMOVED***,\n    // Get a promise resolved when queues of a certain type\n    // are emptied (fx is the type by default***REMOVED***\n    promise: function (type, obj***REMOVED*** {\n      var tmp,\n        count = 1,\n        defer = jQuery.Deferred(***REMOVED***,\n        elements = this,\n        i = this.length,\n        resolve = function (***REMOVED*** {\n          if (! --count***REMOVED*** {\n            defer.resolveWith(elements, [elements]***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***;\n      if (typeof type !== \"string\"***REMOVED*** {\n        obj = type;\n        type = undefined;\n      ***REMOVED***\n      type = type || \"fx\";\n      while (i--***REMOVED*** {\n        tmp = dataPriv.get(elements[i], type + \"queueHooks\"***REMOVED***;\n        if (tmp && tmp.empty***REMOVED*** {\n          count++;\n          tmp.empty.add(resolve***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n      resolve(***REMOVED***;\n      return defer.promise(obj***REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  var pnum = /[+-]?(?:\\d*\\.|***REMOVED***\\d+(?:[eE][+-]?\\d+|***REMOVED***/.source;\n  var rcssNum = new RegExp(\"^(?:([+-]***REMOVED***=|***REMOVED***(\" + pnum + \"***REMOVED***([a-z%]****REMOVED***$\", \"i\"***REMOVED***;\n  var cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n  var documentElement = document.documentElement;\n  var isAttached = function (elem***REMOVED*** {\n      return jQuery.contains(elem.ownerDocument, elem***REMOVED***;\n    ***REMOVED***,\n    composed = {\n      composed: true\n    ***REMOVED***;\n\n  // Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n  // Check attachment across shadow DOM boundaries when possible (gh-3504***REMOVED***\n  // Support: iOS 10.0-10.2 only\n  // Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n  // leading to errors. We need to check for `getRootNode`.\n  if (documentElement.getRootNode***REMOVED*** {\n    isAttached = function (elem***REMOVED*** {\n      return jQuery.contains(elem.ownerDocument, elem***REMOVED*** || elem.getRootNode(composed***REMOVED*** === elem.ownerDocument;\n    ***REMOVED***;\n  ***REMOVED***\n  var isHiddenWithinTree = function (elem, el***REMOVED*** {\n    // isHiddenWithinTree might be called from jQuery#filter function;\n    // in that case, element will be second argument\n    elem = el || elem;\n\n    // Inline style trumps all\n    return elem.style.display === \"none\" || elem.style.display === \"\" &&\n    // Otherwise, check computed style\n    // Support: Firefox <=43 - 45\n    // Disconnected elements can have computed display: none, so first confirm that elem is\n    // in the document.\n    isAttached(elem***REMOVED*** && jQuery.css(elem, \"display\"***REMOVED*** === \"none\";\n  ***REMOVED***;\n  function adjustCSS(elem, prop, valueParts, tween***REMOVED*** {\n    var adjusted,\n      scale,\n      maxIterations = 20,\n      currentValue = tween ? function (***REMOVED*** {\n        return tween.cur(***REMOVED***;\n      ***REMOVED*** : function (***REMOVED*** {\n        return jQuery.css(elem, prop, \"\"***REMOVED***;\n      ***REMOVED***,\n      initial = currentValue(***REMOVED***,\n      unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"***REMOVED***,\n      // Starting value computation is required for potential unit mismatches\n      initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || unit !== \"px\" && +initial***REMOVED*** && rcssNum.exec(jQuery.css(elem, prop***REMOVED******REMOVED***;\n    if (initialInUnit && initialInUnit[3] !== unit***REMOVED*** {\n      // Support: Firefox <=54\n      // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144***REMOVED***\n      initial = initial / 2;\n\n      // Trust units reported by jQuery.css\n      unit = unit || initialInUnit[3];\n\n      // Iteratively approximate from a nonzero starting point\n      initialInUnit = +initial || 1;\n      while (maxIterations--***REMOVED*** {\n        // Evaluate and update our best guess (doubling guesses that zero out***REMOVED***.\n        // Finish if the scale equals or crosses 1 (making the old*new product non-positive***REMOVED***.\n        jQuery.style(elem, prop, initialInUnit + unit***REMOVED***;\n        if ((1 - scale***REMOVED*** * (1 - (scale = currentValue(***REMOVED*** / initial || 0.5***REMOVED******REMOVED*** <= 0***REMOVED*** {\n          maxIterations = 0;\n        ***REMOVED***\n        initialInUnit = initialInUnit / scale;\n      ***REMOVED***\n      initialInUnit = initialInUnit * 2;\n      jQuery.style(elem, prop, initialInUnit + unit***REMOVED***;\n\n      // Make sure we update the tween properties later on\n      valueParts = valueParts || [];\n    ***REMOVED***\n    if (valueParts***REMOVED*** {\n      initialInUnit = +initialInUnit || +initial || 0;\n\n      // Apply relative offset (+=/-=***REMOVED*** if specified\n      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1***REMOVED*** * valueParts[2] : +valueParts[2];\n      if (tween***REMOVED*** {\n        tween.unit = unit;\n        tween.start = initialInUnit;\n        tween.end = adjusted;\n      ***REMOVED***\n    ***REMOVED***\n    return adjusted;\n  ***REMOVED***\n  var defaultDisplayMap = {***REMOVED***;\n  function getDefaultDisplay(elem***REMOVED*** {\n    var temp,\n      doc = elem.ownerDocument,\n      nodeName = elem.nodeName,\n      display = defaultDisplayMap[nodeName];\n    if (display***REMOVED*** {\n      return display;\n    ***REMOVED***\n    temp = doc.body.appendChild(doc.createElement(nodeName***REMOVED******REMOVED***;\n    display = jQuery.css(temp, \"display\"***REMOVED***;\n    temp.parentNode.removeChild(temp***REMOVED***;\n    if (display === \"none\"***REMOVED*** {\n      display = \"block\";\n    ***REMOVED***\n    defaultDisplayMap[nodeName] = display;\n    return display;\n  ***REMOVED***\n  function showHide(elements, show***REMOVED*** {\n    var display,\n      elem,\n      values = [],\n      index = 0,\n      length = elements.length;\n\n    // Determine new display value for elements that need to change\n    for (; index < length; index++***REMOVED*** {\n      elem = elements[index];\n      if (!elem.style***REMOVED*** {\n        continue;\n      ***REMOVED***\n      display = elem.style.display;\n      if (show***REMOVED*** {\n        // Since we force visibility upon cascade-hidden elements, an immediate (and slow***REMOVED***\n        // check is required in this first loop unless we have a nonempty display value (either\n        // inline or about-to-be-restored***REMOVED***\n        if (display === \"none\"***REMOVED*** {\n          values[index] = dataPriv.get(elem, \"display\"***REMOVED*** || null;\n          if (!values[index]***REMOVED*** {\n            elem.style.display = \"\";\n          ***REMOVED***\n        ***REMOVED***\n        if (elem.style.display === \"\" && isHiddenWithinTree(elem***REMOVED******REMOVED*** {\n          values[index] = getDefaultDisplay(elem***REMOVED***;\n        ***REMOVED***\n      ***REMOVED*** else {\n        if (display !== \"none\"***REMOVED*** {\n          values[index] = \"none\";\n\n          // Remember what we're overwriting\n          dataPriv.set(elem, \"display\", display***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n\n    // Set the display of the elements in a second loop to avoid constant reflow\n    for (index = 0; index < length; index++***REMOVED*** {\n      if (values[index] != null***REMOVED*** {\n        elements[index].style.display = values[index];\n      ***REMOVED***\n    ***REMOVED***\n    return elements;\n  ***REMOVED***\n  jQuery.fn.extend({\n    show: function (***REMOVED*** {\n      return showHide(this, true***REMOVED***;\n    ***REMOVED***,\n    hide: function (***REMOVED*** {\n      return showHide(this***REMOVED***;\n    ***REMOVED***,\n    toggle: function (state***REMOVED*** {\n      if (typeof state === \"boolean\"***REMOVED*** {\n        return state ? this.show(***REMOVED*** : this.hide(***REMOVED***;\n      ***REMOVED***\n      return this.each(function (***REMOVED*** {\n        if (isHiddenWithinTree(this***REMOVED******REMOVED*** {\n          jQuery(this***REMOVED***.show(***REMOVED***;\n        ***REMOVED*** else {\n          jQuery(this***REMOVED***.hide(***REMOVED***;\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  var rcheckableType = /^(?:checkbox|radio***REMOVED***$/i;\n  var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]****REMOVED***/i;\n  var rscriptType = /^$|^module$|\\/(?:java|ecma***REMOVED***script/i;\n  (function (***REMOVED*** {\n    var fragment = document.createDocumentFragment(***REMOVED***,\n      div = fragment.appendChild(document.createElement(\"div\"***REMOVED******REMOVED***,\n      input = document.createElement(\"input\"***REMOVED***;\n\n    // Support: Android 4.0 - 4.3 only\n    // Check state lost if the name is set (#11217***REMOVED***\n    // Support: Windows Web Apps (WWA***REMOVED***\n    // `name` and `type` must use .setAttribute for WWA (#14901***REMOVED***\n    input.setAttribute(\"type\", \"radio\"***REMOVED***;\n    input.setAttribute(\"checked\", \"checked\"***REMOVED***;\n    input.setAttribute(\"name\", \"t\"***REMOVED***;\n    div.appendChild(input***REMOVED***;\n\n    // Support: Android <=4.1 only\n    // Older WebKit doesn't clone checked state correctly in fragments\n    support.checkClone = div.cloneNode(true***REMOVED***.cloneNode(true***REMOVED***.lastChild.checked;\n\n    // Support: IE <=11 only\n    // Make sure textarea (and checkbox***REMOVED*** defaultValue is properly cloned\n    div.innerHTML = \"<textarea>x</textarea>\";\n    support.noCloneChecked = !!div.cloneNode(true***REMOVED***.lastChild.defaultValue;\n\n    // Support: IE <=9 only\n    // IE <=9 replaces <option> tags with their contents when inserted outside of\n    // the select element.\n    div.innerHTML = \"<option></option>\";\n    support.option = !!div.lastChild;\n  ***REMOVED******REMOVED***(***REMOVED***;\n\n  // We have to close these tags to support XHTML (#13200***REMOVED***\n  var wrapMap = {\n    // XHTML parsers do not magically insert elements in the\n    // same way that tag soup parsers do. So we cannot shorten\n    // this by omitting <tbody> or other required elements.\n    thead: [1, \"<table>\", \"</table>\"],\n    col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n    tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n    td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n    _default: [0, \"\", \"\"]\n  ***REMOVED***;\n  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n  wrapMap.th = wrapMap.td;\n\n  // Support: IE <=9 only\n  if (!support.option***REMOVED*** {\n    wrapMap.optgroup = wrapMap.option = [1, \"<select multiple='multiple'>\", \"</select>\"];\n  ***REMOVED***\n  function getAll(context, tag***REMOVED*** {\n    // Support: IE <=9 - 11 only\n    // Use typeof to avoid zero-argument method invocation on host objects (#15151***REMOVED***\n    var ret;\n    if (typeof context.getElementsByTagName !== \"undefined\"***REMOVED*** {\n      ret = context.getElementsByTagName(tag || \"*\"***REMOVED***;\n    ***REMOVED*** else if (typeof context.querySelectorAll !== \"undefined\"***REMOVED*** {\n      ret = context.querySelectorAll(tag || \"*\"***REMOVED***;\n    ***REMOVED*** else {\n      ret = [];\n    ***REMOVED***\n    if (tag === undefined || tag && nodeName(context, tag***REMOVED******REMOVED*** {\n      return jQuery.merge([context], ret***REMOVED***;\n    ***REMOVED***\n    return ret;\n  ***REMOVED***\n\n  // Mark scripts as having already been evaluated\n  function setGlobalEval(elems, refElements***REMOVED*** {\n    var i = 0,\n      l = elems.length;\n    for (; i < l; i++***REMOVED*** {\n      dataPriv.set(elems[i], \"globalEval\", !refElements || dataPriv.get(refElements[i], \"globalEval\"***REMOVED******REMOVED***;\n    ***REMOVED***\n  ***REMOVED***\n  var rhtml = /<|&#?\\w+;/;\n  function buildFragment(elems, context, scripts, selection, ignored***REMOVED*** {\n    var elem,\n      tmp,\n      tag,\n      wrap,\n      attached,\n      j,\n      fragment = context.createDocumentFragment(***REMOVED***,\n      nodes = [],\n      i = 0,\n      l = elems.length;\n    for (; i < l; i++***REMOVED*** {\n      elem = elems[i];\n      if (elem || elem === 0***REMOVED*** {\n        // Add nodes directly\n        if (toType(elem***REMOVED*** === \"object\"***REMOVED*** {\n          // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike***REMOVED*** throws on ancient WebKit\n          jQuery.merge(nodes, elem.nodeType ? [elem] : elem***REMOVED***;\n\n          // Convert non-html into a text node\n        ***REMOVED*** else if (!rhtml.test(elem***REMOVED******REMOVED*** {\n          nodes.push(context.createTextNode(elem***REMOVED******REMOVED***;\n\n          // Convert html into DOM nodes\n        ***REMOVED*** else {\n          tmp = tmp || fragment.appendChild(context.createElement(\"div\"***REMOVED******REMOVED***;\n\n          // Deserialize a standard representation\n          tag = (rtagName.exec(elem***REMOVED*** || [\"\", \"\"]***REMOVED***[1].toLowerCase(***REMOVED***;\n          wrap = wrapMap[tag] || wrapMap._default;\n          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem***REMOVED*** + wrap[2];\n\n          // Descend through wrappers to the right content\n          j = wrap[0];\n          while (j--***REMOVED*** {\n            tmp = tmp.lastChild;\n          ***REMOVED***\n\n          // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike***REMOVED*** throws on ancient WebKit\n          jQuery.merge(nodes, tmp.childNodes***REMOVED***;\n\n          // Remember the top-level container\n          tmp = fragment.firstChild;\n\n          // Ensure the created nodes are orphaned (#12392***REMOVED***\n          tmp.textContent = \"\";\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n\n    // Remove wrapper from fragment\n    fragment.textContent = \"\";\n    i = 0;\n    while (elem = nodes[i++]***REMOVED*** {\n      // Skip elements already in the context collection (trac-4087***REMOVED***\n      if (selection && jQuery.inArray(elem, selection***REMOVED*** > -1***REMOVED*** {\n        if (ignored***REMOVED*** {\n          ignored.push(elem***REMOVED***;\n        ***REMOVED***\n        continue;\n      ***REMOVED***\n      attached = isAttached(elem***REMOVED***;\n\n      // Append to fragment\n      tmp = getAll(fragment.appendChild(elem***REMOVED***, \"script\"***REMOVED***;\n\n      // Preserve script evaluation history\n      if (attached***REMOVED*** {\n        setGlobalEval(tmp***REMOVED***;\n      ***REMOVED***\n\n      // Capture executables\n      if (scripts***REMOVED*** {\n        j = 0;\n        while (elem = tmp[j++]***REMOVED*** {\n          if (rscriptType.test(elem.type || \"\"***REMOVED******REMOVED*** {\n            scripts.push(elem***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n    return fragment;\n  ***REMOVED***\n  var rkeyEvent = /^key/,\n    rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop***REMOVED***|click/,\n    rtypenamespace = /^([^.]****REMOVED***(?:\\.(.+***REMOVED***|***REMOVED***/;\n  function returnTrue(***REMOVED*** {\n    return true;\n  ***REMOVED***\n  function returnFalse(***REMOVED*** {\n    return false;\n  ***REMOVED***\n\n  // Support: IE <=9 - 11+\n  // focus(***REMOVED*** and blur(***REMOVED*** are asynchronous, except when they are no-op.\n  // So expect focus to be synchronous when the element is already active,\n  // and blur to be synchronous when the element is not already active.\n  // (focus and blur are always synchronous in other supported browsers,\n  // this just defines when we can count on it***REMOVED***.\n  function expectSync(elem, type***REMOVED*** {\n    return elem === safeActiveElement(***REMOVED*** === (type === \"focus\"***REMOVED***;\n  ***REMOVED***\n\n  // Support: IE <=9 only\n  // Accessing document.activeElement can throw unexpectedly\n  // https://bugs.jquery.com/ticket/13393\n  function safeActiveElement(***REMOVED*** {\n    try {\n      return document.activeElement;\n    ***REMOVED*** catch (err***REMOVED*** {***REMOVED***\n  ***REMOVED***\n  function on(elem, types, selector, data, fn, one***REMOVED*** {\n    var origFn, type;\n\n    // Types can be a map of types/handlers\n    if (typeof types === \"object\"***REMOVED*** {\n      // ( types-Object, selector, data ***REMOVED***\n      if (typeof selector !== \"string\"***REMOVED*** {\n        // ( types-Object, data ***REMOVED***\n        data = data || selector;\n        selector = undefined;\n      ***REMOVED***\n      for (type in types***REMOVED*** {\n        on(elem, type, selector, data, types[type], one***REMOVED***;\n      ***REMOVED***\n      return elem;\n    ***REMOVED***\n    if (data == null && fn == null***REMOVED*** {\n      // ( types, fn ***REMOVED***\n      fn = selector;\n      data = selector = undefined;\n    ***REMOVED*** else if (fn == null***REMOVED*** {\n      if (typeof selector === \"string\"***REMOVED*** {\n        // ( types, selector, fn ***REMOVED***\n        fn = data;\n        data = undefined;\n      ***REMOVED*** else {\n        // ( types, data, fn ***REMOVED***\n        fn = data;\n        data = selector;\n        selector = undefined;\n      ***REMOVED***\n    ***REMOVED***\n    if (fn === false***REMOVED*** {\n      fn = returnFalse;\n    ***REMOVED*** else if (!fn***REMOVED*** {\n      return elem;\n    ***REMOVED***\n    if (one === 1***REMOVED*** {\n      origFn = fn;\n      fn = function (event***REMOVED*** {\n        // Can use an empty set, since event contains the info\n        jQuery(***REMOVED***.off(event***REMOVED***;\n        return origFn.apply(this, arguments***REMOVED***;\n      ***REMOVED***;\n\n      // Use same guid so caller can remove using origFn\n      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++***REMOVED***;\n    ***REMOVED***\n    return elem.each(function (***REMOVED*** {\n      jQuery.event.add(this, types, fn, data, selector***REMOVED***;\n    ***REMOVED******REMOVED***;\n  ***REMOVED***\n\n  /*\n   * Helper functions for managing events -- not part of the public interface.\n   * Props to Dean Edwards' addEvent library for many of the ideas.\n   */\n  jQuery.event = {\n    global: {***REMOVED***,\n    add: function (elem, types, handler, data, selector***REMOVED*** {\n      var handleObjIn,\n        eventHandle,\n        tmp,\n        events,\n        t,\n        handleObj,\n        special,\n        handlers,\n        type,\n        namespaces,\n        origType,\n        elemData = dataPriv.get(elem***REMOVED***;\n\n      // Only attach events to objects that accept data\n      if (!acceptData(elem***REMOVED******REMOVED*** {\n        return;\n      ***REMOVED***\n\n      // Caller can pass in an object of custom data in lieu of the handler\n      if (handler.handler***REMOVED*** {\n        handleObjIn = handler;\n        handler = handleObjIn.handler;\n        selector = handleObjIn.selector;\n      ***REMOVED***\n\n      // Ensure that invalid selectors throw exceptions at attach time\n      // Evaluate against documentElement in case elem is a non-element node (e.g., document***REMOVED***\n      if (selector***REMOVED*** {\n        jQuery.find.matchesSelector(documentElement, selector***REMOVED***;\n      ***REMOVED***\n\n      // Make sure that the handler has a unique ID, used to find/remove it later\n      if (!handler.guid***REMOVED*** {\n        handler.guid = jQuery.guid++;\n      ***REMOVED***\n\n      // Init the element's event structure and main handler, if this is the first\n      if (!(events = elemData.events***REMOVED******REMOVED*** {\n        events = elemData.events = Object.create(null***REMOVED***;\n      ***REMOVED***\n      if (!(eventHandle = elemData.handle***REMOVED******REMOVED*** {\n        eventHandle = elemData.handle = function (e***REMOVED*** {\n          // Discard the second event of a jQuery.event.trigger(***REMOVED*** and\n          // when an event is called after a page has unloaded\n          return typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments***REMOVED*** : undefined;\n        ***REMOVED***;\n      ***REMOVED***\n\n      // Handle multiple events separated by a space\n      types = (types || \"\"***REMOVED***.match(rnothtmlwhite***REMOVED*** || [\"\"];\n      t = types.length;\n      while (t--***REMOVED*** {\n        tmp = rtypenamespace.exec(types[t]***REMOVED*** || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\"***REMOVED***.split(\".\"***REMOVED***.sort(***REMOVED***;\n\n        // There *must* be a type, no attaching namespace-only handlers\n        if (!type***REMOVED*** {\n          continue;\n        ***REMOVED***\n\n        // If event changes its type, use the special event handlers for the changed type\n        special = jQuery.event.special[type] || {***REMOVED***;\n\n        // If selector defined, determine special event api type, otherwise given type\n        type = (selector ? special.delegateType : special.bindType***REMOVED*** || type;\n\n        // Update special based on newly reset type\n        special = jQuery.event.special[type] || {***REMOVED***;\n\n        // handleObj is passed to all event handlers\n        handleObj = jQuery.extend({\n          type: type,\n          origType: origType,\n          data: data,\n          handler: handler,\n          guid: handler.guid,\n          selector: selector,\n          needsContext: selector && jQuery.expr.match.needsContext.test(selector***REMOVED***,\n          namespace: namespaces.join(\".\"***REMOVED***\n        ***REMOVED***, handleObjIn***REMOVED***;\n\n        // Init the event handler queue if we're the first\n        if (!(handlers = events[type]***REMOVED******REMOVED*** {\n          handlers = events[type] = [];\n          handlers.delegateCount = 0;\n\n          // Only use addEventListener if the special events handler returns false\n          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle***REMOVED*** === false***REMOVED*** {\n            if (elem.addEventListener***REMOVED*** {\n              elem.addEventListener(type, eventHandle***REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n        if (special.add***REMOVED*** {\n          special.add.call(elem, handleObj***REMOVED***;\n          if (!handleObj.handler.guid***REMOVED*** {\n            handleObj.handler.guid = handler.guid;\n          ***REMOVED***\n        ***REMOVED***\n\n        // Add to the element's handler list, delegates in front\n        if (selector***REMOVED*** {\n          handlers.splice(handlers.delegateCount++, 0, handleObj***REMOVED***;\n        ***REMOVED*** else {\n          handlers.push(handleObj***REMOVED***;\n        ***REMOVED***\n\n        // Keep track of which events have ever been used, for event optimization\n        jQuery.event.global[type] = true;\n      ***REMOVED***\n    ***REMOVED***,\n    // Detach an event or set of events from an element\n    remove: function (elem, types, handler, selector, mappedTypes***REMOVED*** {\n      var j,\n        origCount,\n        tmp,\n        events,\n        t,\n        handleObj,\n        special,\n        handlers,\n        type,\n        namespaces,\n        origType,\n        elemData = dataPriv.hasData(elem***REMOVED*** && dataPriv.get(elem***REMOVED***;\n      if (!elemData || !(events = elemData.events***REMOVED******REMOVED*** {\n        return;\n      ***REMOVED***\n\n      // Once for each type.namespace in types; type may be omitted\n      types = (types || \"\"***REMOVED***.match(rnothtmlwhite***REMOVED*** || [\"\"];\n      t = types.length;\n      while (t--***REMOVED*** {\n        tmp = rtypenamespace.exec(types[t]***REMOVED*** || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\"***REMOVED***.split(\".\"***REMOVED***.sort(***REMOVED***;\n\n        // Unbind all events (on this namespace, if provided***REMOVED*** for the element\n        if (!type***REMOVED*** {\n          for (type in events***REMOVED*** {\n            jQuery.event.remove(elem, type + types[t], handler, selector, true***REMOVED***;\n          ***REMOVED***\n          continue;\n        ***REMOVED***\n        special = jQuery.event.special[type] || {***REMOVED***;\n        type = (selector ? special.delegateType : special.bindType***REMOVED*** || type;\n        handlers = events[type] || [];\n        tmp = tmp[2] && new RegExp(\"(^|\\\\.***REMOVED***\" + namespaces.join(\"\\\\.(?:.*\\\\.|***REMOVED***\"***REMOVED*** + \"(\\\\.|$***REMOVED***\"***REMOVED***;\n\n        // Remove matching events\n        origCount = j = handlers.length;\n        while (j--***REMOVED*** {\n          handleObj = handlers[j];\n          if ((mappedTypes || origType === handleObj.origType***REMOVED*** && (!handler || handler.guid === handleObj.guid***REMOVED*** && (!tmp || tmp.test(handleObj.namespace***REMOVED******REMOVED*** && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector***REMOVED******REMOVED*** {\n            handlers.splice(j, 1***REMOVED***;\n            if (handleObj.selector***REMOVED*** {\n              handlers.delegateCount--;\n            ***REMOVED***\n            if (special.remove***REMOVED*** {\n              special.remove.call(elem, handleObj***REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n\n        // Remove generic event handler if we removed something and no more handlers exist\n        // (avoids potential for endless recursion during removal of special event handlers***REMOVED***\n        if (origCount && !handlers.length***REMOVED*** {\n          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle***REMOVED*** === false***REMOVED*** {\n            jQuery.removeEvent(elem, type, elemData.handle***REMOVED***;\n          ***REMOVED***\n          delete events[type];\n        ***REMOVED***\n      ***REMOVED***\n\n      // Remove data and the expando if it's no longer used\n      if (jQuery.isEmptyObject(events***REMOVED******REMOVED*** {\n        dataPriv.remove(elem, \"handle events\"***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***,\n    dispatch: function (nativeEvent***REMOVED*** {\n      var i,\n        j,\n        ret,\n        matched,\n        handleObj,\n        handlerQueue,\n        args = new Array(arguments.length***REMOVED***,\n        // Make a writable jQuery.Event from the native event object\n        event = jQuery.event.fix(nativeEvent***REMOVED***,\n        handlers = (dataPriv.get(this, \"events\"***REMOVED*** || Object.create(null***REMOVED******REMOVED***[event.type] || [],\n        special = jQuery.event.special[event.type] || {***REMOVED***;\n\n      // Use the fix-ed jQuery.Event rather than the (read-only***REMOVED*** native event\n      args[0] = event;\n      for (i = 1; i < arguments.length; i++***REMOVED*** {\n        args[i] = arguments[i];\n      ***REMOVED***\n      event.delegateTarget = this;\n\n      // Call the preDispatch hook for the mapped type, and let it bail if desired\n      if (special.preDispatch && special.preDispatch.call(this, event***REMOVED*** === false***REMOVED*** {\n        return;\n      ***REMOVED***\n\n      // Determine handlers\n      handlerQueue = jQuery.event.handlers.call(this, event, handlers***REMOVED***;\n\n      // Run delegates first; they may want to stop propagation beneath us\n      i = 0;\n      while ((matched = handlerQueue[i++]***REMOVED*** && !event.isPropagationStopped(***REMOVED******REMOVED*** {\n        event.currentTarget = matched.elem;\n        j = 0;\n        while ((handleObj = matched.handlers[j++]***REMOVED*** && !event.isImmediatePropagationStopped(***REMOVED******REMOVED*** {\n          // If the event is namespaced, then each handler is only invoked if it is\n          // specially universal or its namespaces are a superset of the event's.\n          if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace***REMOVED******REMOVED*** {\n            event.handleObj = handleObj;\n            event.data = handleObj.data;\n            ret = ((jQuery.event.special[handleObj.origType] || {***REMOVED******REMOVED***.handle || handleObj.handler***REMOVED***.apply(matched.elem, args***REMOVED***;\n            if (ret !== undefined***REMOVED*** {\n              if ((event.result = ret***REMOVED*** === false***REMOVED*** {\n                event.preventDefault(***REMOVED***;\n                event.stopPropagation(***REMOVED***;\n              ***REMOVED***\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n\n      // Call the postDispatch hook for the mapped type\n      if (special.postDispatch***REMOVED*** {\n        special.postDispatch.call(this, event***REMOVED***;\n      ***REMOVED***\n      return event.result;\n    ***REMOVED***,\n    handlers: function (event, handlers***REMOVED*** {\n      var i,\n        handleObj,\n        sel,\n        matchedHandlers,\n        matchedSelectors,\n        handlerQueue = [],\n        delegateCount = handlers.delegateCount,\n        cur = event.target;\n\n      // Find delegate handlers\n      if (delegateCount &&\n      // Support: IE <=9\n      // Black-hole SVG <use> instance trees (trac-13180***REMOVED***\n      cur.nodeType &&\n      // Support: Firefox <=42\n      // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861***REMOVED***\n      // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n      // Support: IE 11 only\n      // ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343***REMOVED***\n      !(event.type === \"click\" && event.button >= 1***REMOVED******REMOVED*** {\n        for (; cur !== this; cur = cur.parentNode || this***REMOVED*** {\n          // Don't check non-elements (#13208***REMOVED***\n          // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764***REMOVED***\n          if (cur.nodeType === 1 && !(event.type === \"click\" && cur.disabled === true***REMOVED******REMOVED*** {\n            matchedHandlers = [];\n            matchedSelectors = {***REMOVED***;\n            for (i = 0; i < delegateCount; i++***REMOVED*** {\n              handleObj = handlers[i];\n\n              // Don't conflict with Object.prototype properties (#13203***REMOVED***\n              sel = handleObj.selector + \" \";\n              if (matchedSelectors[sel] === undefined***REMOVED*** {\n                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this***REMOVED***.index(cur***REMOVED*** > -1 : jQuery.find(sel, this, null, [cur]***REMOVED***.length;\n              ***REMOVED***\n              if (matchedSelectors[sel]***REMOVED*** {\n                matchedHandlers.push(handleObj***REMOVED***;\n              ***REMOVED***\n            ***REMOVED***\n            if (matchedHandlers.length***REMOVED*** {\n              handlerQueue.push({\n                elem: cur,\n                handlers: matchedHandlers\n              ***REMOVED******REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n\n      // Add the remaining (directly-bound***REMOVED*** handlers\n      cur = this;\n      if (delegateCount < handlers.length***REMOVED*** {\n        handlerQueue.push({\n          elem: cur,\n          handlers: handlers.slice(delegateCount***REMOVED***\n        ***REMOVED******REMOVED***;\n      ***REMOVED***\n      return handlerQueue;\n    ***REMOVED***,\n    addProp: function (name, hook***REMOVED*** {\n      Object.defineProperty(jQuery.Event.prototype, name, {\n        enumerable: true,\n        configurable: true,\n        get: isFunction(hook***REMOVED*** ? function (***REMOVED*** {\n          if (this.originalEvent***REMOVED*** {\n            return hook(this.originalEvent***REMOVED***;\n          ***REMOVED***\n        ***REMOVED*** : function (***REMOVED*** {\n          if (this.originalEvent***REMOVED*** {\n            return this.originalEvent[name];\n          ***REMOVED***\n        ***REMOVED***,\n        set: function (value***REMOVED*** {\n          Object.defineProperty(this, name, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: value\n          ***REMOVED******REMOVED***;\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***,\n    fix: function (originalEvent***REMOVED*** {\n      return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent***REMOVED***;\n    ***REMOVED***,\n    special: {\n      load: {\n        // Prevent triggered image.load events from bubbling to window.load\n        noBubble: true\n      ***REMOVED***,\n      click: {\n        // Utilize native event to ensure correct state for checkable inputs\n        setup: function (data***REMOVED*** {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data;\n\n          // Claim the first handler\n          if (rcheckableType.test(el.type***REMOVED*** && el.click && nodeName(el, \"input\"***REMOVED******REMOVED*** {\n            // dataPriv.set( el, \"click\", ... ***REMOVED***\n            leverageNative(el, \"click\", returnTrue***REMOVED***;\n          ***REMOVED***\n\n          // Return false to allow normal processing in the caller\n          return false;\n        ***REMOVED***,\n        trigger: function (data***REMOVED*** {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data;\n\n          // Force setup before triggering a click\n          if (rcheckableType.test(el.type***REMOVED*** && el.click && nodeName(el, \"input\"***REMOVED******REMOVED*** {\n            leverageNative(el, \"click\"***REMOVED***;\n          ***REMOVED***\n\n          // Return non-false to allow normal event-path propagation\n          return true;\n        ***REMOVED***,\n        // For cross-browser consistency, suppress native .click(***REMOVED*** on links\n        // Also prevent it if we're currently inside a leveraged native-event stack\n        _default: function (event***REMOVED*** {\n          var target = event.target;\n          return rcheckableType.test(target.type***REMOVED*** && target.click && nodeName(target, \"input\"***REMOVED*** && dataPriv.get(target, \"click\"***REMOVED*** || nodeName(target, \"a\"***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***,\n      beforeunload: {\n        postDispatch: function (event***REMOVED*** {\n          // Support: Firefox 20+\n          // Firefox doesn't alert if the returnValue field is not set.\n          if (event.result !== undefined && event.originalEvent***REMOVED*** {\n            event.originalEvent.returnValue = event.result;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED***;\n\n  // Ensure the presence of an event listener that handles manually-triggered\n  // synthetic events by interrupting progress until reinvoked in response to\n  // *native* events that it fires directly, ensuring that state changes have\n  // already occurred before other listeners are invoked.\n  function leverageNative(el, type, expectSync***REMOVED*** {\n    // Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n    if (!expectSync***REMOVED*** {\n      if (dataPriv.get(el, type***REMOVED*** === undefined***REMOVED*** {\n        jQuery.event.add(el, type, returnTrue***REMOVED***;\n      ***REMOVED***\n      return;\n    ***REMOVED***\n\n    // Register the controller as a special universal handler for all event namespaces\n    dataPriv.set(el, type, false***REMOVED***;\n    jQuery.event.add(el, type, {\n      namespace: false,\n      handler: function (event***REMOVED*** {\n        var notAsync,\n          result,\n          saved = dataPriv.get(this, type***REMOVED***;\n        if (event.isTrigger & 1 && this[type]***REMOVED*** {\n          // Interrupt processing of the outer synthetic .trigger(***REMOVED***ed event\n          // Saved data should be false in such cases, but might be a leftover capture object\n          // from an async native handler (gh-4350***REMOVED***\n          if (!saved.length***REMOVED*** {\n            // Store arguments for use when handling the inner native event\n            // There will always be at least one argument (an event object***REMOVED***, so this array\n            // will not be confused with a leftover capture object.\n            saved = slice.call(arguments***REMOVED***;\n            dataPriv.set(this, type, saved***REMOVED***;\n\n            // Trigger the native event and capture its result\n            // Support: IE <=9 - 11+\n            // focus(***REMOVED*** and blur(***REMOVED*** are asynchronous\n            notAsync = expectSync(this, type***REMOVED***;\n            this[type](***REMOVED***;\n            result = dataPriv.get(this, type***REMOVED***;\n            if (saved !== result || notAsync***REMOVED*** {\n              dataPriv.set(this, type, false***REMOVED***;\n            ***REMOVED*** else {\n              result = {***REMOVED***;\n            ***REMOVED***\n            if (saved !== result***REMOVED*** {\n              // Cancel the outer synthetic event\n              event.stopImmediatePropagation(***REMOVED***;\n              event.preventDefault(***REMOVED***;\n              return result.value;\n            ***REMOVED***\n\n            // If this is an inner synthetic event for an event with a bubbling surrogate\n            // (focus or blur***REMOVED***, assume that the surrogate already propagated from triggering the\n            // native event and prevent that from happening again here.\n            // This technically gets the ordering wrong w.r.t. to `.trigger(***REMOVED***` (in which the\n            // bubbling surrogate propagates *after* the non-bubbling base***REMOVED***, but that seems\n            // less bad than duplication.\n          ***REMOVED*** else if ((jQuery.event.special[type] || {***REMOVED******REMOVED***.delegateType***REMOVED*** {\n            event.stopPropagation(***REMOVED***;\n          ***REMOVED***\n\n          // If this is a native event triggered above, everything is now in order\n          // Fire an inner synthetic event with the original arguments\n        ***REMOVED*** else if (saved.length***REMOVED*** {\n          // ...and capture the result\n          dataPriv.set(this, type, {\n            value: jQuery.event.trigger(\n            // Support: IE <=9 - 11+\n            // Extend with the prototype to reset the above stopImmediatePropagation(***REMOVED***\n            jQuery.extend(saved[0], jQuery.Event.prototype***REMOVED***, saved.slice(1***REMOVED***, this***REMOVED***\n          ***REMOVED******REMOVED***;\n\n          // Abort handling of the native event\n          event.stopImmediatePropagation(***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED******REMOVED***;\n  ***REMOVED***\n  jQuery.removeEvent = function (elem, type, handle***REMOVED*** {\n    // This \"if\" is needed for plain objects\n    if (elem.removeEventListener***REMOVED*** {\n      elem.removeEventListener(type, handle***REMOVED***;\n    ***REMOVED***\n  ***REMOVED***;\n  jQuery.Event = function (src, props***REMOVED*** {\n    // Allow instantiation without the 'new' keyword\n    if (!(this instanceof jQuery.Event***REMOVED******REMOVED*** {\n      return new jQuery.Event(src, props***REMOVED***;\n    ***REMOVED***\n\n    // Event object\n    if (src && src.type***REMOVED*** {\n      this.originalEvent = src;\n      this.type = src.type;\n\n      // Events bubbling up the document may have been marked as prevented\n      // by a handler lower down the tree; reflect the correct value.\n      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined &&\n      // Support: Android <=2.3 only\n      src.returnValue === false ? returnTrue : returnFalse;\n\n      // Create target properties\n      // Support: Safari <=6 - 7 only\n      // Target should not be a text node (#504, #13143***REMOVED***\n      this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n      this.currentTarget = src.currentTarget;\n      this.relatedTarget = src.relatedTarget;\n\n      // Event type\n    ***REMOVED*** else {\n      this.type = src;\n    ***REMOVED***\n\n    // Put explicitly provided properties onto the event object\n    if (props***REMOVED*** {\n      jQuery.extend(this, props***REMOVED***;\n    ***REMOVED***\n\n    // Create a timestamp if incoming event doesn't have one\n    this.timeStamp = src && src.timeStamp || Date.now(***REMOVED***;\n\n    // Mark it as fixed\n    this[jQuery.expando] = true;\n  ***REMOVED***;\n\n  // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n  // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n  jQuery.Event.prototype = {\n    constructor: jQuery.Event,\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse,\n    isSimulated: false,\n    preventDefault: function (***REMOVED*** {\n      var e = this.originalEvent;\n      this.isDefaultPrevented = returnTrue;\n      if (e && !this.isSimulated***REMOVED*** {\n        e.preventDefault(***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***,\n    stopPropagation: function (***REMOVED*** {\n      var e = this.originalEvent;\n      this.isPropagationStopped = returnTrue;\n      if (e && !this.isSimulated***REMOVED*** {\n        e.stopPropagation(***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***,\n    stopImmediatePropagation: function (***REMOVED*** {\n      var e = this.originalEvent;\n      this.isImmediatePropagationStopped = returnTrue;\n      if (e && !this.isSimulated***REMOVED*** {\n        e.stopImmediatePropagation(***REMOVED***;\n      ***REMOVED***\n      this.stopPropagation(***REMOVED***;\n    ***REMOVED***\n  ***REMOVED***;\n\n  // Includes all common event props including KeyEvent and MouseEvent specific props\n  jQuery.each({\n    altKey: true,\n    bubbles: true,\n    cancelable: true,\n    changedTouches: true,\n    ctrlKey: true,\n    detail: true,\n    eventPhase: true,\n    metaKey: true,\n    pageX: true,\n    pageY: true,\n    shiftKey: true,\n    view: true,\n    \"char\": true,\n    code: true,\n    charCode: true,\n    key: true,\n    keyCode: true,\n    button: true,\n    buttons: true,\n    clientX: true,\n    clientY: true,\n    offsetX: true,\n    offsetY: true,\n    pointerId: true,\n    pointerType: true,\n    screenX: true,\n    screenY: true,\n    targetTouches: true,\n    toElement: true,\n    touches: true,\n    which: function (event***REMOVED*** {\n      var button = event.button;\n\n      // Add which for key events\n      if (event.which == null && rkeyEvent.test(event.type***REMOVED******REMOVED*** {\n        return event.charCode != null ? event.charCode : event.keyCode;\n      ***REMOVED***\n\n      // Add which for click: 1 === left; 2 === middle; 3 === right\n      if (!event.which && button !== undefined && rmouseEvent.test(event.type***REMOVED******REMOVED*** {\n        if (button & 1***REMOVED*** {\n          return 1;\n        ***REMOVED***\n        if (button & 2***REMOVED*** {\n          return 3;\n        ***REMOVED***\n        if (button & 4***REMOVED*** {\n          return 2;\n        ***REMOVED***\n        return 0;\n      ***REMOVED***\n      return event.which;\n    ***REMOVED***\n  ***REMOVED***, jQuery.event.addProp***REMOVED***;\n  jQuery.each({\n    focus: \"focusin\",\n    blur: \"focusout\"\n  ***REMOVED***, function (type, delegateType***REMOVED*** {\n    jQuery.event.special[type] = {\n      // Utilize native event if possible so blur/focus sequence is correct\n      setup: function (***REMOVED*** {\n        // Claim the first handler\n        // dataPriv.set( this, \"focus\", ... ***REMOVED***\n        // dataPriv.set( this, \"blur\", ... ***REMOVED***\n        leverageNative(this, type, expectSync***REMOVED***;\n\n        // Return false to allow normal processing in the caller\n        return false;\n      ***REMOVED***,\n      trigger: function (***REMOVED*** {\n        // Force setup before trigger\n        leverageNative(this, type***REMOVED***;\n\n        // Return non-false to allow normal event-path propagation\n        return true;\n      ***REMOVED***,\n      delegateType: delegateType\n    ***REMOVED***;\n  ***REMOVED******REMOVED***;\n\n  // Create mouseenter/leave events using mouseover/out and event-time checks\n  // so that event delegation works in jQuery.\n  // Do the same for pointerenter/pointerleave and pointerover/pointerout\n  //\n  // Support: Safari 7 only\n  // Safari sends mouseenter too often; see:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n  // for the description of the bug (it existed in older Chrome versions as well***REMOVED***.\n  jQuery.each({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\",\n    pointerenter: \"pointerover\",\n    pointerleave: \"pointerout\"\n  ***REMOVED***, function (orig, fix***REMOVED*** {\n    jQuery.event.special[orig] = {\n      delegateType: fix,\n      bindType: fix,\n      handle: function (event***REMOVED*** {\n        var ret,\n          target = this,\n          related = event.relatedTarget,\n          handleObj = event.handleObj;\n\n        // For mouseenter/leave call the handler if related is outside the target.\n        // NB: No relatedTarget if the mouse left/entered the browser window\n        if (!related || related !== target && !jQuery.contains(target, related***REMOVED******REMOVED*** {\n          event.type = handleObj.origType;\n          ret = handleObj.handler.apply(this, arguments***REMOVED***;\n          event.type = fix;\n        ***REMOVED***\n        return ret;\n      ***REMOVED***\n    ***REMOVED***;\n  ***REMOVED******REMOVED***;\n  jQuery.fn.extend({\n    on: function (types, selector, data, fn***REMOVED*** {\n      return on(this, types, selector, data, fn***REMOVED***;\n    ***REMOVED***,\n    one: function (types, selector, data, fn***REMOVED*** {\n      return on(this, types, selector, data, fn, 1***REMOVED***;\n    ***REMOVED***,\n    off: function (types, selector, fn***REMOVED*** {\n      var handleObj, type;\n      if (types && types.preventDefault && types.handleObj***REMOVED*** {\n        // ( event ***REMOVED***  dispatched jQuery.Event\n        handleObj = types.handleObj;\n        jQuery(types.delegateTarget***REMOVED***.off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler***REMOVED***;\n        return this;\n      ***REMOVED***\n      if (typeof types === \"object\"***REMOVED*** {\n        // ( types-object [, selector] ***REMOVED***\n        for (type in types***REMOVED*** {\n          this.off(type, selector, types[type]***REMOVED***;\n        ***REMOVED***\n        return this;\n      ***REMOVED***\n      if (selector === false || typeof selector === \"function\"***REMOVED*** {\n        // ( types [, fn] ***REMOVED***\n        fn = selector;\n        selector = undefined;\n      ***REMOVED***\n      if (fn === false***REMOVED*** {\n        fn = returnFalse;\n      ***REMOVED***\n      return this.each(function (***REMOVED*** {\n        jQuery.event.remove(this, types, fn, selector***REMOVED***;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  var\n    // Support: IE <=10 - 11, Edge 12 - 13 only\n    // In IE/Edge using regex groups here causes severe slowdowns.\n    // See https://connect.microsoft.com/IE/feedback/details/1736512/\n    rnoInnerhtml = /<script|<style|<link/i,\n    // checked=\"checked\" or checked\n    rchecked = /checked\\s*(?:[^=]|=\\s*.checked.***REMOVED***/i,\n    rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--***REMOVED***|(?:\\]\\]|--***REMOVED***>\\s*$/g;\n\n  // Prefer a tbody over its parent table for containing new rows\n  function manipulationTarget(elem, content***REMOVED*** {\n    if (nodeName(elem, \"table\"***REMOVED*** && nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\"***REMOVED******REMOVED*** {\n      return jQuery(elem***REMOVED***.children(\"tbody\"***REMOVED***[0] || elem;\n    ***REMOVED***\n    return elem;\n  ***REMOVED***\n\n  // Replace/restore the type attribute of script elements for safe DOM manipulation\n  function disableScript(elem***REMOVED*** {\n    elem.type = (elem.getAttribute(\"type\"***REMOVED*** !== null***REMOVED*** + \"/\" + elem.type;\n    return elem;\n  ***REMOVED***\n  function restoreScript(elem***REMOVED*** {\n    if ((elem.type || \"\"***REMOVED***.slice(0, 5***REMOVED*** === \"true/\"***REMOVED*** {\n      elem.type = elem.type.slice(5***REMOVED***;\n    ***REMOVED*** else {\n      elem.removeAttribute(\"type\"***REMOVED***;\n    ***REMOVED***\n    return elem;\n  ***REMOVED***\n  function cloneCopyEvent(src, dest***REMOVED*** {\n    var i, l, type, pdataOld, udataOld, udataCur, events;\n    if (dest.nodeType !== 1***REMOVED*** {\n      return;\n    ***REMOVED***\n\n    // 1. Copy private data: events, handlers, etc.\n    if (dataPriv.hasData(src***REMOVED******REMOVED*** {\n      pdataOld = dataPriv.get(src***REMOVED***;\n      events = pdataOld.events;\n      if (events***REMOVED*** {\n        dataPriv.remove(dest, \"handle events\"***REMOVED***;\n        for (type in events***REMOVED*** {\n          for (i = 0, l = events[type].length; i < l; i++***REMOVED*** {\n            jQuery.event.add(dest, type, events[type][i]***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n\n    // 2. Copy user data\n    if (dataUser.hasData(src***REMOVED******REMOVED*** {\n      udataOld = dataUser.access(src***REMOVED***;\n      udataCur = jQuery.extend({***REMOVED***, udataOld***REMOVED***;\n      dataUser.set(dest, udataCur***REMOVED***;\n    ***REMOVED***\n  ***REMOVED***\n\n  // Fix IE bugs, see support tests\n  function fixInput(src, dest***REMOVED*** {\n    var nodeName = dest.nodeName.toLowerCase(***REMOVED***;\n\n    // Fails to persist the checked state of a cloned checkbox or radio button.\n    if (nodeName === \"input\" && rcheckableType.test(src.type***REMOVED******REMOVED*** {\n      dest.checked = src.checked;\n\n      // Fails to return the selected option to the default selected state when cloning options\n    ***REMOVED*** else if (nodeName === \"input\" || nodeName === \"textarea\"***REMOVED*** {\n      dest.defaultValue = src.defaultValue;\n    ***REMOVED***\n  ***REMOVED***\n  function domManip(collection, args, callback, ignored***REMOVED*** {\n    // Flatten any nested arrays\n    args = flat(args***REMOVED***;\n    var fragment,\n      first,\n      scripts,\n      hasScripts,\n      node,\n      doc,\n      i = 0,\n      l = collection.length,\n      iNoClone = l - 1,\n      value = args[0],\n      valueIsFunction = isFunction(value***REMOVED***;\n\n    // We can't cloneNode fragments that contain checked, in WebKit\n    if (valueIsFunction || l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value***REMOVED******REMOVED*** {\n      return collection.each(function (index***REMOVED*** {\n        var self = collection.eq(index***REMOVED***;\n        if (valueIsFunction***REMOVED*** {\n          args[0] = value.call(this, index, self.html(***REMOVED******REMOVED***;\n        ***REMOVED***\n        domManip(self, args, callback, ignored***REMOVED***;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n    if (l***REMOVED*** {\n      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored***REMOVED***;\n      first = fragment.firstChild;\n      if (fragment.childNodes.length === 1***REMOVED*** {\n        fragment = first;\n      ***REMOVED***\n\n      // Require either new content or an interest in ignored elements to invoke the callback\n      if (first || ignored***REMOVED*** {\n        scripts = jQuery.map(getAll(fragment, \"script\"***REMOVED***, disableScript***REMOVED***;\n        hasScripts = scripts.length;\n\n        // Use the original fragment for the last item\n        // instead of the first because it can end up\n        // being emptied incorrectly in certain situations (#8070***REMOVED***.\n        for (; i < l; i++***REMOVED*** {\n          node = fragment;\n          if (i !== iNoClone***REMOVED*** {\n            node = jQuery.clone(node, true, true***REMOVED***;\n\n            // Keep references to cloned scripts for later restoration\n            if (hasScripts***REMOVED*** {\n              // Support: Android <=4.0 only, PhantomJS 1 only\n              // push.apply(_, arraylike***REMOVED*** throws on ancient WebKit\n              jQuery.merge(scripts, getAll(node, \"script\"***REMOVED******REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n          callback.call(collection[i], node, i***REMOVED***;\n        ***REMOVED***\n        if (hasScripts***REMOVED*** {\n          doc = scripts[scripts.length - 1].ownerDocument;\n\n          // Reenable scripts\n          jQuery.map(scripts, restoreScript***REMOVED***;\n\n          // Evaluate executable scripts on first document insertion\n          for (i = 0; i < hasScripts; i++***REMOVED*** {\n            node = scripts[i];\n            if (rscriptType.test(node.type || \"\"***REMOVED*** && !dataPriv.access(node, \"globalEval\"***REMOVED*** && jQuery.contains(doc, node***REMOVED******REMOVED*** {\n              if (node.src && (node.type || \"\"***REMOVED***.toLowerCase(***REMOVED*** !== \"module\"***REMOVED*** {\n                // Optional AJAX dependency, but won't run scripts if not present\n                if (jQuery._evalUrl && !node.noModule***REMOVED*** {\n                  jQuery._evalUrl(node.src, {\n                    nonce: node.nonce || node.getAttribute(\"nonce\"***REMOVED***\n                  ***REMOVED***, doc***REMOVED***;\n                ***REMOVED***\n              ***REMOVED*** else {\n                DOMEval(node.textContent.replace(rcleanScript, \"\"***REMOVED***, node, doc***REMOVED***;\n              ***REMOVED***\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n    return collection;\n  ***REMOVED***\n  function remove(elem, selector, keepData***REMOVED*** {\n    var node,\n      nodes = selector ? jQuery.filter(selector, elem***REMOVED*** : elem,\n      i = 0;\n    for (; (node = nodes[i]***REMOVED*** != null; i++***REMOVED*** {\n      if (!keepData && node.nodeType === 1***REMOVED*** {\n        jQuery.cleanData(getAll(node***REMOVED******REMOVED***;\n      ***REMOVED***\n      if (node.parentNode***REMOVED*** {\n        if (keepData && isAttached(node***REMOVED******REMOVED*** {\n          setGlobalEval(getAll(node, \"script\"***REMOVED******REMOVED***;\n        ***REMOVED***\n        node.parentNode.removeChild(node***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***\n    return elem;\n  ***REMOVED***\n  jQuery.extend({\n    htmlPrefilter: function (html***REMOVED*** {\n      return html;\n    ***REMOVED***,\n    clone: function (elem, dataAndEvents, deepDataAndEvents***REMOVED*** {\n      var i,\n        l,\n        srcElements,\n        destElements,\n        clone = elem.cloneNode(true***REMOVED***,\n        inPage = isAttached(elem***REMOVED***;\n\n      // Fix IE cloning issues\n      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11***REMOVED*** && !jQuery.isXMLDoc(elem***REMOVED******REMOVED*** {\n        // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n        destElements = getAll(clone***REMOVED***;\n        srcElements = getAll(elem***REMOVED***;\n        for (i = 0, l = srcElements.length; i < l; i++***REMOVED*** {\n          fixInput(srcElements[i], destElements[i]***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n\n      // Copy the events from the original to the clone\n      if (dataAndEvents***REMOVED*** {\n        if (deepDataAndEvents***REMOVED*** {\n          srcElements = srcElements || getAll(elem***REMOVED***;\n          destElements = destElements || getAll(clone***REMOVED***;\n          for (i = 0, l = srcElements.length; i < l; i++***REMOVED*** {\n            cloneCopyEvent(srcElements[i], destElements[i]***REMOVED***;\n          ***REMOVED***\n        ***REMOVED*** else {\n          cloneCopyEvent(elem, clone***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n\n      // Preserve script evaluation history\n      destElements = getAll(clone, \"script\"***REMOVED***;\n      if (destElements.length > 0***REMOVED*** {\n        setGlobalEval(destElements, !inPage && getAll(elem, \"script\"***REMOVED******REMOVED***;\n      ***REMOVED***\n\n      // Return the cloned set\n      return clone;\n    ***REMOVED***,\n    cleanData: function (elems***REMOVED*** {\n      var data,\n        elem,\n        type,\n        special = jQuery.event.special,\n        i = 0;\n      for (; (elem = elems[i]***REMOVED*** !== undefined; i++***REMOVED*** {\n        if (acceptData(elem***REMOVED******REMOVED*** {\n          if (data = elem[dataPriv.expando]***REMOVED*** {\n            if (data.events***REMOVED*** {\n              for (type in data.events***REMOVED*** {\n                if (special[type]***REMOVED*** {\n                  jQuery.event.remove(elem, type***REMOVED***;\n\n                  // This is a shortcut to avoid jQuery.event.remove's overhead\n                ***REMOVED*** else {\n                  jQuery.removeEvent(elem, type, data.handle***REMOVED***;\n                ***REMOVED***\n              ***REMOVED***\n            ***REMOVED***\n\n            // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataPriv.expando] = undefined;\n          ***REMOVED***\n          if (elem[dataUser.expando]***REMOVED*** {\n            // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataUser.expando] = undefined;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.fn.extend({\n    detach: function (selector***REMOVED*** {\n      return remove(this, selector, true***REMOVED***;\n    ***REMOVED***,\n    remove: function (selector***REMOVED*** {\n      return remove(this, selector***REMOVED***;\n    ***REMOVED***,\n    text: function (value***REMOVED*** {\n      return access(this, function (value***REMOVED*** {\n        return value === undefined ? jQuery.text(this***REMOVED*** : this.empty(***REMOVED***.each(function (***REMOVED*** {\n          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9***REMOVED*** {\n            this.textContent = value;\n          ***REMOVED***\n        ***REMOVED******REMOVED***;\n      ***REMOVED***, null, value, arguments.length***REMOVED***;\n    ***REMOVED***,\n    append: function (***REMOVED*** {\n      return domManip(this, arguments, function (elem***REMOVED*** {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9***REMOVED*** {\n          var target = manipulationTarget(this, elem***REMOVED***;\n          target.appendChild(elem***REMOVED***;\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***,\n    prepend: function (***REMOVED*** {\n      return domManip(this, arguments, function (elem***REMOVED*** {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9***REMOVED*** {\n          var target = manipulationTarget(this, elem***REMOVED***;\n          target.insertBefore(elem, target.firstChild***REMOVED***;\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***,\n    before: function (***REMOVED*** {\n      return domManip(this, arguments, function (elem***REMOVED*** {\n        if (this.parentNode***REMOVED*** {\n          this.parentNode.insertBefore(elem, this***REMOVED***;\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***,\n    after: function (***REMOVED*** {\n      return domManip(this, arguments, function (elem***REMOVED*** {\n        if (this.parentNode***REMOVED*** {\n          this.parentNode.insertBefore(elem, this.nextSibling***REMOVED***;\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***,\n    empty: function (***REMOVED*** {\n      var elem,\n        i = 0;\n      for (; (elem = this[i]***REMOVED*** != null; i++***REMOVED*** {\n        if (elem.nodeType === 1***REMOVED*** {\n          // Prevent memory leaks\n          jQuery.cleanData(getAll(elem, false***REMOVED******REMOVED***;\n\n          // Remove any remaining nodes\n          elem.textContent = \"\";\n        ***REMOVED***\n      ***REMOVED***\n      return this;\n    ***REMOVED***,\n    clone: function (dataAndEvents, deepDataAndEvents***REMOVED*** {\n      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n      return this.map(function (***REMOVED*** {\n        return jQuery.clone(this, dataAndEvents, deepDataAndEvents***REMOVED***;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***,\n    html: function (value***REMOVED*** {\n      return access(this, function (value***REMOVED*** {\n        var elem = this[0] || {***REMOVED***,\n          i = 0,\n          l = this.length;\n        if (value === undefined && elem.nodeType === 1***REMOVED*** {\n          return elem.innerHTML;\n        ***REMOVED***\n\n        // See if we can take a shortcut and just use innerHTML\n        if (typeof value === \"string\" && !rnoInnerhtml.test(value***REMOVED*** && !wrapMap[(rtagName.exec(value***REMOVED*** || [\"\", \"\"]***REMOVED***[1].toLowerCase(***REMOVED***]***REMOVED*** {\n          value = jQuery.htmlPrefilter(value***REMOVED***;\n          try {\n            for (; i < l; i++***REMOVED*** {\n              elem = this[i] || {***REMOVED***;\n\n              // Remove element nodes and prevent memory leaks\n              if (elem.nodeType === 1***REMOVED*** {\n                jQuery.cleanData(getAll(elem, false***REMOVED******REMOVED***;\n                elem.innerHTML = value;\n              ***REMOVED***\n            ***REMOVED***\n            elem = 0;\n\n            // If using innerHTML throws an exception, use the fallback method\n          ***REMOVED*** catch (e***REMOVED*** {***REMOVED***\n        ***REMOVED***\n        if (elem***REMOVED*** {\n          this.empty(***REMOVED***.append(value***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***, null, value, arguments.length***REMOVED***;\n    ***REMOVED***,\n    replaceWith: function (***REMOVED*** {\n      var ignored = [];\n\n      // Make the changes, replacing each non-ignored context element with the new content\n      return domManip(this, arguments, function (elem***REMOVED*** {\n        var parent = this.parentNode;\n        if (jQuery.inArray(this, ignored***REMOVED*** < 0***REMOVED*** {\n          jQuery.cleanData(getAll(this***REMOVED******REMOVED***;\n          if (parent***REMOVED*** {\n            parent.replaceChild(elem, this***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n\n        // Force callback invocation\n      ***REMOVED***, ignored***REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.each({\n    appendTo: \"append\",\n    prependTo: \"prepend\",\n    insertBefore: \"before\",\n    insertAfter: \"after\",\n    replaceAll: \"replaceWith\"\n  ***REMOVED***, function (name, original***REMOVED*** {\n    jQuery.fn[name] = function (selector***REMOVED*** {\n      var elems,\n        ret = [],\n        insert = jQuery(selector***REMOVED***,\n        last = insert.length - 1,\n        i = 0;\n      for (; i <= last; i++***REMOVED*** {\n        elems = i === last ? this : this.clone(true***REMOVED***;\n        jQuery(insert[i]***REMOVED***[original](elems***REMOVED***;\n\n        // Support: Android <=4.0 only, PhantomJS 1 only\n        // .get(***REMOVED*** because push.apply(_, arraylike***REMOVED*** throws on ancient WebKit\n        push.apply(ret, elems.get(***REMOVED******REMOVED***;\n      ***REMOVED***\n      return this.pushStack(ret***REMOVED***;\n    ***REMOVED***;\n  ***REMOVED******REMOVED***;\n  var rnumnonpx = new RegExp(\"^(\" + pnum + \"***REMOVED***(?!px***REMOVED***[a-z%]+$\", \"i\"***REMOVED***;\n  var getStyles = function (elem***REMOVED*** {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150***REMOVED***\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    var view = elem.ownerDocument.defaultView;\n    if (!view || !view.opener***REMOVED*** {\n      view = window;\n    ***REMOVED***\n    return view.getComputedStyle(elem***REMOVED***;\n  ***REMOVED***;\n  var swap = function (elem, options, callback***REMOVED*** {\n    var ret,\n      name,\n      old = {***REMOVED***;\n\n    // Remember the old values, and insert the new ones\n    for (name in options***REMOVED*** {\n      old[name] = elem.style[name];\n      elem.style[name] = options[name];\n    ***REMOVED***\n    ret = callback.call(elem***REMOVED***;\n\n    // Revert the old values\n    for (name in options***REMOVED*** {\n      elem.style[name] = old[name];\n    ***REMOVED***\n    return ret;\n  ***REMOVED***;\n  var rboxStyle = new RegExp(cssExpand.join(\"|\"***REMOVED***, \"i\"***REMOVED***;\n  (function (***REMOVED*** {\n    // Executing both pixelPosition & boxSizingReliable tests require only one layout\n    // so they're executed at the same time to save the second computation.\n    function computeStyleTests(***REMOVED*** {\n      // This is a singleton, we need to execute it only once\n      if (!div***REMOVED*** {\n        return;\n      ***REMOVED***\n      container.style.cssText = \"position:absolute;left:-11111px;width:60px;\" + \"margin-top:1px;padding:0;border:0\";\n      div.style.cssText = \"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" + \"margin:auto;border:1px;padding:1px;\" + \"width:60%;top:1%\";\n      documentElement.appendChild(container***REMOVED***.appendChild(div***REMOVED***;\n      var divStyle = window.getComputedStyle(div***REMOVED***;\n      pixelPositionVal = divStyle.top !== \"1%\";\n\n      // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft***REMOVED*** === 12;\n\n      // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n      // Some styles come back with percentage values, even though they shouldn't\n      div.style.right = \"60%\";\n      pixelBoxStylesVal = roundPixelMeasures(divStyle.right***REMOVED*** === 36;\n\n      // Support: IE 9 - 11 only\n      // Detect misreporting of content dimensions for box-sizing:border-box elements\n      boxSizingReliableVal = roundPixelMeasures(divStyle.width***REMOVED*** === 36;\n\n      // Support: IE 9 only\n      // Detect overflow:scroll screwiness (gh-3699***REMOVED***\n      // Support: Chrome <=64\n      // Don't get tricked when zoom affects offsetWidth (gh-4029***REMOVED***\n      div.style.position = \"absolute\";\n      scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3***REMOVED*** === 12;\n      documentElement.removeChild(container***REMOVED***;\n\n      // Nullify the div so it wouldn't be stored in the memory and\n      // it will also be a sign that checks already performed\n      div = null;\n    ***REMOVED***\n    function roundPixelMeasures(measure***REMOVED*** {\n      return Math.round(parseFloat(measure***REMOVED******REMOVED***;\n    ***REMOVED***\n    var pixelPositionVal,\n      boxSizingReliableVal,\n      scrollboxSizeVal,\n      pixelBoxStylesVal,\n      reliableTrDimensionsVal,\n      reliableMarginLeftVal,\n      container = document.createElement(\"div\"***REMOVED***,\n      div = document.createElement(\"div\"***REMOVED***;\n\n    // Finish early in limited (non-browser***REMOVED*** environments\n    if (!div.style***REMOVED*** {\n      return;\n    ***REMOVED***\n\n    // Support: IE <=9 - 11 only\n    // Style of cloned element affects source element cloned (#8908***REMOVED***\n    div.style.backgroundClip = \"content-box\";\n    div.cloneNode(true***REMOVED***.style.backgroundClip = \"\";\n    support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n    jQuery.extend(support, {\n      boxSizingReliable: function (***REMOVED*** {\n        computeStyleTests(***REMOVED***;\n        return boxSizingReliableVal;\n      ***REMOVED***,\n      pixelBoxStyles: function (***REMOVED*** {\n        computeStyleTests(***REMOVED***;\n        return pixelBoxStylesVal;\n      ***REMOVED***,\n      pixelPosition: function (***REMOVED*** {\n        computeStyleTests(***REMOVED***;\n        return pixelPositionVal;\n      ***REMOVED***,\n      reliableMarginLeft: function (***REMOVED*** {\n        computeStyleTests(***REMOVED***;\n        return reliableMarginLeftVal;\n      ***REMOVED***,\n      scrollboxSize: function (***REMOVED*** {\n        computeStyleTests(***REMOVED***;\n        return scrollboxSizeVal;\n      ***REMOVED***,\n      // Support: IE 9 - 11+, Edge 15 - 18+\n      // IE/Edge misreport `getComputedStyle` of table rows with width/height\n      // set in CSS while `offset*` properties report correct values.\n      // Behavior in IE 9 is more subtle than in newer versions & it passes\n      // some versions of this test; make sure not to make it pass there!\n      reliableTrDimensions: function (***REMOVED*** {\n        var table, tr, trChild, trStyle;\n        if (reliableTrDimensionsVal == null***REMOVED*** {\n          table = document.createElement(\"table\"***REMOVED***;\n          tr = document.createElement(\"tr\"***REMOVED***;\n          trChild = document.createElement(\"div\"***REMOVED***;\n          table.style.cssText = \"position:absolute;left:-11111px\";\n          tr.style.height = \"1px\";\n          trChild.style.height = \"9px\";\n          documentElement.appendChild(table***REMOVED***.appendChild(tr***REMOVED***.appendChild(trChild***REMOVED***;\n          trStyle = window.getComputedStyle(tr***REMOVED***;\n          reliableTrDimensionsVal = parseInt(trStyle.height***REMOVED*** > 3;\n          documentElement.removeChild(table***REMOVED***;\n        ***REMOVED***\n        return reliableTrDimensionsVal;\n      ***REMOVED***\n    ***REMOVED******REMOVED***;\n  ***REMOVED******REMOVED***(***REMOVED***;\n  function curCSS(elem, name, computed***REMOVED*** {\n    var width,\n      minWidth,\n      maxWidth,\n      ret,\n      // Support: Firefox 51+\n      // Retrieving style before computed somehow\n      // fixes an issue with getting wrong values\n      // on detached elements\n      style = elem.style;\n    computed = computed || getStyles(elem***REMOVED***;\n\n    // getPropertyValue is needed for:\n    //   .css('filter'***REMOVED*** (IE 9 only, #12537***REMOVED***\n    //   .css('--customProperty***REMOVED*** (#3144***REMOVED***\n    if (computed***REMOVED*** {\n      ret = computed.getPropertyValue(name***REMOVED*** || computed[name];\n      if (ret === \"\" && !isAttached(elem***REMOVED******REMOVED*** {\n        ret = jQuery.style(elem, name***REMOVED***;\n      ***REMOVED***\n\n      // A tribute to the \"awesome hack by Dean Edwards\"\n      // Android Browser returns percentage for some values,\n      // but width seems to be reliably pixels.\n      // This is against the CSSOM draft spec:\n      // https://drafts.csswg.org/cssom/#resolved-values\n      if (!support.pixelBoxStyles(***REMOVED*** && rnumnonpx.test(ret***REMOVED*** && rboxStyle.test(name***REMOVED******REMOVED*** {\n        // Remember the original values\n        width = style.width;\n        minWidth = style.minWidth;\n        maxWidth = style.maxWidth;\n\n        // Put in the new values to get a computed value out\n        style.minWidth = style.maxWidth = style.width = ret;\n        ret = computed.width;\n\n        // Revert the changed values\n        style.width = width;\n        style.minWidth = minWidth;\n        style.maxWidth = maxWidth;\n      ***REMOVED***\n    ***REMOVED***\n    return ret !== undefined ?\n    // Support: IE <=9 - 11 only\n    // IE returns zIndex value as an integer.\n    ret + \"\" : ret;\n  ***REMOVED***\n  function addGetHookIf(conditionFn, hookFn***REMOVED*** {\n    // Define the hook, we'll check on the first run if it's really needed.\n    return {\n      get: function (***REMOVED*** {\n        if (conditionFn(***REMOVED******REMOVED*** {\n          // Hook not needed (or it's not possible to use it due\n          // to missing dependency***REMOVED***, remove it.\n          delete this.get;\n          return;\n        ***REMOVED***\n\n        // Hook needed; redefine it so that the support test is not executed again.\n        return (this.get = hookFn***REMOVED***.apply(this, arguments***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***;\n  ***REMOVED***\n  var cssPrefixes = [\"Webkit\", \"Moz\", \"ms\"],\n    emptyStyle = document.createElement(\"div\"***REMOVED***.style,\n    vendorProps = {***REMOVED***;\n\n  // Return a vendor-prefixed property or undefined\n  function vendorPropName(name***REMOVED*** {\n    // Check for vendor prefixed names\n    var capName = name[0].toUpperCase(***REMOVED*** + name.slice(1***REMOVED***,\n      i = cssPrefixes.length;\n    while (i--***REMOVED*** {\n      name = cssPrefixes[i] + capName;\n      if (name in emptyStyle***REMOVED*** {\n        return name;\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED***\n\n  // Return a potentially-mapped jQuery.cssProps or vendor prefixed property\n  function finalPropName(name***REMOVED*** {\n    var final = jQuery.cssProps[name] || vendorProps[name];\n    if (final***REMOVED*** {\n      return final;\n    ***REMOVED***\n    if (name in emptyStyle***REMOVED*** {\n      return name;\n    ***REMOVED***\n    return vendorProps[name] = vendorPropName(name***REMOVED*** || name;\n  ***REMOVED***\n  var\n    // Swappable if display is none or starts with table\n    // except \"table\", \"table-cell\", or \"table-caption\"\n    // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n    rdisplayswap = /^(none|table(?!-c[ea]***REMOVED***.+***REMOVED***/,\n    rcustomProp = /^--/,\n    cssShow = {\n      position: \"absolute\",\n      visibility: \"hidden\",\n      display: \"block\"\n    ***REMOVED***,\n    cssNormalTransform = {\n      letterSpacing: \"0\",\n      fontWeight: \"400\"\n    ***REMOVED***;\n  function setPositiveNumber(_elem, value, subtract***REMOVED*** {\n    // Any relative (+/-***REMOVED*** values have already been\n    // normalized at this point\n    var matches = rcssNum.exec(value***REMOVED***;\n    return matches ?\n    // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n    Math.max(0, matches[2] - (subtract || 0***REMOVED******REMOVED*** + (matches[3] || \"px\"***REMOVED*** : value;\n  ***REMOVED***\n  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal***REMOVED*** {\n    var i = dimension === \"width\" ? 1 : 0,\n      extra = 0,\n      delta = 0;\n\n    // Adjustment may not be necessary\n    if (box === (isBorderBox ? \"border\" : \"content\"***REMOVED******REMOVED*** {\n      return 0;\n    ***REMOVED***\n    for (; i < 4; i += 2***REMOVED*** {\n      // Both box models exclude margin\n      if (box === \"margin\"***REMOVED*** {\n        delta += jQuery.css(elem, box + cssExpand[i], true, styles***REMOVED***;\n      ***REMOVED***\n\n      // If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n      if (!isBorderBox***REMOVED*** {\n        // Add padding\n        delta += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles***REMOVED***;\n\n        // For \"border\" or \"margin\", add border\n        if (box !== \"padding\"***REMOVED*** {\n          delta += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles***REMOVED***;\n\n          // But still keep track of it otherwise\n        ***REMOVED*** else {\n          extra += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles***REMOVED***;\n        ***REMOVED***\n\n        // If we get here with a border-box (content + padding + border***REMOVED***, we're seeking \"content\" or\n        // \"padding\" or \"margin\"\n      ***REMOVED*** else {\n        // For \"content\", subtract padding\n        if (box === \"content\"***REMOVED*** {\n          delta -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles***REMOVED***;\n        ***REMOVED***\n\n        // For \"content\" or \"padding\", subtract border\n        if (box !== \"margin\"***REMOVED*** {\n          delta -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n\n    // Account for positive content-box scroll gutter when requested by providing computedVal\n    if (!isBorderBox && computedVal >= 0***REMOVED*** {\n      // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n      // Assuming integer scroll gutter, subtract the rest and round down\n      delta += Math.max(0, Math.ceil(elem[\"offset\" + dimension[0].toUpperCase(***REMOVED*** + dimension.slice(1***REMOVED***] - computedVal - delta - extra - 0.5\n\n      // If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n      // Use an explicit zero to avoid NaN (gh-3964***REMOVED***\n      ***REMOVED******REMOVED*** || 0;\n    ***REMOVED***\n    return delta;\n  ***REMOVED***\n  function getWidthOrHeight(elem, dimension, extra***REMOVED*** {\n    // Start with computed style\n    var styles = getStyles(elem***REMOVED***,\n      // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322***REMOVED***.\n      // Fake content-box until we know it's needed to know the true value.\n      boxSizingNeeded = !support.boxSizingReliable(***REMOVED*** || extra,\n      isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles***REMOVED*** === \"border-box\",\n      valueIsBorderBox = isBorderBox,\n      val = curCSS(elem, dimension, styles***REMOVED***,\n      offsetProp = \"offset\" + dimension[0].toUpperCase(***REMOVED*** + dimension.slice(1***REMOVED***;\n\n    // Support: Firefox <=54\n    // Return a confounding non-pixel value or feign ignorance, as appropriate.\n    if (rnumnonpx.test(val***REMOVED******REMOVED*** {\n      if (!extra***REMOVED*** {\n        return val;\n      ***REMOVED***\n      val = \"auto\";\n    ***REMOVED***\n\n    // Support: IE 9 - 11 only\n    // Use offsetWidth/offsetHeight for when box sizing is unreliable.\n    // In those cases, the computed value can be trusted to be border-box.\n    if ((!support.boxSizingReliable(***REMOVED*** && isBorderBox ||\n    // Support: IE 10 - 11+, Edge 15 - 18+\n    // IE/Edge misreport `getComputedStyle` of table rows with width/height\n    // set in CSS while `offset*` properties report correct values.\n    // Interestingly, in some cases IE 9 doesn't suffer from this issue.\n    !support.reliableTrDimensions(***REMOVED*** && nodeName(elem, \"tr\"***REMOVED*** ||\n    // Fall back to offsetWidth/offsetHeight when value is \"auto\"\n    // This happens for inline elements with no explicit setting (gh-3571***REMOVED***\n    val === \"auto\" ||\n    // Support: Android <=4.1 - 4.3 only\n    // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602***REMOVED***\n    !parseFloat(val***REMOVED*** && jQuery.css(elem, \"display\", false, styles***REMOVED*** === \"inline\"***REMOVED*** &&\n    // Make sure the element is visible & connected\n    elem.getClientRects(***REMOVED***.length***REMOVED*** {\n      isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles***REMOVED*** === \"border-box\";\n\n      // Where available, offsetWidth/offsetHeight approximate border box dimensions.\n      // Where not available (e.g., SVG***REMOVED***, assume unreliable box-sizing and interpret the\n      // retrieved value as a content box dimension.\n      valueIsBorderBox = offsetProp in elem;\n      if (valueIsBorderBox***REMOVED*** {\n        val = elem[offsetProp];\n      ***REMOVED***\n    ***REMOVED***\n\n    // Normalize \"\" and auto\n    val = parseFloat(val***REMOVED*** || 0;\n\n    // Adjust for the element's box model\n    return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? \"border\" : \"content\"***REMOVED***, valueIsBorderBox, styles,\n    // Provide the current computed size to request scroll gutter calculation (gh-3589***REMOVED***\n    val***REMOVED*** + \"px\";\n  ***REMOVED***\n  jQuery.extend({\n    // Add in style property hooks for overriding the default\n    // behavior of getting and setting a style property\n    cssHooks: {\n      opacity: {\n        get: function (elem, computed***REMOVED*** {\n          if (computed***REMOVED*** {\n            // We should always get a number back from opacity\n            var ret = curCSS(elem, \"opacity\"***REMOVED***;\n            return ret === \"\" ? \"1\" : ret;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***,\n    // Don't automatically add \"px\" to these possibly-unitless properties\n    cssNumber: {\n      \"animationIterationCount\": true,\n      \"columnCount\": true,\n      \"fillOpacity\": true,\n      \"flexGrow\": true,\n      \"flexShrink\": true,\n      \"fontWeight\": true,\n      \"gridArea\": true,\n      \"gridColumn\": true,\n      \"gridColumnEnd\": true,\n      \"gridColumnStart\": true,\n      \"gridRow\": true,\n      \"gridRowEnd\": true,\n      \"gridRowStart\": true,\n      \"lineHeight\": true,\n      \"opacity\": true,\n      \"order\": true,\n      \"orphans\": true,\n      \"widows\": true,\n      \"zIndex\": true,\n      \"zoom\": true\n    ***REMOVED***,\n    // Add in properties whose names you wish to fix before\n    // setting or getting the value\n    cssProps: {***REMOVED***,\n    // Get and set the style property on a DOM Node\n    style: function (elem, name, value, extra***REMOVED*** {\n      // Don't set styles on text and comment nodes\n      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style***REMOVED*** {\n        return;\n      ***REMOVED***\n\n      // Make sure that we're working with the right name\n      var ret,\n        type,\n        hooks,\n        origName = camelCase(name***REMOVED***,\n        isCustomProp = rcustomProp.test(name***REMOVED***,\n        style = elem.style;\n\n      // Make sure that we're working with the right name. We don't\n      // want to query the value if it is a CSS custom property\n      // since they are user-defined.\n      if (!isCustomProp***REMOVED*** {\n        name = finalPropName(origName***REMOVED***;\n      ***REMOVED***\n\n      // Gets hook for the prefixed version, then unprefixed version\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n\n      // Check if we're setting a value\n      if (value !== undefined***REMOVED*** {\n        type = typeof value;\n\n        // Convert \"+=\" or \"-=\" to relative numbers (#7345***REMOVED***\n        if (type === \"string\" && (ret = rcssNum.exec(value***REMOVED******REMOVED*** && ret[1]***REMOVED*** {\n          value = adjustCSS(elem, name, ret***REMOVED***;\n\n          // Fixes bug #9237\n          type = \"number\";\n        ***REMOVED***\n\n        // Make sure that null and NaN values aren't set (#7116***REMOVED***\n        if (value == null || value !== value***REMOVED*** {\n          return;\n        ***REMOVED***\n\n        // If a number was passed in, add the unit (except for certain CSS properties***REMOVED***\n        // The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n        // \"px\" to a few hardcoded values.\n        if (type === \"number\" && !isCustomProp***REMOVED*** {\n          value += ret && ret[3] || (jQuery.cssNumber[origName] ? \"\" : \"px\"***REMOVED***;\n        ***REMOVED***\n\n        // background-* props affect original clone's values\n        if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\"***REMOVED*** === 0***REMOVED*** {\n          style[name] = \"inherit\";\n        ***REMOVED***\n\n        // If a hook was provided, use that value, otherwise just set the specified value\n        if (!hooks || !(\"set\" in hooks***REMOVED*** || (value = hooks.set(elem, value, extra***REMOVED******REMOVED*** !== undefined***REMOVED*** {\n          if (isCustomProp***REMOVED*** {\n            style.setProperty(name, value***REMOVED***;\n          ***REMOVED*** else {\n            style[name] = value;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED*** else {\n        // If a hook was provided get the non-computed value from there\n        if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra***REMOVED******REMOVED*** !== undefined***REMOVED*** {\n          return ret;\n        ***REMOVED***\n\n        // Otherwise just get the value from the style object\n        return style[name];\n      ***REMOVED***\n    ***REMOVED***,\n    css: function (elem, name, extra, styles***REMOVED*** {\n      var val,\n        num,\n        hooks,\n        origName = camelCase(name***REMOVED***,\n        isCustomProp = rcustomProp.test(name***REMOVED***;\n\n      // Make sure that we're working with the right name. We don't\n      // want to modify the value if it is a CSS custom property\n      // since they are user-defined.\n      if (!isCustomProp***REMOVED*** {\n        name = finalPropName(origName***REMOVED***;\n      ***REMOVED***\n\n      // Try prefixed name followed by the unprefixed name\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n\n      // If a hook was provided get the computed value from there\n      if (hooks && \"get\" in hooks***REMOVED*** {\n        val = hooks.get(elem, true, extra***REMOVED***;\n      ***REMOVED***\n\n      // Otherwise, if a way to get the computed value exists, use that\n      if (val === undefined***REMOVED*** {\n        val = curCSS(elem, name, styles***REMOVED***;\n      ***REMOVED***\n\n      // Convert \"normal\" to computed value\n      if (val === \"normal\" && name in cssNormalTransform***REMOVED*** {\n        val = cssNormalTransform[name];\n      ***REMOVED***\n\n      // Make numeric if forced or a qualifier was provided and val looks numeric\n      if (extra === \"\" || extra***REMOVED*** {\n        num = parseFloat(val***REMOVED***;\n        return extra === true || isFinite(num***REMOVED*** ? num || 0 : val;\n      ***REMOVED***\n      return val;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.each([\"height\", \"width\"], function (_i, dimension***REMOVED*** {\n    jQuery.cssHooks[dimension] = {\n      get: function (elem, computed, extra***REMOVED*** {\n        if (computed***REMOVED*** {\n          // Certain elements can have dimension info if we invisibly show them\n          // but it must have a current display style that would benefit\n          return rdisplayswap.test(jQuery.css(elem, \"display\"***REMOVED******REMOVED*** && (\n          // Support: Safari 8+\n          // Table columns in Safari have non-zero offsetWidth & zero\n          // getBoundingClientRect(***REMOVED***.width unless display is changed.\n          // Support: IE <=11 only\n          // Running getBoundingClientRect on a disconnected node\n          // in IE throws an error.\n          !elem.getClientRects(***REMOVED***.length || !elem.getBoundingClientRect(***REMOVED***.width***REMOVED*** ? swap(elem, cssShow, function (***REMOVED*** {\n            return getWidthOrHeight(elem, dimension, extra***REMOVED***;\n          ***REMOVED******REMOVED*** : getWidthOrHeight(elem, dimension, extra***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***,\n      set: function (elem, value, extra***REMOVED*** {\n        var matches,\n          styles = getStyles(elem***REMOVED***,\n          // Only read styles.position if the test has a chance to fail\n          // to avoid forcing a reflow.\n          scrollboxSizeBuggy = !support.scrollboxSize(***REMOVED*** && styles.position === \"absolute\",\n          // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991***REMOVED***\n          boxSizingNeeded = scrollboxSizeBuggy || extra,\n          isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles***REMOVED*** === \"border-box\",\n          subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles***REMOVED*** : 0;\n\n        // Account for unreliable border-box dimensions by comparing offset* to computed and\n        // faking a content-box to get border and padding (gh-3699***REMOVED***\n        if (isBorderBox && scrollboxSizeBuggy***REMOVED*** {\n          subtract -= Math.ceil(elem[\"offset\" + dimension[0].toUpperCase(***REMOVED*** + dimension.slice(1***REMOVED***] - parseFloat(styles[dimension]***REMOVED*** - boxModelAdjustment(elem, dimension, \"border\", false, styles***REMOVED*** - 0.5***REMOVED***;\n        ***REMOVED***\n\n        // Convert to pixels if value adjustment is needed\n        if (subtract && (matches = rcssNum.exec(value***REMOVED******REMOVED*** && (matches[3] || \"px\"***REMOVED*** !== \"px\"***REMOVED*** {\n          elem.style[dimension] = value;\n          value = jQuery.css(elem, dimension***REMOVED***;\n        ***REMOVED***\n        return setPositiveNumber(elem, value, subtract***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***;\n  ***REMOVED******REMOVED***;\n  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed***REMOVED*** {\n    if (computed***REMOVED*** {\n      return (parseFloat(curCSS(elem, \"marginLeft\"***REMOVED******REMOVED*** || elem.getBoundingClientRect(***REMOVED***.left - swap(elem, {\n        marginLeft: 0\n      ***REMOVED***, function (***REMOVED*** {\n        return elem.getBoundingClientRect(***REMOVED***.left;\n      ***REMOVED******REMOVED******REMOVED*** + \"px\";\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n\n  // These hooks are used by animate to expand properties\n  jQuery.each({\n    margin: \"\",\n    padding: \"\",\n    border: \"Width\"\n  ***REMOVED***, function (prefix, suffix***REMOVED*** {\n    jQuery.cssHooks[prefix + suffix] = {\n      expand: function (value***REMOVED*** {\n        var i = 0,\n          expanded = {***REMOVED***,\n          // Assumes a single number if not a string\n          parts = typeof value === \"string\" ? value.split(\" \"***REMOVED*** : [value];\n        for (; i < 4; i++***REMOVED*** {\n          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n        ***REMOVED***\n        return expanded;\n      ***REMOVED***\n    ***REMOVED***;\n    if (prefix !== \"margin\"***REMOVED*** {\n      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.fn.extend({\n    css: function (name, value***REMOVED*** {\n      return access(this, function (elem, name, value***REMOVED*** {\n        var styles,\n          len,\n          map = {***REMOVED***,\n          i = 0;\n        if (Array.isArray(name***REMOVED******REMOVED*** {\n          styles = getStyles(elem***REMOVED***;\n          len = name.length;\n          for (; i < len; i++***REMOVED*** {\n            map[name[i]] = jQuery.css(elem, name[i], false, styles***REMOVED***;\n          ***REMOVED***\n          return map;\n        ***REMOVED***\n        return value !== undefined ? jQuery.style(elem, name, value***REMOVED*** : jQuery.css(elem, name***REMOVED***;\n      ***REMOVED***, name, value, arguments.length > 1***REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  function Tween(elem, options, prop, end, easing***REMOVED*** {\n    return new Tween.prototype.init(elem, options, prop, end, easing***REMOVED***;\n  ***REMOVED***\n  jQuery.Tween = Tween;\n  Tween.prototype = {\n    constructor: Tween,\n    init: function (elem, options, prop, end, easing, unit***REMOVED*** {\n      this.elem = elem;\n      this.prop = prop;\n      this.easing = easing || jQuery.easing._default;\n      this.options = options;\n      this.start = this.now = this.cur(***REMOVED***;\n      this.end = end;\n      this.unit = unit || (jQuery.cssNumber[prop] ? \"\" : \"px\"***REMOVED***;\n    ***REMOVED***,\n    cur: function (***REMOVED*** {\n      var hooks = Tween.propHooks[this.prop];\n      return hooks && hooks.get ? hooks.get(this***REMOVED*** : Tween.propHooks._default.get(this***REMOVED***;\n    ***REMOVED***,\n    run: function (percent***REMOVED*** {\n      var eased,\n        hooks = Tween.propHooks[this.prop];\n      if (this.options.duration***REMOVED*** {\n        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration***REMOVED***;\n      ***REMOVED*** else {\n        this.pos = eased = percent;\n      ***REMOVED***\n      this.now = (this.end - this.start***REMOVED*** * eased + this.start;\n      if (this.options.step***REMOVED*** {\n        this.options.step.call(this.elem, this.now, this***REMOVED***;\n      ***REMOVED***\n      if (hooks && hooks.set***REMOVED*** {\n        hooks.set(this***REMOVED***;\n      ***REMOVED*** else {\n        Tween.propHooks._default.set(this***REMOVED***;\n      ***REMOVED***\n      return this;\n    ***REMOVED***\n  ***REMOVED***;\n  Tween.prototype.init.prototype = Tween.prototype;\n  Tween.propHooks = {\n    _default: {\n      get: function (tween***REMOVED*** {\n        var result;\n\n        // Use a property on the element directly when it is not a DOM element,\n        // or when there is no matching style property that exists.\n        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null***REMOVED*** {\n          return tween.elem[tween.prop];\n        ***REMOVED***\n\n        // Passing an empty string as a 3rd parameter to .css will automatically\n        // attempt a parseFloat and fallback to a string if the parse fails.\n        // Simple values such as \"10px\" are parsed to Float;\n        // complex values such as \"rotate(1rad***REMOVED***\" are returned as-is.\n        result = jQuery.css(tween.elem, tween.prop, \"\"***REMOVED***;\n\n        // Empty strings, null, undefined and \"auto\" are converted to 0.\n        return !result || result === \"auto\" ? 0 : result;\n      ***REMOVED***,\n      set: function (tween***REMOVED*** {\n        // Use step hook for back compat.\n        // Use cssHook if its there.\n        // Use .style if available and use plain properties where available.\n        if (jQuery.fx.step[tween.prop]***REMOVED*** {\n          jQuery.fx.step[tween.prop](tween***REMOVED***;\n        ***REMOVED*** else if (tween.elem.nodeType === 1 && (jQuery.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop***REMOVED***] != null***REMOVED******REMOVED*** {\n          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit***REMOVED***;\n        ***REMOVED*** else {\n          tween.elem[tween.prop] = tween.now;\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED***;\n\n  // Support: IE <=9 only\n  // Panic based approach to setting things on disconnected nodes\n  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n    set: function (tween***REMOVED*** {\n      if (tween.elem.nodeType && tween.elem.parentNode***REMOVED*** {\n        tween.elem[tween.prop] = tween.now;\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED***;\n  jQuery.easing = {\n    linear: function (p***REMOVED*** {\n      return p;\n    ***REMOVED***,\n    swing: function (p***REMOVED*** {\n      return 0.5 - Math.cos(p * Math.PI***REMOVED*** / 2;\n    ***REMOVED***,\n    _default: \"swing\"\n  ***REMOVED***;\n  jQuery.fx = Tween.prototype.init;\n\n  // Back compat <1.8 extension point\n  jQuery.fx.step = {***REMOVED***;\n  var fxNow,\n    inProgress,\n    rfxtypes = /^(?:toggle|show|hide***REMOVED***$/,\n    rrun = /queueHooks$/;\n  function schedule(***REMOVED*** {\n    if (inProgress***REMOVED*** {\n      if (document.hidden === false && window.requestAnimationFrame***REMOVED*** {\n        window.requestAnimationFrame(schedule***REMOVED***;\n      ***REMOVED*** else {\n        window.setTimeout(schedule, jQuery.fx.interval***REMOVED***;\n      ***REMOVED***\n      jQuery.fx.tick(***REMOVED***;\n    ***REMOVED***\n  ***REMOVED***\n\n  // Animations created synchronously will run synchronously\n  function createFxNow(***REMOVED*** {\n    window.setTimeout(function (***REMOVED*** {\n      fxNow = undefined;\n    ***REMOVED******REMOVED***;\n    return fxNow = Date.now(***REMOVED***;\n  ***REMOVED***\n\n  // Generate parameters to create a standard animation\n  function genFx(type, includeWidth***REMOVED*** {\n    var which,\n      i = 0,\n      attrs = {\n        height: type\n      ***REMOVED***;\n\n    // If we include width, step value is 1 to do all cssExpand values,\n    // otherwise step value is 2 to skip over Left and Right\n    includeWidth = includeWidth ? 1 : 0;\n    for (; i < 4; i += 2 - includeWidth***REMOVED*** {\n      which = cssExpand[i];\n      attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;\n    ***REMOVED***\n    if (includeWidth***REMOVED*** {\n      attrs.opacity = attrs.width = type;\n    ***REMOVED***\n    return attrs;\n  ***REMOVED***\n  function createTween(value, prop, animation***REMOVED*** {\n    var tween,\n      collection = (Animation.tweeners[prop] || []***REMOVED***.concat(Animation.tweeners[\"*\"]***REMOVED***,\n      index = 0,\n      length = collection.length;\n    for (; index < length; index++***REMOVED*** {\n      if (tween = collection[index].call(animation, prop, value***REMOVED******REMOVED*** {\n        // We're done with this property\n        return tween;\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED***\n  function defaultPrefilter(elem, props, opts***REMOVED*** {\n    var prop,\n      value,\n      toggle,\n      hooks,\n      oldfire,\n      propTween,\n      restoreDisplay,\n      display,\n      isBox = \"width\" in props || \"height\" in props,\n      anim = this,\n      orig = {***REMOVED***,\n      style = elem.style,\n      hidden = elem.nodeType && isHiddenWithinTree(elem***REMOVED***,\n      dataShow = dataPriv.get(elem, \"fxshow\"***REMOVED***;\n\n    // Queue-skipping animations hijack the fx hooks\n    if (!opts.queue***REMOVED*** {\n      hooks = jQuery._queueHooks(elem, \"fx\"***REMOVED***;\n      if (hooks.unqueued == null***REMOVED*** {\n        hooks.unqueued = 0;\n        oldfire = hooks.empty.fire;\n        hooks.empty.fire = function (***REMOVED*** {\n          if (!hooks.unqueued***REMOVED*** {\n            oldfire(***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***;\n      ***REMOVED***\n      hooks.unqueued++;\n      anim.always(function (***REMOVED*** {\n        // Ensure the complete handler is called before this completes\n        anim.always(function (***REMOVED*** {\n          hooks.unqueued--;\n          if (!jQuery.queue(elem, \"fx\"***REMOVED***.length***REMOVED*** {\n            hooks.empty.fire(***REMOVED***;\n          ***REMOVED***\n        ***REMOVED******REMOVED***;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n\n    // Detect show/hide animations\n    for (prop in props***REMOVED*** {\n      value = props[prop];\n      if (rfxtypes.test(value***REMOVED******REMOVED*** {\n        delete props[prop];\n        toggle = toggle || value === \"toggle\";\n        if (value === (hidden ? \"hide\" : \"show\"***REMOVED******REMOVED*** {\n          // Pretend to be hidden if this is a \"show\" and\n          // there is still data from a stopped show/hide\n          if (value === \"show\" && dataShow && dataShow[prop] !== undefined***REMOVED*** {\n            hidden = true;\n\n            // Ignore all other no-op show/hide data\n          ***REMOVED*** else {\n            continue;\n          ***REMOVED***\n        ***REMOVED***\n        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***\n\n    // Bail out if this is a no-op like .hide(***REMOVED***.hide(***REMOVED***\n    propTween = !jQuery.isEmptyObject(props***REMOVED***;\n    if (!propTween && jQuery.isEmptyObject(orig***REMOVED******REMOVED*** {\n      return;\n    ***REMOVED***\n\n    // Restrict \"overflow\" and \"display\" styles during box animations\n    if (isBox && elem.nodeType === 1***REMOVED*** {\n      // Support: IE <=9 - 11, Edge 12 - 15\n      // Record all 3 overflow attributes because IE does not infer the shorthand\n      // from identically-valued overflowX and overflowY and Edge just mirrors\n      // the overflowX value there.\n      opts.overflow = [style.overflow, style.overflowX, style.overflowY];\n\n      // Identify a display type, preferring old show/hide data over the CSS cascade\n      restoreDisplay = dataShow && dataShow.display;\n      if (restoreDisplay == null***REMOVED*** {\n        restoreDisplay = dataPriv.get(elem, \"display\"***REMOVED***;\n      ***REMOVED***\n      display = jQuery.css(elem, \"display\"***REMOVED***;\n      if (display === \"none\"***REMOVED*** {\n        if (restoreDisplay***REMOVED*** {\n          display = restoreDisplay;\n        ***REMOVED*** else {\n          // Get nonempty value(s***REMOVED*** by temporarily forcing visibility\n          showHide([elem], true***REMOVED***;\n          restoreDisplay = elem.style.display || restoreDisplay;\n          display = jQuery.css(elem, \"display\"***REMOVED***;\n          showHide([elem]***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n\n      // Animate inline elements as inline-block\n      if (display === \"inline\" || display === \"inline-block\" && restoreDisplay != null***REMOVED*** {\n        if (jQuery.css(elem, \"float\"***REMOVED*** === \"none\"***REMOVED*** {\n          // Restore the original display value at the end of pure show/hide animations\n          if (!propTween***REMOVED*** {\n            anim.done(function (***REMOVED*** {\n              style.display = restoreDisplay;\n            ***REMOVED******REMOVED***;\n            if (restoreDisplay == null***REMOVED*** {\n              display = style.display;\n              restoreDisplay = display === \"none\" ? \"\" : display;\n            ***REMOVED***\n          ***REMOVED***\n          style.display = \"inline-block\";\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n    if (opts.overflow***REMOVED*** {\n      style.overflow = \"hidden\";\n      anim.always(function (***REMOVED*** {\n        style.overflow = opts.overflow[0];\n        style.overflowX = opts.overflow[1];\n        style.overflowY = opts.overflow[2];\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n\n    // Implement show/hide animations\n    propTween = false;\n    for (prop in orig***REMOVED*** {\n      // General show/hide setup for this element animation\n      if (!propTween***REMOVED*** {\n        if (dataShow***REMOVED*** {\n          if (\"hidden\" in dataShow***REMOVED*** {\n            hidden = dataShow.hidden;\n          ***REMOVED***\n        ***REMOVED*** else {\n          dataShow = dataPriv.access(elem, \"fxshow\", {\n            display: restoreDisplay\n          ***REMOVED******REMOVED***;\n        ***REMOVED***\n\n        // Store hidden/visible for toggle so `.stop(***REMOVED***.toggle(***REMOVED***` \"reverses\"\n        if (toggle***REMOVED*** {\n          dataShow.hidden = !hidden;\n        ***REMOVED***\n\n        // Show elements before animating them\n        if (hidden***REMOVED*** {\n          showHide([elem], true***REMOVED***;\n        ***REMOVED***\n\n        /* eslint-disable no-loop-func */\n\n        anim.done(function (***REMOVED*** {\n          /* eslint-enable no-loop-func */\n\n          // The final step of a \"hide\" animation is actually hiding the element\n          if (!hidden***REMOVED*** {\n            showHide([elem]***REMOVED***;\n          ***REMOVED***\n          dataPriv.remove(elem, \"fxshow\"***REMOVED***;\n          for (prop in orig***REMOVED*** {\n            jQuery.style(elem, prop, orig[prop]***REMOVED***;\n          ***REMOVED***\n        ***REMOVED******REMOVED***;\n      ***REMOVED***\n\n      // Per-property setup\n      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim***REMOVED***;\n      if (!(prop in dataShow***REMOVED******REMOVED*** {\n        dataShow[prop] = propTween.start;\n        if (hidden***REMOVED*** {\n          propTween.end = propTween.start;\n          propTween.start = 0;\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED***\n  function propFilter(props, specialEasing***REMOVED*** {\n    var index, name, easing, value, hooks;\n\n    // camelCase, specialEasing and expand cssHook pass\n    for (index in props***REMOVED*** {\n      name = camelCase(index***REMOVED***;\n      easing = specialEasing[name];\n      value = props[index];\n      if (Array.isArray(value***REMOVED******REMOVED*** {\n        easing = value[1];\n        value = props[index] = value[0];\n      ***REMOVED***\n      if (index !== name***REMOVED*** {\n        props[name] = value;\n        delete props[index];\n      ***REMOVED***\n      hooks = jQuery.cssHooks[name];\n      if (hooks && \"expand\" in hooks***REMOVED*** {\n        value = hooks.expand(value***REMOVED***;\n        delete props[name];\n\n        // Not quite $.extend, this won't overwrite existing keys.\n        // Reusing 'index' because we have the correct \"name\"\n        for (index in value***REMOVED*** {\n          if (!(index in props***REMOVED******REMOVED*** {\n            props[index] = value[index];\n            specialEasing[index] = easing;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED*** else {\n        specialEasing[name] = easing;\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED***\n  function Animation(elem, properties, options***REMOVED*** {\n    var result,\n      stopped,\n      index = 0,\n      length = Animation.prefilters.length,\n      deferred = jQuery.Deferred(***REMOVED***.always(function (***REMOVED*** {\n        // Don't match elem in the :animated selector\n        delete tick.elem;\n      ***REMOVED******REMOVED***,\n      tick = function (***REMOVED*** {\n        if (stopped***REMOVED*** {\n          return false;\n        ***REMOVED***\n        var currentTime = fxNow || createFxNow(***REMOVED***,\n          remaining = Math.max(0, animation.startTime + animation.duration - currentTime***REMOVED***,\n          // Support: Android 2.3 only\n          // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 ***REMOVED***` (#12497***REMOVED***\n          temp = remaining / animation.duration || 0,\n          percent = 1 - temp,\n          index = 0,\n          length = animation.tweens.length;\n        for (; index < length; index++***REMOVED*** {\n          animation.tweens[index].run(percent***REMOVED***;\n        ***REMOVED***\n        deferred.notifyWith(elem, [animation, percent, remaining]***REMOVED***;\n\n        // If there's more to do, yield\n        if (percent < 1 && length***REMOVED*** {\n          return remaining;\n        ***REMOVED***\n\n        // If this was an empty animation, synthesize a final progress notification\n        if (!length***REMOVED*** {\n          deferred.notifyWith(elem, [animation, 1, 0]***REMOVED***;\n        ***REMOVED***\n\n        // Resolve the animation and report its conclusion\n        deferred.resolveWith(elem, [animation]***REMOVED***;\n        return false;\n      ***REMOVED***,\n      animation = deferred.promise({\n        elem: elem,\n        props: jQuery.extend({***REMOVED***, properties***REMOVED***,\n        opts: jQuery.extend(true, {\n          specialEasing: {***REMOVED***,\n          easing: jQuery.easing._default\n        ***REMOVED***, options***REMOVED***,\n        originalProperties: properties,\n        originalOptions: options,\n        startTime: fxNow || createFxNow(***REMOVED***,\n        duration: options.duration,\n        tweens: [],\n        createTween: function (prop, end***REMOVED*** {\n          var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing***REMOVED***;\n          animation.tweens.push(tween***REMOVED***;\n          return tween;\n        ***REMOVED***,\n        stop: function (gotoEnd***REMOVED*** {\n          var index = 0,\n            // If we are going to the end, we want to run all the tweens\n            // otherwise we skip this part\n            length = gotoEnd ? animation.tweens.length : 0;\n          if (stopped***REMOVED*** {\n            return this;\n          ***REMOVED***\n          stopped = true;\n          for (; index < length; index++***REMOVED*** {\n            animation.tweens[index].run(1***REMOVED***;\n          ***REMOVED***\n\n          // Resolve when we played the last frame; otherwise, reject\n          if (gotoEnd***REMOVED*** {\n            deferred.notifyWith(elem, [animation, 1, 0]***REMOVED***;\n            deferred.resolveWith(elem, [animation, gotoEnd]***REMOVED***;\n          ***REMOVED*** else {\n            deferred.rejectWith(elem, [animation, gotoEnd]***REMOVED***;\n          ***REMOVED***\n          return this;\n        ***REMOVED***\n      ***REMOVED******REMOVED***,\n      props = animation.props;\n    propFilter(props, animation.opts.specialEasing***REMOVED***;\n    for (; index < length; index++***REMOVED*** {\n      result = Animation.prefilters[index].call(animation, elem, props, animation.opts***REMOVED***;\n      if (result***REMOVED*** {\n        if (isFunction(result.stop***REMOVED******REMOVED*** {\n          jQuery._queueHooks(animation.elem, animation.opts.queue***REMOVED***.stop = result.stop.bind(result***REMOVED***;\n        ***REMOVED***\n        return result;\n      ***REMOVED***\n    ***REMOVED***\n    jQuery.map(props, createTween, animation***REMOVED***;\n    if (isFunction(animation.opts.start***REMOVED******REMOVED*** {\n      animation.opts.start.call(elem, animation***REMOVED***;\n    ***REMOVED***\n\n    // Attach callbacks from options\n    animation.progress(animation.opts.progress***REMOVED***.done(animation.opts.done, animation.opts.complete***REMOVED***.fail(animation.opts.fail***REMOVED***.always(animation.opts.always***REMOVED***;\n    jQuery.fx.timer(jQuery.extend(tick, {\n      elem: elem,\n      anim: animation,\n      queue: animation.opts.queue\n    ***REMOVED******REMOVED******REMOVED***;\n    return animation;\n  ***REMOVED***\n  jQuery.Animation = jQuery.extend(Animation, {\n    tweeners: {\n      \"*\": [function (prop, value***REMOVED*** {\n        var tween = this.createTween(prop, value***REMOVED***;\n        adjustCSS(tween.elem, prop, rcssNum.exec(value***REMOVED***, tween***REMOVED***;\n        return tween;\n      ***REMOVED***]\n    ***REMOVED***,\n    tweener: function (props, callback***REMOVED*** {\n      if (isFunction(props***REMOVED******REMOVED*** {\n        callback = props;\n        props = [\"*\"];\n      ***REMOVED*** else {\n        props = props.match(rnothtmlwhite***REMOVED***;\n      ***REMOVED***\n      var prop,\n        index = 0,\n        length = props.length;\n      for (; index < length; index++***REMOVED*** {\n        prop = props[index];\n        Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n        Animation.tweeners[prop].unshift(callback***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***,\n    prefilters: [defaultPrefilter],\n    prefilter: function (callback, prepend***REMOVED*** {\n      if (prepend***REMOVED*** {\n        Animation.prefilters.unshift(callback***REMOVED***;\n      ***REMOVED*** else {\n        Animation.prefilters.push(callback***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.speed = function (speed, easing, fn***REMOVED*** {\n    var opt = speed && typeof speed === \"object\" ? jQuery.extend({***REMOVED***, speed***REMOVED*** : {\n      complete: fn || !fn && easing || isFunction(speed***REMOVED*** && speed,\n      duration: speed,\n      easing: fn && easing || easing && !isFunction(easing***REMOVED*** && easing\n    ***REMOVED***;\n\n    // Go to the end state if fx are off\n    if (jQuery.fx.off***REMOVED*** {\n      opt.duration = 0;\n    ***REMOVED*** else {\n      if (typeof opt.duration !== \"number\"***REMOVED*** {\n        if (opt.duration in jQuery.fx.speeds***REMOVED*** {\n          opt.duration = jQuery.fx.speeds[opt.duration];\n        ***REMOVED*** else {\n          opt.duration = jQuery.fx.speeds._default;\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n\n    // Normalize opt.queue - true/undefined/null -> \"fx\"\n    if (opt.queue == null || opt.queue === true***REMOVED*** {\n      opt.queue = \"fx\";\n    ***REMOVED***\n\n    // Queueing\n    opt.old = opt.complete;\n    opt.complete = function (***REMOVED*** {\n      if (isFunction(opt.old***REMOVED******REMOVED*** {\n        opt.old.call(this***REMOVED***;\n      ***REMOVED***\n      if (opt.queue***REMOVED*** {\n        jQuery.dequeue(this, opt.queue***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***;\n    return opt;\n  ***REMOVED***;\n  jQuery.fn.extend({\n    fadeTo: function (speed, to, easing, callback***REMOVED*** {\n      // Show any hidden elements after setting opacity to 0\n      return this.filter(isHiddenWithinTree***REMOVED***.css(\"opacity\", 0***REMOVED***.show(***REMOVED***\n\n      // Animate to the value specified\n      .end(***REMOVED***.animate({\n        opacity: to\n      ***REMOVED***, speed, easing, callback***REMOVED***;\n    ***REMOVED***,\n    animate: function (prop, speed, easing, callback***REMOVED*** {\n      var empty = jQuery.isEmptyObject(prop***REMOVED***,\n        optall = jQuery.speed(speed, easing, callback***REMOVED***,\n        doAnimation = function (***REMOVED*** {\n          // Operate on a copy of prop so per-property easing won't be lost\n          var anim = Animation(this, jQuery.extend({***REMOVED***, prop***REMOVED***, optall***REMOVED***;\n\n          // Empty animations, or finishing resolves immediately\n          if (empty || dataPriv.get(this, \"finish\"***REMOVED******REMOVED*** {\n            anim.stop(true***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***;\n      doAnimation.finish = doAnimation;\n      return empty || optall.queue === false ? this.each(doAnimation***REMOVED*** : this.queue(optall.queue, doAnimation***REMOVED***;\n    ***REMOVED***,\n    stop: function (type, clearQueue, gotoEnd***REMOVED*** {\n      var stopQueue = function (hooks***REMOVED*** {\n        var stop = hooks.stop;\n        delete hooks.stop;\n        stop(gotoEnd***REMOVED***;\n      ***REMOVED***;\n      if (typeof type !== \"string\"***REMOVED*** {\n        gotoEnd = clearQueue;\n        clearQueue = type;\n        type = undefined;\n      ***REMOVED***\n      if (clearQueue***REMOVED*** {\n        this.queue(type || \"fx\", []***REMOVED***;\n      ***REMOVED***\n      return this.each(function (***REMOVED*** {\n        var dequeue = true,\n          index = type != null && type + \"queueHooks\",\n          timers = jQuery.timers,\n          data = dataPriv.get(this***REMOVED***;\n        if (index***REMOVED*** {\n          if (data[index] && data[index].stop***REMOVED*** {\n            stopQueue(data[index]***REMOVED***;\n          ***REMOVED***\n        ***REMOVED*** else {\n          for (index in data***REMOVED*** {\n            if (data[index] && data[index].stop && rrun.test(index***REMOVED******REMOVED*** {\n              stopQueue(data[index]***REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n        for (index = timers.length; index--;***REMOVED*** {\n          if (timers[index].elem === this && (type == null || timers[index].queue === type***REMOVED******REMOVED*** {\n            timers[index].anim.stop(gotoEnd***REMOVED***;\n            dequeue = false;\n            timers.splice(index, 1***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n\n        // Start the next in the queue if the last step wasn't forced.\n        // Timers currently will call their complete callbacks, which\n        // will dequeue but only if they were gotoEnd.\n        if (dequeue || !gotoEnd***REMOVED*** {\n          jQuery.dequeue(this, type***REMOVED***;\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***,\n    finish: function (type***REMOVED*** {\n      if (type !== false***REMOVED*** {\n        type = type || \"fx\";\n      ***REMOVED***\n      return this.each(function (***REMOVED*** {\n        var index,\n          data = dataPriv.get(this***REMOVED***,\n          queue = data[type + \"queue\"],\n          hooks = data[type + \"queueHooks\"],\n          timers = jQuery.timers,\n          length = queue ? queue.length : 0;\n\n        // Enable finishing flag on private data\n        data.finish = true;\n\n        // Empty the queue first\n        jQuery.queue(this, type, []***REMOVED***;\n        if (hooks && hooks.stop***REMOVED*** {\n          hooks.stop.call(this, true***REMOVED***;\n        ***REMOVED***\n\n        // Look for any active animations, and finish them\n        for (index = timers.length; index--;***REMOVED*** {\n          if (timers[index].elem === this && timers[index].queue === type***REMOVED*** {\n            timers[index].anim.stop(true***REMOVED***;\n            timers.splice(index, 1***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n\n        // Look for any animations in the old queue and finish them\n        for (index = 0; index < length; index++***REMOVED*** {\n          if (queue[index] && queue[index].finish***REMOVED*** {\n            queue[index].finish.call(this***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n\n        // Turn off finishing flag\n        delete data.finish;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.each([\"toggle\", \"show\", \"hide\"], function (_i, name***REMOVED*** {\n    var cssFn = jQuery.fn[name];\n    jQuery.fn[name] = function (speed, easing, callback***REMOVED*** {\n      return speed == null || typeof speed === \"boolean\" ? cssFn.apply(this, arguments***REMOVED*** : this.animate(genFx(name, true***REMOVED***, speed, easing, callback***REMOVED***;\n    ***REMOVED***;\n  ***REMOVED******REMOVED***;\n\n  // Generate shortcuts for custom animations\n  jQuery.each({\n    slideDown: genFx(\"show\"***REMOVED***,\n    slideUp: genFx(\"hide\"***REMOVED***,\n    slideToggle: genFx(\"toggle\"***REMOVED***,\n    fadeIn: {\n      opacity: \"show\"\n    ***REMOVED***,\n    fadeOut: {\n      opacity: \"hide\"\n    ***REMOVED***,\n    fadeToggle: {\n      opacity: \"toggle\"\n    ***REMOVED***\n  ***REMOVED***, function (name, props***REMOVED*** {\n    jQuery.fn[name] = function (speed, easing, callback***REMOVED*** {\n      return this.animate(props, speed, easing, callback***REMOVED***;\n    ***REMOVED***;\n  ***REMOVED******REMOVED***;\n  jQuery.timers = [];\n  jQuery.fx.tick = function (***REMOVED*** {\n    var timer,\n      i = 0,\n      timers = jQuery.timers;\n    fxNow = Date.now(***REMOVED***;\n    for (; i < timers.length; i++***REMOVED*** {\n      timer = timers[i];\n\n      // Run the timer and safely remove it when done (allowing for external removal***REMOVED***\n      if (!timer(***REMOVED*** && timers[i] === timer***REMOVED*** {\n        timers.splice(i--, 1***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***\n    if (!timers.length***REMOVED*** {\n      jQuery.fx.stop(***REMOVED***;\n    ***REMOVED***\n    fxNow = undefined;\n  ***REMOVED***;\n  jQuery.fx.timer = function (timer***REMOVED*** {\n    jQuery.timers.push(timer***REMOVED***;\n    jQuery.fx.start(***REMOVED***;\n  ***REMOVED***;\n  jQuery.fx.interval = 13;\n  jQuery.fx.start = function (***REMOVED*** {\n    if (inProgress***REMOVED*** {\n      return;\n    ***REMOVED***\n    inProgress = true;\n    schedule(***REMOVED***;\n  ***REMOVED***;\n  jQuery.fx.stop = function (***REMOVED*** {\n    inProgress = null;\n  ***REMOVED***;\n  jQuery.fx.speeds = {\n    slow: 600,\n    fast: 200,\n    // Default speed\n    _default: 400\n  ***REMOVED***;\n\n  // Based off of the plugin by Clint Helfers, with permission.\n  // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n  jQuery.fn.delay = function (time, type***REMOVED*** {\n    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n    type = type || \"fx\";\n    return this.queue(type, function (next, hooks***REMOVED*** {\n      var timeout = window.setTimeout(next, time***REMOVED***;\n      hooks.stop = function (***REMOVED*** {\n        window.clearTimeout(timeout***REMOVED***;\n      ***REMOVED***;\n    ***REMOVED******REMOVED***;\n  ***REMOVED***;\n  (function (***REMOVED*** {\n    var input = document.createElement(\"input\"***REMOVED***,\n      select = document.createElement(\"select\"***REMOVED***,\n      opt = select.appendChild(document.createElement(\"option\"***REMOVED******REMOVED***;\n    input.type = \"checkbox\";\n\n    // Support: Android <=4.3 only\n    // Default value for a checkbox should be \"on\"\n    support.checkOn = input.value !== \"\";\n\n    // Support: IE <=11 only\n    // Must access selectedIndex to make default options select\n    support.optSelected = opt.selected;\n\n    // Support: IE <=11 only\n    // An input loses its value after becoming a radio\n    input = document.createElement(\"input\"***REMOVED***;\n    input.value = \"t\";\n    input.type = \"radio\";\n    support.radioValue = input.value === \"t\";\n  ***REMOVED******REMOVED***(***REMOVED***;\n  var boolHook,\n    attrHandle = jQuery.expr.attrHandle;\n  jQuery.fn.extend({\n    attr: function (name, value***REMOVED*** {\n      return access(this, jQuery.attr, name, value, arguments.length > 1***REMOVED***;\n    ***REMOVED***,\n    removeAttr: function (name***REMOVED*** {\n      return this.each(function (***REMOVED*** {\n        jQuery.removeAttr(this, name***REMOVED***;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.extend({\n    attr: function (elem, name, value***REMOVED*** {\n      var ret,\n        hooks,\n        nType = elem.nodeType;\n\n      // Don't get/set attributes on text, comment and attribute nodes\n      if (nType === 3 || nType === 8 || nType === 2***REMOVED*** {\n        return;\n      ***REMOVED***\n\n      // Fallback to prop when attributes are not supported\n      if (typeof elem.getAttribute === \"undefined\"***REMOVED*** {\n        return jQuery.prop(elem, name, value***REMOVED***;\n      ***REMOVED***\n\n      // Attribute hooks are determined by the lowercase version\n      // Grab necessary hook if one is defined\n      if (nType !== 1 || !jQuery.isXMLDoc(elem***REMOVED******REMOVED*** {\n        hooks = jQuery.attrHooks[name.toLowerCase(***REMOVED***] || (jQuery.expr.match.bool.test(name***REMOVED*** ? boolHook : undefined***REMOVED***;\n      ***REMOVED***\n      if (value !== undefined***REMOVED*** {\n        if (value === null***REMOVED*** {\n          jQuery.removeAttr(elem, name***REMOVED***;\n          return;\n        ***REMOVED***\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name***REMOVED******REMOVED*** !== undefined***REMOVED*** {\n          return ret;\n        ***REMOVED***\n        elem.setAttribute(name, value + \"\"***REMOVED***;\n        return value;\n      ***REMOVED***\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name***REMOVED******REMOVED*** !== null***REMOVED*** {\n        return ret;\n      ***REMOVED***\n      ret = jQuery.find.attr(elem, name***REMOVED***;\n\n      // Non-existent attributes return null, we normalize to undefined\n      return ret == null ? undefined : ret;\n    ***REMOVED***,\n    attrHooks: {\n      type: {\n        set: function (elem, value***REMOVED*** {\n          if (!support.radioValue && value === \"radio\" && nodeName(elem, \"input\"***REMOVED******REMOVED*** {\n            var val = elem.value;\n            elem.setAttribute(\"type\", value***REMOVED***;\n            if (val***REMOVED*** {\n              elem.value = val;\n            ***REMOVED***\n            return value;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***,\n    removeAttr: function (elem, value***REMOVED*** {\n      var name,\n        i = 0,\n        // Attribute names can contain non-HTML whitespace characters\n        // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n        attrNames = value && value.match(rnothtmlwhite***REMOVED***;\n      if (attrNames && elem.nodeType === 1***REMOVED*** {\n        while (name = attrNames[i++]***REMOVED*** {\n          elem.removeAttribute(name***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n\n  // Hooks for boolean attributes\n  boolHook = {\n    set: function (elem, value, name***REMOVED*** {\n      if (value === false***REMOVED*** {\n        // Remove boolean attributes when set to false\n        jQuery.removeAttr(elem, name***REMOVED***;\n      ***REMOVED*** else {\n        elem.setAttribute(name, name***REMOVED***;\n      ***REMOVED***\n      return name;\n    ***REMOVED***\n  ***REMOVED***;\n  jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g***REMOVED***, function (_i, name***REMOVED*** {\n    var getter = attrHandle[name] || jQuery.find.attr;\n    attrHandle[name] = function (elem, name, isXML***REMOVED*** {\n      var ret,\n        handle,\n        lowercaseName = name.toLowerCase(***REMOVED***;\n      if (!isXML***REMOVED*** {\n        // Avoid an infinite loop by temporarily removing this function from the getter\n        handle = attrHandle[lowercaseName];\n        attrHandle[lowercaseName] = ret;\n        ret = getter(elem, name, isXML***REMOVED*** != null ? lowercaseName : null;\n        attrHandle[lowercaseName] = handle;\n      ***REMOVED***\n      return ret;\n    ***REMOVED***;\n  ***REMOVED******REMOVED***;\n  var rfocusable = /^(?:input|select|textarea|button***REMOVED***$/i,\n    rclickable = /^(?:a|area***REMOVED***$/i;\n  jQuery.fn.extend({\n    prop: function (name, value***REMOVED*** {\n      return access(this, jQuery.prop, name, value, arguments.length > 1***REMOVED***;\n    ***REMOVED***,\n    removeProp: function (name***REMOVED*** {\n      return this.each(function (***REMOVED*** {\n        delete this[jQuery.propFix[name] || name];\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.extend({\n    prop: function (elem, name, value***REMOVED*** {\n      var ret,\n        hooks,\n        nType = elem.nodeType;\n\n      // Don't get/set properties on text, comment and attribute nodes\n      if (nType === 3 || nType === 8 || nType === 2***REMOVED*** {\n        return;\n      ***REMOVED***\n      if (nType !== 1 || !jQuery.isXMLDoc(elem***REMOVED******REMOVED*** {\n        // Fix name and attach hooks\n        name = jQuery.propFix[name] || name;\n        hooks = jQuery.propHooks[name];\n      ***REMOVED***\n      if (value !== undefined***REMOVED*** {\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name***REMOVED******REMOVED*** !== undefined***REMOVED*** {\n          return ret;\n        ***REMOVED***\n        return elem[name] = value;\n      ***REMOVED***\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name***REMOVED******REMOVED*** !== null***REMOVED*** {\n        return ret;\n      ***REMOVED***\n      return elem[name];\n    ***REMOVED***,\n    propHooks: {\n      tabIndex: {\n        get: function (elem***REMOVED*** {\n          // Support: IE <=9 - 11 only\n          // elem.tabIndex doesn't always return the\n          // correct value when it hasn't been explicitly set\n          // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n          // Use proper attribute retrieval(#12072***REMOVED***\n          var tabindex = jQuery.find.attr(elem, \"tabindex\"***REMOVED***;\n          if (tabindex***REMOVED*** {\n            return parseInt(tabindex, 10***REMOVED***;\n          ***REMOVED***\n          if (rfocusable.test(elem.nodeName***REMOVED*** || rclickable.test(elem.nodeName***REMOVED*** && elem.href***REMOVED*** {\n            return 0;\n          ***REMOVED***\n          return -1;\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***,\n    propFix: {\n      \"for\": \"htmlFor\",\n      \"class\": \"className\"\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n\n  // Support: IE <=11 only\n  // Accessing the selectedIndex property\n  // forces the browser to respect setting selected\n  // on the option\n  // The getter ensures a default option is selected\n  // when in an optgroup\n  // eslint rule \"no-unused-expressions\" is disabled for this code\n  // since it considers such accessions noop\n  if (!support.optSelected***REMOVED*** {\n    jQuery.propHooks.selected = {\n      get: function (elem***REMOVED*** {\n        /* eslint no-unused-expressions: \"off\" */\n\n        var parent = elem.parentNode;\n        if (parent && parent.parentNode***REMOVED*** {\n          parent.parentNode.selectedIndex;\n        ***REMOVED***\n        return null;\n      ***REMOVED***,\n      set: function (elem***REMOVED*** {\n        /* eslint no-unused-expressions: \"off\" */\n\n        var parent = elem.parentNode;\n        if (parent***REMOVED*** {\n          parent.selectedIndex;\n          if (parent.parentNode***REMOVED*** {\n            parent.parentNode.selectedIndex;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***;\n  ***REMOVED***\n  jQuery.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function (***REMOVED*** {\n    jQuery.propFix[this.toLowerCase(***REMOVED***] = this;\n  ***REMOVED******REMOVED***;\n\n  // Strip and collapse whitespace according to HTML spec\n  // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n  function stripAndCollapse(value***REMOVED*** {\n    var tokens = value.match(rnothtmlwhite***REMOVED*** || [];\n    return tokens.join(\" \"***REMOVED***;\n  ***REMOVED***\n  function getClass(elem***REMOVED*** {\n    return elem.getAttribute && elem.getAttribute(\"class\"***REMOVED*** || \"\";\n  ***REMOVED***\n  function classesToArray(value***REMOVED*** {\n    if (Array.isArray(value***REMOVED******REMOVED*** {\n      return value;\n    ***REMOVED***\n    if (typeof value === \"string\"***REMOVED*** {\n      return value.match(rnothtmlwhite***REMOVED*** || [];\n    ***REMOVED***\n    return [];\n  ***REMOVED***\n  jQuery.fn.extend({\n    addClass: function (value***REMOVED*** {\n      var classes,\n        elem,\n        cur,\n        curValue,\n        clazz,\n        j,\n        finalValue,\n        i = 0;\n      if (isFunction(value***REMOVED******REMOVED*** {\n        return this.each(function (j***REMOVED*** {\n          jQuery(this***REMOVED***.addClass(value.call(this, j, getClass(this***REMOVED******REMOVED******REMOVED***;\n        ***REMOVED******REMOVED***;\n      ***REMOVED***\n      classes = classesToArray(value***REMOVED***;\n      if (classes.length***REMOVED*** {\n        while (elem = this[i++]***REMOVED*** {\n          curValue = getClass(elem***REMOVED***;\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue***REMOVED*** + \" \";\n          if (cur***REMOVED*** {\n            j = 0;\n            while (clazz = classes[j++]***REMOVED*** {\n              if (cur.indexOf(\" \" + clazz + \" \"***REMOVED*** < 0***REMOVED*** {\n                cur += clazz + \" \";\n              ***REMOVED***\n            ***REMOVED***\n\n            // Only assign if different to avoid unneeded rendering.\n            finalValue = stripAndCollapse(cur***REMOVED***;\n            if (curValue !== finalValue***REMOVED*** {\n              elem.setAttribute(\"class\", finalValue***REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n      return this;\n    ***REMOVED***,\n    removeClass: function (value***REMOVED*** {\n      var classes,\n        elem,\n        cur,\n        curValue,\n        clazz,\n        j,\n        finalValue,\n        i = 0;\n      if (isFunction(value***REMOVED******REMOVED*** {\n        return this.each(function (j***REMOVED*** {\n          jQuery(this***REMOVED***.removeClass(value.call(this, j, getClass(this***REMOVED******REMOVED******REMOVED***;\n        ***REMOVED******REMOVED***;\n      ***REMOVED***\n      if (!arguments.length***REMOVED*** {\n        return this.attr(\"class\", \"\"***REMOVED***;\n      ***REMOVED***\n      classes = classesToArray(value***REMOVED***;\n      if (classes.length***REMOVED*** {\n        while (elem = this[i++]***REMOVED*** {\n          curValue = getClass(elem***REMOVED***;\n\n          // This expression is here for better compressibility (see addClass***REMOVED***\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue***REMOVED*** + \" \";\n          if (cur***REMOVED*** {\n            j = 0;\n            while (clazz = classes[j++]***REMOVED*** {\n              // Remove *all* instances\n              while (cur.indexOf(\" \" + clazz + \" \"***REMOVED*** > -1***REMOVED*** {\n                cur = cur.replace(\" \" + clazz + \" \", \" \"***REMOVED***;\n              ***REMOVED***\n            ***REMOVED***\n\n            // Only assign if different to avoid unneeded rendering.\n            finalValue = stripAndCollapse(cur***REMOVED***;\n            if (curValue !== finalValue***REMOVED*** {\n              elem.setAttribute(\"class\", finalValue***REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n      return this;\n    ***REMOVED***,\n    toggleClass: function (value, stateVal***REMOVED*** {\n      var type = typeof value,\n        isValidValue = type === \"string\" || Array.isArray(value***REMOVED***;\n      if (typeof stateVal === \"boolean\" && isValidValue***REMOVED*** {\n        return stateVal ? this.addClass(value***REMOVED*** : this.removeClass(value***REMOVED***;\n      ***REMOVED***\n      if (isFunction(value***REMOVED******REMOVED*** {\n        return this.each(function (i***REMOVED*** {\n          jQuery(this***REMOVED***.toggleClass(value.call(this, i, getClass(this***REMOVED***, stateVal***REMOVED***, stateVal***REMOVED***;\n        ***REMOVED******REMOVED***;\n      ***REMOVED***\n      return this.each(function (***REMOVED*** {\n        var className, i, self, classNames;\n        if (isValidValue***REMOVED*** {\n          // Toggle individual class names\n          i = 0;\n          self = jQuery(this***REMOVED***;\n          classNames = classesToArray(value***REMOVED***;\n          while (className = classNames[i++]***REMOVED*** {\n            // Check each className given, space separated list\n            if (self.hasClass(className***REMOVED******REMOVED*** {\n              self.removeClass(className***REMOVED***;\n            ***REMOVED*** else {\n              self.addClass(className***REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n\n          // Toggle whole class name\n        ***REMOVED*** else if (value === undefined || type === \"boolean\"***REMOVED*** {\n          className = getClass(this***REMOVED***;\n          if (className***REMOVED*** {\n            // Store className if set\n            dataPriv.set(this, \"__className__\", className***REMOVED***;\n          ***REMOVED***\n\n          // If the element has a class name or if we're passed `false`,\n          // then remove the whole classname (if there was one, the above saved it***REMOVED***.\n          // Otherwise bring back whatever was previously saved (if anything***REMOVED***,\n          // falling back to the empty string if nothing was stored.\n          if (this.setAttribute***REMOVED*** {\n            this.setAttribute(\"class\", className || value === false ? \"\" : dataPriv.get(this, \"__className__\"***REMOVED*** || \"\"***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***,\n    hasClass: function (selector***REMOVED*** {\n      var className,\n        elem,\n        i = 0;\n      className = \" \" + selector + \" \";\n      while (elem = this[i++]***REMOVED*** {\n        if (elem.nodeType === 1 && (\" \" + stripAndCollapse(getClass(elem***REMOVED******REMOVED*** + \" \"***REMOVED***.indexOf(className***REMOVED*** > -1***REMOVED*** {\n          return true;\n        ***REMOVED***\n      ***REMOVED***\n      return false;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  var rreturn = /\\r/g;\n  jQuery.fn.extend({\n    val: function (value***REMOVED*** {\n      var hooks,\n        ret,\n        valueIsFunction,\n        elem = this[0];\n      if (!arguments.length***REMOVED*** {\n        if (elem***REMOVED*** {\n          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase(***REMOVED***];\n          if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\"***REMOVED******REMOVED*** !== undefined***REMOVED*** {\n            return ret;\n          ***REMOVED***\n          ret = elem.value;\n\n          // Handle most common string cases\n          if (typeof ret === \"string\"***REMOVED*** {\n            return ret.replace(rreturn, \"\"***REMOVED***;\n          ***REMOVED***\n\n          // Handle cases where value is null/undef or number\n          return ret == null ? \"\" : ret;\n        ***REMOVED***\n        return;\n      ***REMOVED***\n      valueIsFunction = isFunction(value***REMOVED***;\n      return this.each(function (i***REMOVED*** {\n        var val;\n        if (this.nodeType !== 1***REMOVED*** {\n          return;\n        ***REMOVED***\n        if (valueIsFunction***REMOVED*** {\n          val = value.call(this, i, jQuery(this***REMOVED***.val(***REMOVED******REMOVED***;\n        ***REMOVED*** else {\n          val = value;\n        ***REMOVED***\n\n        // Treat null/undefined as \"\"; convert numbers to string\n        if (val == null***REMOVED*** {\n          val = \"\";\n        ***REMOVED*** else if (typeof val === \"number\"***REMOVED*** {\n          val += \"\";\n        ***REMOVED*** else if (Array.isArray(val***REMOVED******REMOVED*** {\n          val = jQuery.map(val, function (value***REMOVED*** {\n            return value == null ? \"\" : value + \"\";\n          ***REMOVED******REMOVED***;\n        ***REMOVED***\n        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase(***REMOVED***];\n\n        // If set returns undefined, fall back to normal setting\n        if (!hooks || !(\"set\" in hooks***REMOVED*** || hooks.set(this, val, \"value\"***REMOVED*** === undefined***REMOVED*** {\n          this.value = val;\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.extend({\n    valHooks: {\n      option: {\n        get: function (elem***REMOVED*** {\n          var val = jQuery.find.attr(elem, \"value\"***REMOVED***;\n          return val != null ? val :\n          // Support: IE <=10 - 11 only\n          // option.text throws exceptions (#14686, #14858***REMOVED***\n          // Strip and collapse whitespace\n          // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n          stripAndCollapse(jQuery.text(elem***REMOVED******REMOVED***;\n        ***REMOVED***\n      ***REMOVED***,\n      select: {\n        get: function (elem***REMOVED*** {\n          var value,\n            option,\n            i,\n            options = elem.options,\n            index = elem.selectedIndex,\n            one = elem.type === \"select-one\",\n            values = one ? null : [],\n            max = one ? index + 1 : options.length;\n          if (index < 0***REMOVED*** {\n            i = max;\n          ***REMOVED*** else {\n            i = one ? index : 0;\n          ***REMOVED***\n\n          // Loop through all the selected options\n          for (; i < max; i++***REMOVED*** {\n            option = options[i];\n\n            // Support: IE <=9 only\n            // IE8-9 doesn't update selected after form reset (#2551***REMOVED***\n            if ((option.selected || i === index***REMOVED*** &&\n            // Don't return options that are disabled or in a disabled optgroup\n            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, \"optgroup\"***REMOVED******REMOVED******REMOVED*** {\n              // Get the specific value for the option\n              value = jQuery(option***REMOVED***.val(***REMOVED***;\n\n              // We don't need an array for one selects\n              if (one***REMOVED*** {\n                return value;\n              ***REMOVED***\n\n              // Multi-Selects return an array\n              values.push(value***REMOVED***;\n            ***REMOVED***\n          ***REMOVED***\n          return values;\n        ***REMOVED***,\n        set: function (elem, value***REMOVED*** {\n          var optionSet,\n            option,\n            options = elem.options,\n            values = jQuery.makeArray(value***REMOVED***,\n            i = options.length;\n          while (i--***REMOVED*** {\n            option = options[i];\n\n            /* eslint-disable no-cond-assign */\n\n            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option***REMOVED***, values***REMOVED*** > -1***REMOVED*** {\n              optionSet = true;\n            ***REMOVED***\n\n            /* eslint-enable no-cond-assign */\n          ***REMOVED***\n\n          // Force browsers to behave consistently when non-matching value is set\n          if (!optionSet***REMOVED*** {\n            elem.selectedIndex = -1;\n          ***REMOVED***\n          return values;\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n\n  // Radios and checkboxes getter/setter\n  jQuery.each([\"radio\", \"checkbox\"], function (***REMOVED*** {\n    jQuery.valHooks[this] = {\n      set: function (elem, value***REMOVED*** {\n        if (Array.isArray(value***REMOVED******REMOVED*** {\n          return elem.checked = jQuery.inArray(jQuery(elem***REMOVED***.val(***REMOVED***, value***REMOVED*** > -1;\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***;\n    if (!support.checkOn***REMOVED*** {\n      jQuery.valHooks[this].get = function (elem***REMOVED*** {\n        return elem.getAttribute(\"value\"***REMOVED*** === null ? \"on\" : elem.value;\n      ***REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n\n  // Return jQuery for attributes-only inclusion\n\n  support.focusin = \"onfocusin\" in window;\n  var rfocusMorph = /^(?:focusinfocus|focusoutblur***REMOVED***$/,\n    stopPropagationCallback = function (e***REMOVED*** {\n      e.stopPropagation(***REMOVED***;\n    ***REMOVED***;\n  jQuery.extend(jQuery.event, {\n    trigger: function (event, data, elem, onlyHandlers***REMOVED*** {\n      var i,\n        cur,\n        tmp,\n        bubbleType,\n        ontype,\n        handle,\n        special,\n        lastElement,\n        eventPath = [elem || document],\n        type = hasOwn.call(event, \"type\"***REMOVED*** ? event.type : event,\n        namespaces = hasOwn.call(event, \"namespace\"***REMOVED*** ? event.namespace.split(\".\"***REMOVED*** : [];\n      cur = lastElement = tmp = elem = elem || document;\n\n      // Don't do events on text and comment nodes\n      if (elem.nodeType === 3 || elem.nodeType === 8***REMOVED*** {\n        return;\n      ***REMOVED***\n\n      // focus/blur morphs to focusin/out; ensure we're not firing them right now\n      if (rfocusMorph.test(type + jQuery.event.triggered***REMOVED******REMOVED*** {\n        return;\n      ***REMOVED***\n      if (type.indexOf(\".\"***REMOVED*** > -1***REMOVED*** {\n        // Namespaced trigger; create a regexp to match event type in handle(***REMOVED***\n        namespaces = type.split(\".\"***REMOVED***;\n        type = namespaces.shift(***REMOVED***;\n        namespaces.sort(***REMOVED***;\n      ***REMOVED***\n      ontype = type.indexOf(\":\"***REMOVED*** < 0 && \"on\" + type;\n\n      // Caller can pass in a jQuery.Event object, Object, or just an event type string\n      event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === \"object\" && event***REMOVED***;\n\n      // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true***REMOVED***\n      event.isTrigger = onlyHandlers ? 2 : 3;\n      event.namespace = namespaces.join(\".\"***REMOVED***;\n      event.rnamespace = event.namespace ? new RegExp(\"(^|\\\\.***REMOVED***\" + namespaces.join(\"\\\\.(?:.*\\\\.|***REMOVED***\"***REMOVED*** + \"(\\\\.|$***REMOVED***\"***REMOVED*** : null;\n\n      // Clean up the event in case it is being reused\n      event.result = undefined;\n      if (!event.target***REMOVED*** {\n        event.target = elem;\n      ***REMOVED***\n\n      // Clone any incoming data and prepend the event, creating the handler arg list\n      data = data == null ? [event] : jQuery.makeArray(data, [event]***REMOVED***;\n\n      // Allow special events to draw outside the lines\n      special = jQuery.event.special[type] || {***REMOVED***;\n      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data***REMOVED*** === false***REMOVED*** {\n        return;\n      ***REMOVED***\n\n      // Determine event propagation path in advance, per W3C events spec (#9951***REMOVED***\n      // Bubble up to document, then to window; watch for a global ownerDocument var (#9724***REMOVED***\n      if (!onlyHandlers && !special.noBubble && !isWindow(elem***REMOVED******REMOVED*** {\n        bubbleType = special.delegateType || type;\n        if (!rfocusMorph.test(bubbleType + type***REMOVED******REMOVED*** {\n          cur = cur.parentNode;\n        ***REMOVED***\n        for (; cur; cur = cur.parentNode***REMOVED*** {\n          eventPath.push(cur***REMOVED***;\n          tmp = cur;\n        ***REMOVED***\n\n        // Only add window if we got to document (e.g., not plain obj or detached DOM***REMOVED***\n        if (tmp === (elem.ownerDocument || document***REMOVED******REMOVED*** {\n          eventPath.push(tmp.defaultView || tmp.parentWindow || window***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n\n      // Fire handlers on the event path\n      i = 0;\n      while ((cur = eventPath[i++]***REMOVED*** && !event.isPropagationStopped(***REMOVED******REMOVED*** {\n        lastElement = cur;\n        event.type = i > 1 ? bubbleType : special.bindType || type;\n\n        // jQuery handler\n        handle = (dataPriv.get(cur, \"events\"***REMOVED*** || Object.create(null***REMOVED******REMOVED***[event.type] && dataPriv.get(cur, \"handle\"***REMOVED***;\n        if (handle***REMOVED*** {\n          handle.apply(cur, data***REMOVED***;\n        ***REMOVED***\n\n        // Native handler\n        handle = ontype && cur[ontype];\n        if (handle && handle.apply && acceptData(cur***REMOVED******REMOVED*** {\n          event.result = handle.apply(cur, data***REMOVED***;\n          if (event.result === false***REMOVED*** {\n            event.preventDefault(***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n      event.type = type;\n\n      // If nobody prevented the default action, do it now\n      if (!onlyHandlers && !event.isDefaultPrevented(***REMOVED******REMOVED*** {\n        if ((!special._default || special._default.apply(eventPath.pop(***REMOVED***, data***REMOVED*** === false***REMOVED*** && acceptData(elem***REMOVED******REMOVED*** {\n          // Call a native DOM method on the target with the same name as the event.\n          // Don't do default actions on window, that's where global variables be (#6170***REMOVED***\n          if (ontype && isFunction(elem[type]***REMOVED*** && !isWindow(elem***REMOVED******REMOVED*** {\n            // Don't re-trigger an onFOO event when we call its FOO(***REMOVED*** method\n            tmp = elem[ontype];\n            if (tmp***REMOVED*** {\n              elem[ontype] = null;\n            ***REMOVED***\n\n            // Prevent re-triggering of the same event, since we already bubbled it above\n            jQuery.event.triggered = type;\n            if (event.isPropagationStopped(***REMOVED******REMOVED*** {\n              lastElement.addEventListener(type, stopPropagationCallback***REMOVED***;\n            ***REMOVED***\n            elem[type](***REMOVED***;\n            if (event.isPropagationStopped(***REMOVED******REMOVED*** {\n              lastElement.removeEventListener(type, stopPropagationCallback***REMOVED***;\n            ***REMOVED***\n            jQuery.event.triggered = undefined;\n            if (tmp***REMOVED*** {\n              elem[ontype] = tmp;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n      return event.result;\n    ***REMOVED***,\n    // Piggyback on a donor event to simulate a different one\n    // Used only for `focus(in | out***REMOVED***` events\n    simulate: function (type, elem, event***REMOVED*** {\n      var e = jQuery.extend(new jQuery.Event(***REMOVED***, event, {\n        type: type,\n        isSimulated: true\n      ***REMOVED******REMOVED***;\n      jQuery.event.trigger(e, null, elem***REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.fn.extend({\n    trigger: function (type, data***REMOVED*** {\n      return this.each(function (***REMOVED*** {\n        jQuery.event.trigger(type, data, this***REMOVED***;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***,\n    triggerHandler: function (type, data***REMOVED*** {\n      var elem = this[0];\n      if (elem***REMOVED*** {\n        return jQuery.event.trigger(type, data, elem, true***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n\n  // Support: Firefox <=44\n  // Firefox doesn't have focus(in | out***REMOVED*** events\n  // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n  //\n  // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n  // focus(in | out***REMOVED*** events fire after focus & blur events,\n  // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n  // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n  if (!support.focusin***REMOVED*** {\n    jQuery.each({\n      focus: \"focusin\",\n      blur: \"focusout\"\n    ***REMOVED***, function (orig, fix***REMOVED*** {\n      // Attach a single capturing handler on the document while someone wants focusin/focusout\n      var handler = function (event***REMOVED*** {\n        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event***REMOVED******REMOVED***;\n      ***REMOVED***;\n      jQuery.event.special[fix] = {\n        setup: function (***REMOVED*** {\n          // Handle: regular nodes (via `this.ownerDocument`***REMOVED***, window\n          // (via `this.document`***REMOVED*** & document (via `this`***REMOVED***.\n          var doc = this.ownerDocument || this.document || this,\n            attaches = dataPriv.access(doc, fix***REMOVED***;\n          if (!attaches***REMOVED*** {\n            doc.addEventListener(orig, handler, true***REMOVED***;\n          ***REMOVED***\n          dataPriv.access(doc, fix, (attaches || 0***REMOVED*** + 1***REMOVED***;\n        ***REMOVED***,\n        teardown: function (***REMOVED*** {\n          var doc = this.ownerDocument || this.document || this,\n            attaches = dataPriv.access(doc, fix***REMOVED*** - 1;\n          if (!attaches***REMOVED*** {\n            doc.removeEventListener(orig, handler, true***REMOVED***;\n            dataPriv.remove(doc, fix***REMOVED***;\n          ***REMOVED*** else {\n            dataPriv.access(doc, fix, attaches***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***;\n    ***REMOVED******REMOVED***;\n  ***REMOVED***\n  var location = window.location;\n  var nonce = {\n    guid: Date.now(***REMOVED***\n  ***REMOVED***;\n  var rquery = /\\?/;\n\n  // Cross-browser xml parsing\n  jQuery.parseXML = function (data***REMOVED*** {\n    var xml;\n    if (!data || typeof data !== \"string\"***REMOVED*** {\n      return null;\n    ***REMOVED***\n\n    // Support: IE 9 - 11 only\n    // IE throws on parseFromString with invalid input.\n    try {\n      xml = new window.DOMParser(***REMOVED***.parseFromString(data, \"text/xml\"***REMOVED***;\n    ***REMOVED*** catch (e***REMOVED*** {\n      xml = undefined;\n    ***REMOVED***\n    if (!xml || xml.getElementsByTagName(\"parsererror\"***REMOVED***.length***REMOVED*** {\n      jQuery.error(\"Invalid XML: \" + data***REMOVED***;\n    ***REMOVED***\n    return xml;\n  ***REMOVED***;\n  var rbracket = /\\[\\]$/,\n    rCRLF = /\\r?\\n/g,\n    rsubmitterTypes = /^(?:submit|button|image|reset|file***REMOVED***$/i,\n    rsubmittable = /^(?:input|select|textarea|keygen***REMOVED***/i;\n  function buildParams(prefix, obj, traditional, add***REMOVED*** {\n    var name;\n    if (Array.isArray(obj***REMOVED******REMOVED*** {\n      // Serialize array item.\n      jQuery.each(obj, function (i, v***REMOVED*** {\n        if (traditional || rbracket.test(prefix***REMOVED******REMOVED*** {\n          // Treat each array item as a scalar.\n          add(prefix, v***REMOVED***;\n        ***REMOVED*** else {\n          // Item is non-scalar (array or object***REMOVED***, encode its numeric index.\n          buildParams(prefix + \"[\" + (typeof v === \"object\" && v != null ? i : \"\"***REMOVED*** + \"]\", v, traditional, add***REMOVED***;\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED*** else if (!traditional && toType(obj***REMOVED*** === \"object\"***REMOVED*** {\n      // Serialize object item.\n      for (name in obj***REMOVED*** {\n        buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add***REMOVED***;\n      ***REMOVED***\n    ***REMOVED*** else {\n      // Serialize scalar item.\n      add(prefix, obj***REMOVED***;\n    ***REMOVED***\n  ***REMOVED***\n\n  // Serialize an array of form elements or a set of\n  // key/values into a query string\n  jQuery.param = function (a, traditional***REMOVED*** {\n    var prefix,\n      s = [],\n      add = function (key, valueOrFunction***REMOVED*** {\n        // If value is a function, invoke it and use its return value\n        var value = isFunction(valueOrFunction***REMOVED*** ? valueOrFunction(***REMOVED*** : valueOrFunction;\n        s[s.length] = encodeURIComponent(key***REMOVED*** + \"=\" + encodeURIComponent(value == null ? \"\" : value***REMOVED***;\n      ***REMOVED***;\n    if (a == null***REMOVED*** {\n      return \"\";\n    ***REMOVED***\n\n    // If an array was passed in, assume that it is an array of form elements.\n    if (Array.isArray(a***REMOVED*** || a.jquery && !jQuery.isPlainObject(a***REMOVED******REMOVED*** {\n      // Serialize the form elements\n      jQuery.each(a, function (***REMOVED*** {\n        add(this.name, this.value***REMOVED***;\n      ***REMOVED******REMOVED***;\n    ***REMOVED*** else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it***REMOVED***, otherwise encode params recursively.\n      for (prefix in a***REMOVED*** {\n        buildParams(prefix, a[prefix], traditional, add***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***\n\n    // Return the resulting serialization\n    return s.join(\"&\"***REMOVED***;\n  ***REMOVED***;\n  jQuery.fn.extend({\n    serialize: function (***REMOVED*** {\n      return jQuery.param(this.serializeArray(***REMOVED******REMOVED***;\n    ***REMOVED***,\n    serializeArray: function (***REMOVED*** {\n      return this.map(function (***REMOVED*** {\n        // Can add propHook for \"elements\" to filter or add form elements\n        var elements = jQuery.prop(this, \"elements\"***REMOVED***;\n        return elements ? jQuery.makeArray(elements***REMOVED*** : this;\n      ***REMOVED******REMOVED***.filter(function (***REMOVED*** {\n        var type = this.type;\n\n        // Use .is( \":disabled\" ***REMOVED*** so that fieldset[disabled] works\n        return this.name && !jQuery(this***REMOVED***.is(\":disabled\"***REMOVED*** && rsubmittable.test(this.nodeName***REMOVED*** && !rsubmitterTypes.test(type***REMOVED*** && (this.checked || !rcheckableType.test(type***REMOVED******REMOVED***;\n      ***REMOVED******REMOVED***.map(function (_i, elem***REMOVED*** {\n        var val = jQuery(this***REMOVED***.val(***REMOVED***;\n        if (val == null***REMOVED*** {\n          return null;\n        ***REMOVED***\n        if (Array.isArray(val***REMOVED******REMOVED*** {\n          return jQuery.map(val, function (val***REMOVED*** {\n            return {\n              name: elem.name,\n              value: val.replace(rCRLF, \"\\r\\n\"***REMOVED***\n            ***REMOVED***;\n          ***REMOVED******REMOVED***;\n        ***REMOVED***\n        return {\n          name: elem.name,\n          value: val.replace(rCRLF, \"\\r\\n\"***REMOVED***\n        ***REMOVED***;\n      ***REMOVED******REMOVED***.get(***REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  var r20 = /%20/g,\n    rhash = /#.*$/,\n    rantiCache = /([?&]***REMOVED***_=[^&]*/,\n    rheaders = /^(.*?***REMOVED***:[ \\t]*([^\\r\\n]****REMOVED***$/mg,\n    // #7653, #8125, #8152: local protocol detection\n    rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget***REMOVED***:$/,\n    rnoContent = /^(?:GET|HEAD***REMOVED***$/,\n    rprotocol = /^\\/\\//,\n    /* Prefilters\n     * 1***REMOVED*** They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example***REMOVED***\n     * 2***REMOVED*** These are called:\n     *    - BEFORE asking for a transport\n     *    - AFTER param serialization (s.data is a string if s.processData is true***REMOVED***\n     * 3***REMOVED*** key is the dataType\n     * 4***REMOVED*** the catchall symbol \"*\" can be used\n     * 5***REMOVED*** execution will start with transport dataType and THEN continue down to \"*\" if needed\n     */\n    prefilters = {***REMOVED***,\n    /* Transports bindings\n     * 1***REMOVED*** key is the dataType\n     * 2***REMOVED*** the catchall symbol \"*\" can be used\n     * 3***REMOVED*** selection will start with transport dataType and THEN go to \"*\" if needed\n     */\n    transports = {***REMOVED***,\n    // Avoid comment-prolog char sequence (#10098***REMOVED***; must appease lint and evade compression\n    allTypes = \"*/\".concat(\"*\"***REMOVED***,\n    // Anchor tag for parsing the document origin\n    originAnchor = document.createElement(\"a\"***REMOVED***;\n  originAnchor.href = location.href;\n\n  // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n  function addToPrefiltersOrTransports(structure***REMOVED*** {\n    // dataTypeExpression is optional and defaults to \"*\"\n    return function (dataTypeExpression, func***REMOVED*** {\n      if (typeof dataTypeExpression !== \"string\"***REMOVED*** {\n        func = dataTypeExpression;\n        dataTypeExpression = \"*\";\n      ***REMOVED***\n      var dataType,\n        i = 0,\n        dataTypes = dataTypeExpression.toLowerCase(***REMOVED***.match(rnothtmlwhite***REMOVED*** || [];\n      if (isFunction(func***REMOVED******REMOVED*** {\n        // For each dataType in the dataTypeExpression\n        while (dataType = dataTypes[i++]***REMOVED*** {\n          // Prepend if requested\n          if (dataType[0] === \"+\"***REMOVED*** {\n            dataType = dataType.slice(1***REMOVED*** || \"*\";\n            (structure[dataType] = structure[dataType] || []***REMOVED***.unshift(func***REMOVED***;\n\n            // Otherwise append\n          ***REMOVED*** else {\n            (structure[dataType] = structure[dataType] || []***REMOVED***.push(func***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***;\n  ***REMOVED***\n\n  // Base inspection function for prefilters and transports\n  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR***REMOVED*** {\n    var inspected = {***REMOVED***,\n      seekingTransport = structure === transports;\n    function inspect(dataType***REMOVED*** {\n      var selected;\n      inspected[dataType] = true;\n      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory***REMOVED*** {\n        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR***REMOVED***;\n        if (typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]***REMOVED*** {\n          options.dataTypes.unshift(dataTypeOrTransport***REMOVED***;\n          inspect(dataTypeOrTransport***REMOVED***;\n          return false;\n        ***REMOVED*** else if (seekingTransport***REMOVED*** {\n          return !(selected = dataTypeOrTransport***REMOVED***;\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n      return selected;\n    ***REMOVED***\n    return inspect(options.dataTypes[0]***REMOVED*** || !inspected[\"*\"] && inspect(\"*\"***REMOVED***;\n  ***REMOVED***\n\n  // A special extend for ajax options\n  // that takes \"flat\" options (not to be deep extended***REMOVED***\n  // Fixes #9887\n  function ajaxExtend(target, src***REMOVED*** {\n    var key,\n      deep,\n      flatOptions = jQuery.ajaxSettings.flatOptions || {***REMOVED***;\n    for (key in src***REMOVED*** {\n      if (src[key] !== undefined***REMOVED*** {\n        (flatOptions[key] ? target : deep || (deep = {***REMOVED******REMOVED******REMOVED***[key] = src[key];\n      ***REMOVED***\n    ***REMOVED***\n    if (deep***REMOVED*** {\n      jQuery.extend(true, target, deep***REMOVED***;\n    ***REMOVED***\n    return target;\n  ***REMOVED***\n\n  /* Handles responses to an ajax request:\n   * - finds the right dataType (mediates between content-type and expected dataType***REMOVED***\n   * - returns the corresponding response\n   */\n  function ajaxHandleResponses(s, jqXHR, responses***REMOVED*** {\n    var ct,\n      type,\n      finalDataType,\n      firstDataType,\n      contents = s.contents,\n      dataTypes = s.dataTypes;\n\n    // Remove auto dataType and get content-type in the process\n    while (dataTypes[0] === \"*\"***REMOVED*** {\n      dataTypes.shift(***REMOVED***;\n      if (ct === undefined***REMOVED*** {\n        ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\"***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***\n\n    // Check if we're dealing with a known content-type\n    if (ct***REMOVED*** {\n      for (type in contents***REMOVED*** {\n        if (contents[type] && contents[type].test(ct***REMOVED******REMOVED*** {\n          dataTypes.unshift(type***REMOVED***;\n          break;\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n\n    // Check to see if we have a response for the expected dataType\n    if (dataTypes[0] in responses***REMOVED*** {\n      finalDataType = dataTypes[0];\n    ***REMOVED*** else {\n      // Try convertible dataTypes\n      for (type in responses***REMOVED*** {\n        if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]***REMOVED*** {\n          finalDataType = type;\n          break;\n        ***REMOVED***\n        if (!firstDataType***REMOVED*** {\n          firstDataType = type;\n        ***REMOVED***\n      ***REMOVED***\n\n      // Or just use first one\n      finalDataType = finalDataType || firstDataType;\n    ***REMOVED***\n\n    // If we found a dataType\n    // We add the dataType to the list if needed\n    // and return the corresponding response\n    if (finalDataType***REMOVED*** {\n      if (finalDataType !== dataTypes[0]***REMOVED*** {\n        dataTypes.unshift(finalDataType***REMOVED***;\n      ***REMOVED***\n      return responses[finalDataType];\n    ***REMOVED***\n  ***REMOVED***\n\n  /* Chain conversions given the request and the original response\n   * Also sets the responseXXX fields on the jqXHR instance\n   */\n  function ajaxConvert(s, response, jqXHR, isSuccess***REMOVED*** {\n    var conv2,\n      current,\n      conv,\n      tmp,\n      prev,\n      converters = {***REMOVED***,\n      // Work with a copy of dataTypes in case we need to modify it for conversion\n      dataTypes = s.dataTypes.slice(***REMOVED***;\n\n    // Create converters map with lowercased keys\n    if (dataTypes[1]***REMOVED*** {\n      for (conv in s.converters***REMOVED*** {\n        converters[conv.toLowerCase(***REMOVED***] = s.converters[conv];\n      ***REMOVED***\n    ***REMOVED***\n    current = dataTypes.shift(***REMOVED***;\n\n    // Convert to each sequential dataType\n    while (current***REMOVED*** {\n      if (s.responseFields[current]***REMOVED*** {\n        jqXHR[s.responseFields[current]] = response;\n      ***REMOVED***\n\n      // Apply the dataFilter if provided\n      if (!prev && isSuccess && s.dataFilter***REMOVED*** {\n        response = s.dataFilter(response, s.dataType***REMOVED***;\n      ***REMOVED***\n      prev = current;\n      current = dataTypes.shift(***REMOVED***;\n      if (current***REMOVED*** {\n        // There's only work to do if current dataType is non-auto\n        if (current === \"*\"***REMOVED*** {\n          current = prev;\n\n          // Convert response if prev dataType is non-auto and differs from current\n        ***REMOVED*** else if (prev !== \"*\" && prev !== current***REMOVED*** {\n          // Seek a direct converter\n          conv = converters[prev + \" \" + current] || converters[\"* \" + current];\n\n          // If none found, seek a pair\n          if (!conv***REMOVED*** {\n            for (conv2 in converters***REMOVED*** {\n              // If conv2 outputs current\n              tmp = conv2.split(\" \"***REMOVED***;\n              if (tmp[1] === current***REMOVED*** {\n                // If prev can be converted to accepted input\n                conv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];\n                if (conv***REMOVED*** {\n                  // Condense equivalence converters\n                  if (conv === true***REMOVED*** {\n                    conv = converters[conv2];\n\n                    // Otherwise, insert the intermediate dataType\n                  ***REMOVED*** else if (converters[conv2] !== true***REMOVED*** {\n                    current = tmp[0];\n                    dataTypes.unshift(tmp[1]***REMOVED***;\n                  ***REMOVED***\n                  break;\n                ***REMOVED***\n              ***REMOVED***\n            ***REMOVED***\n          ***REMOVED***\n\n          // Apply converter (if not an equivalence***REMOVED***\n          if (conv !== true***REMOVED*** {\n            // Unless errors are allowed to bubble, catch and return them\n            if (conv && s.throws***REMOVED*** {\n              response = conv(response***REMOVED***;\n            ***REMOVED*** else {\n              try {\n                response = conv(response***REMOVED***;\n              ***REMOVED*** catch (e***REMOVED*** {\n                return {\n                  state: \"parsererror\",\n                  error: conv ? e : \"No conversion from \" + prev + \" to \" + current\n                ***REMOVED***;\n              ***REMOVED***\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n    ***REMOVED***\n    return {\n      state: \"success\",\n      data: response\n    ***REMOVED***;\n  ***REMOVED***\n  jQuery.extend({\n    // Counter for holding the number of active queries\n    active: 0,\n    // Last-Modified header cache for next request\n    lastModified: {***REMOVED***,\n    etag: {***REMOVED***,\n    ajaxSettings: {\n      url: location.href,\n      type: \"GET\",\n      isLocal: rlocalProtocol.test(location.protocol***REMOVED***,\n      global: true,\n      processData: true,\n      async: true,\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n      /*\n      timeout: 0,\n      data: null,\n      dataType: null,\n      username: null,\n      password: null,\n      cache: null,\n      throws: false,\n      traditional: false,\n      headers: {***REMOVED***,\n      */\n\n      accepts: {\n        \"*\": allTypes,\n        text: \"text/plain\",\n        html: \"text/html\",\n        xml: \"application/xml, text/xml\",\n        json: \"application/json, text/javascript\"\n      ***REMOVED***,\n      contents: {\n        xml: /\\bxml\\b/,\n        html: /\\bhtml/,\n        json: /\\bjson\\b/\n      ***REMOVED***,\n      responseFields: {\n        xml: \"responseXML\",\n        text: \"responseText\",\n        json: \"responseJSON\"\n      ***REMOVED***,\n      // Data converters\n      // Keys separate source (or catchall \"*\"***REMOVED*** and destination types with a single space\n      converters: {\n        // Convert anything to text\n        \"* text\": String,\n        // Text to html (true = no transformation***REMOVED***\n        \"text html\": true,\n        // Evaluate text as a json expression\n        \"text json\": JSON.parse,\n        // Parse text as xml\n        \"text xml\": jQuery.parseXML\n      ***REMOVED***,\n      // For options that shouldn't be deep extended:\n      // you can add your own custom options here if\n      // and when you create one that shouldn't be\n      // deep extended (see ajaxExtend***REMOVED***\n      flatOptions: {\n        url: true,\n        context: true\n      ***REMOVED***\n    ***REMOVED***,\n    // Creates a full fledged settings object into target\n    // with both ajaxSettings and settings fields.\n    // If target is omitted, writes into ajaxSettings.\n    ajaxSetup: function (target, settings***REMOVED*** {\n      return settings ?\n      // Building a settings object\n      ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings***REMOVED***, settings***REMOVED*** :\n      // Extending ajaxSettings\n      ajaxExtend(jQuery.ajaxSettings, target***REMOVED***;\n    ***REMOVED***,\n    ajaxPrefilter: addToPrefiltersOrTransports(prefilters***REMOVED***,\n    ajaxTransport: addToPrefiltersOrTransports(transports***REMOVED***,\n    // Main method\n    ajax: function (url, options***REMOVED*** {\n      // If url is an object, simulate pre-1.5 signature\n      if (typeof url === \"object\"***REMOVED*** {\n        options = url;\n        url = undefined;\n      ***REMOVED***\n\n      // Force options to be an object\n      options = options || {***REMOVED***;\n      var transport,\n        // URL without anti-cache param\n        cacheURL,\n        // Response headers\n        responseHeadersString,\n        responseHeaders,\n        // timeout handle\n        timeoutTimer,\n        // Url cleanup var\n        urlAnchor,\n        // Request state (becomes false upon send and true upon completion***REMOVED***\n        completed,\n        // To know if global events are to be dispatched\n        fireGlobals,\n        // Loop variable\n        i,\n        // uncached part of the url\n        uncached,\n        // Create the final options object\n        s = jQuery.ajaxSetup({***REMOVED***, options***REMOVED***,\n        // Callbacks context\n        callbackContext = s.context || s,\n        // Context for global events is callbackContext if it is a DOM node or jQuery collection\n        globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery***REMOVED*** ? jQuery(callbackContext***REMOVED*** : jQuery.event,\n        // Deferreds\n        deferred = jQuery.Deferred(***REMOVED***,\n        completeDeferred = jQuery.Callbacks(\"once memory\"***REMOVED***,\n        // Status-dependent callbacks\n        statusCode = s.statusCode || {***REMOVED***,\n        // Headers (they are sent all at once***REMOVED***\n        requestHeaders = {***REMOVED***,\n        requestHeadersNames = {***REMOVED***,\n        // Default abort message\n        strAbort = \"canceled\",\n        // Fake xhr\n        jqXHR = {\n          readyState: 0,\n          // Builds headers hashtable if needed\n          getResponseHeader: function (key***REMOVED*** {\n            var match;\n            if (completed***REMOVED*** {\n              if (!responseHeaders***REMOVED*** {\n                responseHeaders = {***REMOVED***;\n                while (match = rheaders.exec(responseHeadersString***REMOVED******REMOVED*** {\n                  responseHeaders[match[1].toLowerCase(***REMOVED*** + \" \"] = (responseHeaders[match[1].toLowerCase(***REMOVED*** + \" \"] || []***REMOVED***.concat(match[2]***REMOVED***;\n                ***REMOVED***\n              ***REMOVED***\n              match = responseHeaders[key.toLowerCase(***REMOVED*** + \" \"];\n            ***REMOVED***\n            return match == null ? null : match.join(\", \"***REMOVED***;\n          ***REMOVED***,\n          // Raw string\n          getAllResponseHeaders: function (***REMOVED*** {\n            return completed ? responseHeadersString : null;\n          ***REMOVED***,\n          // Caches the header\n          setRequestHeader: function (name, value***REMOVED*** {\n            if (completed == null***REMOVED*** {\n              name = requestHeadersNames[name.toLowerCase(***REMOVED***] = requestHeadersNames[name.toLowerCase(***REMOVED***] || name;\n              requestHeaders[name] = value;\n            ***REMOVED***\n            return this;\n          ***REMOVED***,\n          // Overrides response content-type header\n          overrideMimeType: function (type***REMOVED*** {\n            if (completed == null***REMOVED*** {\n              s.mimeType = type;\n            ***REMOVED***\n            return this;\n          ***REMOVED***,\n          // Status-dependent callbacks\n          statusCode: function (map***REMOVED*** {\n            var code;\n            if (map***REMOVED*** {\n              if (completed***REMOVED*** {\n                // Execute the appropriate callbacks\n                jqXHR.always(map[jqXHR.status]***REMOVED***;\n              ***REMOVED*** else {\n                // Lazy-add the new callbacks in a way that preserves old ones\n                for (code in map***REMOVED*** {\n                  statusCode[code] = [statusCode[code], map[code]];\n                ***REMOVED***\n              ***REMOVED***\n            ***REMOVED***\n            return this;\n          ***REMOVED***,\n          // Cancel the request\n          abort: function (statusText***REMOVED*** {\n            var finalText = statusText || strAbort;\n            if (transport***REMOVED*** {\n              transport.abort(finalText***REMOVED***;\n            ***REMOVED***\n            done(0, finalText***REMOVED***;\n            return this;\n          ***REMOVED***\n        ***REMOVED***;\n\n      // Attach deferreds\n      deferred.promise(jqXHR***REMOVED***;\n\n      // Add protocol if not provided (prefilters might expect it***REMOVED***\n      // Handle falsy url in the settings object (#10093: consistency with old signature***REMOVED***\n      // We also use the url parameter if available\n      s.url = ((url || s.url || location.href***REMOVED*** + \"\"***REMOVED***.replace(rprotocol, location.protocol + \"//\"***REMOVED***;\n\n      // Alias method option to type as per ticket #12004\n      s.type = options.method || options.type || s.method || s.type;\n\n      // Extract dataTypes list\n      s.dataTypes = (s.dataType || \"*\"***REMOVED***.toLowerCase(***REMOVED***.match(rnothtmlwhite***REMOVED*** || [\"\"];\n\n      // A cross-domain request is in order when the origin doesn't match the current origin.\n      if (s.crossDomain == null***REMOVED*** {\n        urlAnchor = document.createElement(\"a\"***REMOVED***;\n\n        // Support: IE <=8 - 11, Edge 12 - 15\n        // IE throws exception on accessing the href property if url is malformed,\n        // e.g. http://example.com:80x/\n        try {\n          urlAnchor.href = s.url;\n\n          // Support: IE <=8 - 11 only\n          // Anchor's host property isn't correctly set when s.url is relative\n          urlAnchor.href = urlAnchor.href;\n          s.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !== urlAnchor.protocol + \"//\" + urlAnchor.host;\n        ***REMOVED*** catch (e***REMOVED*** {\n          // If there is an error parsing the URL, assume it is crossDomain,\n          // it can be rejected by the transport if it is invalid\n          s.crossDomain = true;\n        ***REMOVED***\n      ***REMOVED***\n\n      // Convert data if not already a string\n      if (s.data && s.processData && typeof s.data !== \"string\"***REMOVED*** {\n        s.data = jQuery.param(s.data, s.traditional***REMOVED***;\n      ***REMOVED***\n\n      // Apply prefilters\n      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR***REMOVED***;\n\n      // If request was aborted inside a prefilter, stop there\n      if (completed***REMOVED*** {\n        return jqXHR;\n      ***REMOVED***\n\n      // We can fire global events as of now if asked to\n      // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118***REMOVED***\n      fireGlobals = jQuery.event && s.global;\n\n      // Watch for a new set of requests\n      if (fireGlobals && jQuery.active++ === 0***REMOVED*** {\n        jQuery.event.trigger(\"ajaxStart\"***REMOVED***;\n      ***REMOVED***\n\n      // Uppercase the type\n      s.type = s.type.toUpperCase(***REMOVED***;\n\n      // Determine if request has content\n      s.hasContent = !rnoContent.test(s.type***REMOVED***;\n\n      // Save the URL in case we're toying with the If-Modified-Since\n      // and/or If-None-Match header later on\n      // Remove hash to simplify url manipulation\n      cacheURL = s.url.replace(rhash, \"\"***REMOVED***;\n\n      // More options handling for requests with no content\n      if (!s.hasContent***REMOVED*** {\n        // Remember the hash so we can put it back\n        uncached = s.url.slice(cacheURL.length***REMOVED***;\n\n        // If data is available and should be processed, append data to url\n        if (s.data && (s.processData || typeof s.data === \"string\"***REMOVED******REMOVED*** {\n          cacheURL += (rquery.test(cacheURL***REMOVED*** ? \"&\" : \"?\"***REMOVED*** + s.data;\n\n          // #9682: remove data so that it's not used in an eventual retry\n          delete s.data;\n        ***REMOVED***\n\n        // Add or update anti-cache param if needed\n        if (s.cache === false***REMOVED*** {\n          cacheURL = cacheURL.replace(rantiCache, \"$1\"***REMOVED***;\n          uncached = (rquery.test(cacheURL***REMOVED*** ? \"&\" : \"?\"***REMOVED*** + \"_=\" + nonce.guid++ + uncached;\n        ***REMOVED***\n\n        // Put hash and anti-cache on the URL that will be requested (gh-1732***REMOVED***\n        s.url = cacheURL + uncached;\n\n        // Change '%20' to '+' if this is encoded form body content (gh-2658***REMOVED***\n      ***REMOVED*** else if (s.data && s.processData && (s.contentType || \"\"***REMOVED***.indexOf(\"application/x-www-form-urlencoded\"***REMOVED*** === 0***REMOVED*** {\n        s.data = s.data.replace(r20, \"+\"***REMOVED***;\n      ***REMOVED***\n\n      // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n      if (s.ifModified***REMOVED*** {\n        if (jQuery.lastModified[cacheURL]***REMOVED*** {\n          jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[cacheURL]***REMOVED***;\n        ***REMOVED***\n        if (jQuery.etag[cacheURL]***REMOVED*** {\n          jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[cacheURL]***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n\n      // Set the correct header, if data is being sent\n      if (s.data && s.hasContent && s.contentType !== false || options.contentType***REMOVED*** {\n        jqXHR.setRequestHeader(\"Content-Type\", s.contentType***REMOVED***;\n      ***REMOVED***\n\n      // Set the Accepts header for the server, depending on the dataType\n      jqXHR.setRequestHeader(\"Accept\", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\"***REMOVED*** : s.accepts[\"*\"]***REMOVED***;\n\n      // Check for headers option\n      for (i in s.headers***REMOVED*** {\n        jqXHR.setRequestHeader(i, s.headers[i]***REMOVED***;\n      ***REMOVED***\n\n      // Allow custom headers/mimetypes and early abort\n      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s***REMOVED*** === false || completed***REMOVED******REMOVED*** {\n        // Abort if not done already and return\n        return jqXHR.abort(***REMOVED***;\n      ***REMOVED***\n\n      // Aborting is no longer a cancellation\n      strAbort = \"abort\";\n\n      // Install callbacks on deferreds\n      completeDeferred.add(s.complete***REMOVED***;\n      jqXHR.done(s.success***REMOVED***;\n      jqXHR.fail(s.error***REMOVED***;\n\n      // Get transport\n      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR***REMOVED***;\n\n      // If no transport, we auto-abort\n      if (!transport***REMOVED*** {\n        done(-1, \"No Transport\"***REMOVED***;\n      ***REMOVED*** else {\n        jqXHR.readyState = 1;\n\n        // Send global event\n        if (fireGlobals***REMOVED*** {\n          globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]***REMOVED***;\n        ***REMOVED***\n\n        // If request was aborted inside ajaxSend, stop there\n        if (completed***REMOVED*** {\n          return jqXHR;\n        ***REMOVED***\n\n        // Timeout\n        if (s.async && s.timeout > 0***REMOVED*** {\n          timeoutTimer = window.setTimeout(function (***REMOVED*** {\n            jqXHR.abort(\"timeout\"***REMOVED***;\n          ***REMOVED***, s.timeout***REMOVED***;\n        ***REMOVED***\n        try {\n          completed = false;\n          transport.send(requestHeaders, done***REMOVED***;\n        ***REMOVED*** catch (e***REMOVED*** {\n          // Rethrow post-completion exceptions\n          if (completed***REMOVED*** {\n            throw e;\n          ***REMOVED***\n\n          // Propagate others as results\n          done(-1, e***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n\n      // Callback for when everything is done\n      function done(status, nativeStatusText, responses, headers***REMOVED*** {\n        var isSuccess,\n          success,\n          error,\n          response,\n          modified,\n          statusText = nativeStatusText;\n\n        // Ignore repeat invocations\n        if (completed***REMOVED*** {\n          return;\n        ***REMOVED***\n        completed = true;\n\n        // Clear timeout if it exists\n        if (timeoutTimer***REMOVED*** {\n          window.clearTimeout(timeoutTimer***REMOVED***;\n        ***REMOVED***\n\n        // Dereference transport for early garbage collection\n        // (no matter how long the jqXHR object will be used***REMOVED***\n        transport = undefined;\n\n        // Cache response headers\n        responseHeadersString = headers || \"\";\n\n        // Set readyState\n        jqXHR.readyState = status > 0 ? 4 : 0;\n\n        // Determine if successful\n        isSuccess = status >= 200 && status < 300 || status === 304;\n\n        // Get response data\n        if (responses***REMOVED*** {\n          response = ajaxHandleResponses(s, jqXHR, responses***REMOVED***;\n        ***REMOVED***\n\n        // Use a noop converter for missing script\n        if (!isSuccess && jQuery.inArray(\"script\", s.dataTypes***REMOVED*** > -1***REMOVED*** {\n          s.converters[\"text script\"] = function (***REMOVED*** {***REMOVED***;\n        ***REMOVED***\n\n        // Convert no matter what (that way responseXXX fields are always set***REMOVED***\n        response = ajaxConvert(s, response, jqXHR, isSuccess***REMOVED***;\n\n        // If successful, handle type chaining\n        if (isSuccess***REMOVED*** {\n          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n          if (s.ifModified***REMOVED*** {\n            modified = jqXHR.getResponseHeader(\"Last-Modified\"***REMOVED***;\n            if (modified***REMOVED*** {\n              jQuery.lastModified[cacheURL] = modified;\n            ***REMOVED***\n            modified = jqXHR.getResponseHeader(\"etag\"***REMOVED***;\n            if (modified***REMOVED*** {\n              jQuery.etag[cacheURL] = modified;\n            ***REMOVED***\n          ***REMOVED***\n\n          // if no content\n          if (status === 204 || s.type === \"HEAD\"***REMOVED*** {\n            statusText = \"nocontent\";\n\n            // if not modified\n          ***REMOVED*** else if (status === 304***REMOVED*** {\n            statusText = \"notmodified\";\n\n            // If we have data, let's convert it\n          ***REMOVED*** else {\n            statusText = response.state;\n            success = response.data;\n            error = response.error;\n            isSuccess = !error;\n          ***REMOVED***\n        ***REMOVED*** else {\n          // Extract error from statusText and normalize for non-aborts\n          error = statusText;\n          if (status || !statusText***REMOVED*** {\n            statusText = \"error\";\n            if (status < 0***REMOVED*** {\n              status = 0;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***\n\n        // Set data for the fake xhr object\n        jqXHR.status = status;\n        jqXHR.statusText = (nativeStatusText || statusText***REMOVED*** + \"\";\n\n        // Success/Error\n        if (isSuccess***REMOVED*** {\n          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]***REMOVED***;\n        ***REMOVED*** else {\n          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]***REMOVED***;\n        ***REMOVED***\n\n        // Status-dependent callbacks\n        jqXHR.statusCode(statusCode***REMOVED***;\n        statusCode = undefined;\n        if (fireGlobals***REMOVED*** {\n          globalEventContext.trigger(isSuccess ? \"ajaxSuccess\" : \"ajaxError\", [jqXHR, s, isSuccess ? success : error]***REMOVED***;\n        ***REMOVED***\n\n        // Complete\n        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]***REMOVED***;\n        if (fireGlobals***REMOVED*** {\n          globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]***REMOVED***;\n\n          // Handle the global AJAX counter\n          if (! --jQuery.active***REMOVED*** {\n            jQuery.event.trigger(\"ajaxStop\"***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***\n      return jqXHR;\n    ***REMOVED***,\n    getJSON: function (url, data, callback***REMOVED*** {\n      return jQuery.get(url, data, callback, \"json\"***REMOVED***;\n    ***REMOVED***,\n    getScript: function (url, callback***REMOVED*** {\n      return jQuery.get(url, undefined, callback, \"script\"***REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.each([\"get\", \"post\"], function (_i, method***REMOVED*** {\n    jQuery[method] = function (url, data, callback, type***REMOVED*** {\n      // Shift arguments if data argument was omitted\n      if (isFunction(data***REMOVED******REMOVED*** {\n        type = type || callback;\n        callback = data;\n        data = undefined;\n      ***REMOVED***\n\n      // The url can be an options object (which then must have .url***REMOVED***\n      return jQuery.ajax(jQuery.extend({\n        url: url,\n        type: method,\n        dataType: type,\n        data: data,\n        success: callback\n      ***REMOVED***, jQuery.isPlainObject(url***REMOVED*** && url***REMOVED******REMOVED***;\n    ***REMOVED***;\n  ***REMOVED******REMOVED***;\n  jQuery.ajaxPrefilter(function (s***REMOVED*** {\n    var i;\n    for (i in s.headers***REMOVED*** {\n      if (i.toLowerCase(***REMOVED*** === \"content-type\"***REMOVED*** {\n        s.contentType = s.headers[i] || \"\";\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery._evalUrl = function (url, options, doc***REMOVED*** {\n    return jQuery.ajax({\n      url: url,\n      // Make this explicit, since user can override this through ajaxSetup (#11264***REMOVED***\n      type: \"GET\",\n      dataType: \"script\",\n      cache: true,\n      async: false,\n      global: false,\n      // Only evaluate the response if it is successful (gh-4126***REMOVED***\n      // dataFilter is not invoked for failure responses, so using it instead\n      // of the default converter is kludgy but it works.\n      converters: {\n        \"text script\": function (***REMOVED*** {***REMOVED***\n      ***REMOVED***,\n      dataFilter: function (response***REMOVED*** {\n        jQuery.globalEval(response, options, doc***REMOVED***;\n      ***REMOVED***\n    ***REMOVED******REMOVED***;\n  ***REMOVED***;\n  jQuery.fn.extend({\n    wrapAll: function (html***REMOVED*** {\n      var wrap;\n      if (this[0]***REMOVED*** {\n        if (isFunction(html***REMOVED******REMOVED*** {\n          html = html.call(this[0]***REMOVED***;\n        ***REMOVED***\n\n        // The elements to wrap the target around\n        wrap = jQuery(html, this[0].ownerDocument***REMOVED***.eq(0***REMOVED***.clone(true***REMOVED***;\n        if (this[0].parentNode***REMOVED*** {\n          wrap.insertBefore(this[0]***REMOVED***;\n        ***REMOVED***\n        wrap.map(function (***REMOVED*** {\n          var elem = this;\n          while (elem.firstElementChild***REMOVED*** {\n            elem = elem.firstElementChild;\n          ***REMOVED***\n          return elem;\n        ***REMOVED******REMOVED***.append(this***REMOVED***;\n      ***REMOVED***\n      return this;\n    ***REMOVED***,\n    wrapInner: function (html***REMOVED*** {\n      if (isFunction(html***REMOVED******REMOVED*** {\n        return this.each(function (i***REMOVED*** {\n          jQuery(this***REMOVED***.wrapInner(html.call(this, i***REMOVED******REMOVED***;\n        ***REMOVED******REMOVED***;\n      ***REMOVED***\n      return this.each(function (***REMOVED*** {\n        var self = jQuery(this***REMOVED***,\n          contents = self.contents(***REMOVED***;\n        if (contents.length***REMOVED*** {\n          contents.wrapAll(html***REMOVED***;\n        ***REMOVED*** else {\n          self.append(html***REMOVED***;\n        ***REMOVED***\n      ***REMOVED******REMOVED***;\n    ***REMOVED***,\n    wrap: function (html***REMOVED*** {\n      var htmlIsFunction = isFunction(html***REMOVED***;\n      return this.each(function (i***REMOVED*** {\n        jQuery(this***REMOVED***.wrapAll(htmlIsFunction ? html.call(this, i***REMOVED*** : html***REMOVED***;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***,\n    unwrap: function (selector***REMOVED*** {\n      this.parent(selector***REMOVED***.not(\"body\"***REMOVED***.each(function (***REMOVED*** {\n        jQuery(this***REMOVED***.replaceWith(this.childNodes***REMOVED***;\n      ***REMOVED******REMOVED***;\n      return this;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.expr.pseudos.hidden = function (elem***REMOVED*** {\n    return !jQuery.expr.pseudos.visible(elem***REMOVED***;\n  ***REMOVED***;\n  jQuery.expr.pseudos.visible = function (elem***REMOVED*** {\n    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects(***REMOVED***.length***REMOVED***;\n  ***REMOVED***;\n  jQuery.ajaxSettings.xhr = function (***REMOVED*** {\n    try {\n      return new window.XMLHttpRequest(***REMOVED***;\n    ***REMOVED*** catch (e***REMOVED*** {***REMOVED***\n  ***REMOVED***;\n  var xhrSuccessStatus = {\n      // File protocol always yields status code 0, assume 200\n      0: 200,\n      // Support: IE <=9 only\n      // #1450: sometimes IE returns 1223 when it should be 204\n      1223: 204\n    ***REMOVED***,\n    xhrSupported = jQuery.ajaxSettings.xhr(***REMOVED***;\n  support.cors = !!xhrSupported && \"withCredentials\" in xhrSupported;\n  support.ajax = xhrSupported = !!xhrSupported;\n  jQuery.ajaxTransport(function (options***REMOVED*** {\n    var callback, errorCallback;\n\n    // Cross domain only allowed if supported through XMLHttpRequest\n    if (support.cors || xhrSupported && !options.crossDomain***REMOVED*** {\n      return {\n        send: function (headers, complete***REMOVED*** {\n          var i,\n            xhr = options.xhr(***REMOVED***;\n          xhr.open(options.type, options.url, options.async, options.username, options.password***REMOVED***;\n\n          // Apply custom fields if provided\n          if (options.xhrFields***REMOVED*** {\n            for (i in options.xhrFields***REMOVED*** {\n              xhr[i] = options.xhrFields[i];\n            ***REMOVED***\n          ***REMOVED***\n\n          // Override mime type if needed\n          if (options.mimeType && xhr.overrideMimeType***REMOVED*** {\n            xhr.overrideMimeType(options.mimeType***REMOVED***;\n          ***REMOVED***\n\n          // X-Requested-With header\n          // For cross-domain requests, seeing as conditions for a preflight are\n          // akin to a jigsaw puzzle, we simply never set it to be sure.\n          // (it can always be set on a per-request basis or even using ajaxSetup***REMOVED***\n          // For same-domain requests, won't change header if already provided.\n          if (!options.crossDomain && !headers[\"X-Requested-With\"]***REMOVED*** {\n            headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n          ***REMOVED***\n\n          // Set headers\n          for (i in headers***REMOVED*** {\n            xhr.setRequestHeader(i, headers[i]***REMOVED***;\n          ***REMOVED***\n\n          // Callback\n          callback = function (type***REMOVED*** {\n            return function (***REMOVED*** {\n              if (callback***REMOVED*** {\n                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;\n                if (type === \"abort\"***REMOVED*** {\n                  xhr.abort(***REMOVED***;\n                ***REMOVED*** else if (type === \"error\"***REMOVED*** {\n                  // Support: IE <=9 only\n                  // On a manual native abort, IE9 throws\n                  // errors on any property access that is not readyState\n                  if (typeof xhr.status !== \"number\"***REMOVED*** {\n                    complete(0, \"error\"***REMOVED***;\n                  ***REMOVED*** else {\n                    complete(\n                    // File: protocol always yields status 0; see #8605, #14207\n                    xhr.status, xhr.statusText***REMOVED***;\n                  ***REMOVED***\n                ***REMOVED*** else {\n                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText,\n                  // Support: IE <=9 only\n                  // IE9 has no XHR2 but throws on binary (trac-11426***REMOVED***\n                  // For XHR2 non-text, let the caller handle it (gh-2498***REMOVED***\n                  (xhr.responseType || \"text\"***REMOVED*** !== \"text\" || typeof xhr.responseText !== \"string\" ? {\n                    binary: xhr.response\n                  ***REMOVED*** : {\n                    text: xhr.responseText\n                  ***REMOVED***, xhr.getAllResponseHeaders(***REMOVED******REMOVED***;\n                ***REMOVED***\n              ***REMOVED***\n            ***REMOVED***;\n          ***REMOVED***;\n\n          // Listen to events\n          xhr.onload = callback(***REMOVED***;\n          errorCallback = xhr.onerror = xhr.ontimeout = callback(\"error\"***REMOVED***;\n\n          // Support: IE 9 only\n          // Use onreadystatechange to replace onabort\n          // to handle uncaught aborts\n          if (xhr.onabort !== undefined***REMOVED*** {\n            xhr.onabort = errorCallback;\n          ***REMOVED*** else {\n            xhr.onreadystatechange = function (***REMOVED*** {\n              // Check readyState before timeout as it changes\n              if (xhr.readyState === 4***REMOVED*** {\n                // Allow onerror to be called first,\n                // but that will not handle a native abort\n                // Also, save errorCallback to a variable\n                // as xhr.onerror cannot be accessed\n                window.setTimeout(function (***REMOVED*** {\n                  if (callback***REMOVED*** {\n                    errorCallback(***REMOVED***;\n                  ***REMOVED***\n                ***REMOVED******REMOVED***;\n              ***REMOVED***\n            ***REMOVED***;\n          ***REMOVED***\n\n          // Create the abort callback\n          callback = callback(\"abort\"***REMOVED***;\n          try {\n            // Do send the request (this may raise an exception***REMOVED***\n            xhr.send(options.hasContent && options.data || null***REMOVED***;\n          ***REMOVED*** catch (e***REMOVED*** {\n            // #14683: Only rethrow if this hasn't been notified as an error yet\n            if (callback***REMOVED*** {\n              throw e;\n            ***REMOVED***\n          ***REMOVED***\n        ***REMOVED***,\n        abort: function (***REMOVED*** {\n          if (callback***REMOVED*** {\n            callback(***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n\n  // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432***REMOVED***\n  jQuery.ajaxPrefilter(function (s***REMOVED*** {\n    if (s.crossDomain***REMOVED*** {\n      s.contents.script = false;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n\n  // Install script dataType\n  jQuery.ajaxSetup({\n    accepts: {\n      script: \"text/javascript, application/javascript, \" + \"application/ecmascript, application/x-ecmascript\"\n    ***REMOVED***,\n    contents: {\n      script: /\\b(?:java|ecma***REMOVED***script\\b/\n    ***REMOVED***,\n    converters: {\n      \"text script\": function (text***REMOVED*** {\n        jQuery.globalEval(text***REMOVED***;\n        return text;\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n\n  // Handle cache's special case and crossDomain\n  jQuery.ajaxPrefilter(\"script\", function (s***REMOVED*** {\n    if (s.cache === undefined***REMOVED*** {\n      s.cache = false;\n    ***REMOVED***\n    if (s.crossDomain***REMOVED*** {\n      s.type = \"GET\";\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n\n  // Bind script tag hack transport\n  jQuery.ajaxTransport(\"script\", function (s***REMOVED*** {\n    // This transport only deals with cross domain or forced-by-attrs requests\n    if (s.crossDomain || s.scriptAttrs***REMOVED*** {\n      var script, callback;\n      return {\n        send: function (_, complete***REMOVED*** {\n          script = jQuery(\"<script>\"***REMOVED***.attr(s.scriptAttrs || {***REMOVED******REMOVED***.prop({\n            charset: s.scriptCharset,\n            src: s.url\n          ***REMOVED******REMOVED***.on(\"load error\", callback = function (evt***REMOVED*** {\n            script.remove(***REMOVED***;\n            callback = null;\n            if (evt***REMOVED*** {\n              complete(evt.type === \"error\" ? 404 : 200, evt.type***REMOVED***;\n            ***REMOVED***\n          ***REMOVED******REMOVED***;\n\n          // Use native DOM manipulation to avoid our domManip AJAX trickery\n          document.head.appendChild(script[0]***REMOVED***;\n        ***REMOVED***,\n        abort: function (***REMOVED*** {\n          if (callback***REMOVED*** {\n            callback(***REMOVED***;\n          ***REMOVED***\n        ***REMOVED***\n      ***REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  var oldCallbacks = [],\n    rjsonp = /(=***REMOVED***\\?(?=&|$***REMOVED***|\\?\\?/;\n\n  // Default jsonp settings\n  jQuery.ajaxSetup({\n    jsonp: \"callback\",\n    jsonpCallback: function (***REMOVED*** {\n      var callback = oldCallbacks.pop(***REMOVED*** || jQuery.expando + \"_\" + nonce.guid++;\n      this[callback] = true;\n      return callback;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n\n  // Detect, normalize options and install callbacks for jsonp requests\n  jQuery.ajaxPrefilter(\"json jsonp\", function (s, originalSettings, jqXHR***REMOVED*** {\n    var callbackName,\n      overwritten,\n      responseContainer,\n      jsonProp = s.jsonp !== false && (rjsonp.test(s.url***REMOVED*** ? \"url\" : typeof s.data === \"string\" && (s.contentType || \"\"***REMOVED***.indexOf(\"application/x-www-form-urlencoded\"***REMOVED*** === 0 && rjsonp.test(s.data***REMOVED*** && \"data\"***REMOVED***;\n\n    // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n    if (jsonProp || s.dataTypes[0] === \"jsonp\"***REMOVED*** {\n      // Get callback name, remembering preexisting value associated with it\n      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback***REMOVED*** ? s.jsonpCallback(***REMOVED*** : s.jsonpCallback;\n\n      // Insert callback into url or form data\n      if (jsonProp***REMOVED*** {\n        s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName***REMOVED***;\n      ***REMOVED*** else if (s.jsonp !== false***REMOVED*** {\n        s.url += (rquery.test(s.url***REMOVED*** ? \"&\" : \"?\"***REMOVED*** + s.jsonp + \"=\" + callbackName;\n      ***REMOVED***\n\n      // Use data converter to retrieve json after script execution\n      s.converters[\"script json\"] = function (***REMOVED*** {\n        if (!responseContainer***REMOVED*** {\n          jQuery.error(callbackName + \" was not called\"***REMOVED***;\n        ***REMOVED***\n        return responseContainer[0];\n      ***REMOVED***;\n\n      // Force json dataType\n      s.dataTypes[0] = \"json\";\n\n      // Install callback\n      overwritten = window[callbackName];\n      window[callbackName] = function (***REMOVED*** {\n        responseContainer = arguments;\n      ***REMOVED***;\n\n      // Clean-up function (fires after converters***REMOVED***\n      jqXHR.always(function (***REMOVED*** {\n        // If previous value didn't exist - remove it\n        if (overwritten === undefined***REMOVED*** {\n          jQuery(window***REMOVED***.removeProp(callbackName***REMOVED***;\n\n          // Otherwise restore preexisting value\n        ***REMOVED*** else {\n          window[callbackName] = overwritten;\n        ***REMOVED***\n\n        // Save back as free\n        if (s[callbackName]***REMOVED*** {\n          // Make sure that re-using the options doesn't screw things around\n          s.jsonpCallback = originalSettings.jsonpCallback;\n\n          // Save the callback name for future use\n          oldCallbacks.push(callbackName***REMOVED***;\n        ***REMOVED***\n\n        // Call if it was a function and we have a response\n        if (responseContainer && isFunction(overwritten***REMOVED******REMOVED*** {\n          overwritten(responseContainer[0]***REMOVED***;\n        ***REMOVED***\n        responseContainer = overwritten = undefined;\n      ***REMOVED******REMOVED***;\n\n      // Delegate to script\n      return \"script\";\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n\n  // Support: Safari 8 only\n  // In Safari 8 documents created via document.implementation.createHTMLDocument\n  // collapse sibling forms: the second one becomes a child of the first one.\n  // Because of that, this security measure has to be disabled in Safari 8.\n  // https://bugs.webkit.org/show_bug.cgi?id=137337\n  support.createHTMLDocument = function (***REMOVED*** {\n    var body = document.implementation.createHTMLDocument(\"\"***REMOVED***.body;\n    body.innerHTML = \"<form></form><form></form>\";\n    return body.childNodes.length === 2;\n  ***REMOVED***(***REMOVED***;\n\n  // Argument \"data\" should be string of html\n  // context (optional***REMOVED***: If specified, the fragment will be created in this context,\n  // defaults to document\n  // keepScripts (optional***REMOVED***: If true, will include scripts passed in the html string\n  jQuery.parseHTML = function (data, context, keepScripts***REMOVED*** {\n    if (typeof data !== \"string\"***REMOVED*** {\n      return [];\n    ***REMOVED***\n    if (typeof context === \"boolean\"***REMOVED*** {\n      keepScripts = context;\n      context = false;\n    ***REMOVED***\n    var base, parsed, scripts;\n    if (!context***REMOVED*** {\n      // Stop scripts or inline event handlers from being executed immediately\n      // by using document.implementation\n      if (support.createHTMLDocument***REMOVED*** {\n        context = document.implementation.createHTMLDocument(\"\"***REMOVED***;\n\n        // Set the base href for the created document\n        // so any parsed elements with URLs\n        // are based on the document's URL (gh-2965***REMOVED***\n        base = context.createElement(\"base\"***REMOVED***;\n        base.href = document.location.href;\n        context.head.appendChild(base***REMOVED***;\n      ***REMOVED*** else {\n        context = document;\n      ***REMOVED***\n    ***REMOVED***\n    parsed = rsingleTag.exec(data***REMOVED***;\n    scripts = !keepScripts && [];\n\n    // Single tag\n    if (parsed***REMOVED*** {\n      return [context.createElement(parsed[1]***REMOVED***];\n    ***REMOVED***\n    parsed = buildFragment([data], context, scripts***REMOVED***;\n    if (scripts && scripts.length***REMOVED*** {\n      jQuery(scripts***REMOVED***.remove(***REMOVED***;\n    ***REMOVED***\n    return jQuery.merge([], parsed.childNodes***REMOVED***;\n  ***REMOVED***;\n\n  /**\n   * Load a url into a page\n   */\n  jQuery.fn.load = function (url, params, callback***REMOVED*** {\n    var selector,\n      type,\n      response,\n      self = this,\n      off = url.indexOf(\" \"***REMOVED***;\n    if (off > -1***REMOVED*** {\n      selector = stripAndCollapse(url.slice(off***REMOVED******REMOVED***;\n      url = url.slice(0, off***REMOVED***;\n    ***REMOVED***\n\n    // If it's a function\n    if (isFunction(params***REMOVED******REMOVED*** {\n      // We assume that it's the callback\n      callback = params;\n      params = undefined;\n\n      // Otherwise, build a param string\n    ***REMOVED*** else if (params && typeof params === \"object\"***REMOVED*** {\n      type = \"POST\";\n    ***REMOVED***\n\n    // If we have elements to modify, make the request\n    if (self.length > 0***REMOVED*** {\n      jQuery.ajax({\n        url: url,\n        // If \"type\" variable is undefined, then \"GET\" method will be used.\n        // Make value of this field explicit since\n        // user can override it through ajaxSetup method\n        type: type || \"GET\",\n        dataType: \"html\",\n        data: params\n      ***REMOVED******REMOVED***.done(function (responseText***REMOVED*** {\n        // Save response for use in complete callback\n        response = arguments;\n        self.html(selector ?\n        // If a selector was specified, locate the right elements in a dummy div\n        // Exclude scripts to avoid IE 'Permission Denied' errors\n        jQuery(\"<div>\"***REMOVED***.append(jQuery.parseHTML(responseText***REMOVED******REMOVED***.find(selector***REMOVED*** :\n        // Otherwise use the full result\n        responseText***REMOVED***;\n\n        // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n        // but they are ignored because response was set above.\n        // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n      ***REMOVED******REMOVED***.always(callback && function (jqXHR, status***REMOVED*** {\n        self.each(function (***REMOVED*** {\n          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]***REMOVED***;\n        ***REMOVED******REMOVED***;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n    return this;\n  ***REMOVED***;\n  jQuery.expr.pseudos.animated = function (elem***REMOVED*** {\n    return jQuery.grep(jQuery.timers, function (fn***REMOVED*** {\n      return elem === fn.elem;\n    ***REMOVED******REMOVED***.length;\n  ***REMOVED***;\n  jQuery.offset = {\n    setOffset: function (elem, options, i***REMOVED*** {\n      var curPosition,\n        curLeft,\n        curCSSTop,\n        curTop,\n        curOffset,\n        curCSSLeft,\n        calculatePosition,\n        position = jQuery.css(elem, \"position\"***REMOVED***,\n        curElem = jQuery(elem***REMOVED***,\n        props = {***REMOVED***;\n\n      // Set position first, in-case top/left are set even on static elem\n      if (position === \"static\"***REMOVED*** {\n        elem.style.position = \"relative\";\n      ***REMOVED***\n      curOffset = curElem.offset(***REMOVED***;\n      curCSSTop = jQuery.css(elem, \"top\"***REMOVED***;\n      curCSSLeft = jQuery.css(elem, \"left\"***REMOVED***;\n      calculatePosition = (position === \"absolute\" || position === \"fixed\"***REMOVED*** && (curCSSTop + curCSSLeft***REMOVED***.indexOf(\"auto\"***REMOVED*** > -1;\n\n      // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n      if (calculatePosition***REMOVED*** {\n        curPosition = curElem.position(***REMOVED***;\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      ***REMOVED*** else {\n        curTop = parseFloat(curCSSTop***REMOVED*** || 0;\n        curLeft = parseFloat(curCSSLeft***REMOVED*** || 0;\n      ***REMOVED***\n      if (isFunction(options***REMOVED******REMOVED*** {\n        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848***REMOVED***\n        options = options.call(elem, i, jQuery.extend({***REMOVED***, curOffset***REMOVED******REMOVED***;\n      ***REMOVED***\n      if (options.top != null***REMOVED*** {\n        props.top = options.top - curOffset.top + curTop;\n      ***REMOVED***\n      if (options.left != null***REMOVED*** {\n        props.left = options.left - curOffset.left + curLeft;\n      ***REMOVED***\n      if (\"using\" in options***REMOVED*** {\n        options.using.call(elem, props***REMOVED***;\n      ***REMOVED*** else {\n        if (typeof props.top === \"number\"***REMOVED*** {\n          props.top += \"px\";\n        ***REMOVED***\n        if (typeof props.left === \"number\"***REMOVED*** {\n          props.left += \"px\";\n        ***REMOVED***\n        curElem.css(props***REMOVED***;\n      ***REMOVED***\n    ***REMOVED***\n  ***REMOVED***;\n  jQuery.fn.extend({\n    // offset(***REMOVED*** relates an element's border box to the document origin\n    offset: function (options***REMOVED*** {\n      // Preserve chaining for setter\n      if (arguments.length***REMOVED*** {\n        return options === undefined ? this : this.each(function (i***REMOVED*** {\n          jQuery.offset.setOffset(this, options, i***REMOVED***;\n        ***REMOVED******REMOVED***;\n      ***REMOVED***\n      var rect,\n        win,\n        elem = this[0];\n      if (!elem***REMOVED*** {\n        return;\n      ***REMOVED***\n\n      // Return zeros for disconnected and hidden (display: none***REMOVED*** elements (gh-2310***REMOVED***\n      // Support: IE <=11 only\n      // Running getBoundingClientRect on a\n      // disconnected node in IE throws an error\n      if (!elem.getClientRects(***REMOVED***.length***REMOVED*** {\n        return {\n          top: 0,\n          left: 0\n        ***REMOVED***;\n      ***REMOVED***\n\n      // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n      rect = elem.getBoundingClientRect(***REMOVED***;\n      win = elem.ownerDocument.defaultView;\n      return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n      ***REMOVED***;\n    ***REMOVED***,\n    // position(***REMOVED*** relates an element's margin box to its offset parent's padding box\n    // This corresponds to the behavior of CSS absolute positioning\n    position: function (***REMOVED*** {\n      if (!this[0]***REMOVED*** {\n        return;\n      ***REMOVED***\n      var offsetParent,\n        offset,\n        doc,\n        elem = this[0],\n        parentOffset = {\n          top: 0,\n          left: 0\n        ***REMOVED***;\n\n      // position:fixed elements are offset from the viewport, which itself always has zero offset\n      if (jQuery.css(elem, \"position\"***REMOVED*** === \"fixed\"***REMOVED*** {\n        // Assume position:fixed implies availability of getBoundingClientRect\n        offset = elem.getBoundingClientRect(***REMOVED***;\n      ***REMOVED*** else {\n        offset = this.offset(***REMOVED***;\n\n        // Account for the *real* offset parent, which can be the document or its root element\n        // when a statically positioned element is identified\n        doc = elem.ownerDocument;\n        offsetParent = elem.offsetParent || doc.documentElement;\n        while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement***REMOVED*** && jQuery.css(offsetParent, \"position\"***REMOVED*** === \"static\"***REMOVED*** {\n          offsetParent = offsetParent.parentNode;\n        ***REMOVED***\n        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1***REMOVED*** {\n          // Incorporate borders into its offset, since they are outside its content origin\n          parentOffset = jQuery(offsetParent***REMOVED***.offset(***REMOVED***;\n          parentOffset.top += jQuery.css(offsetParent, \"borderTopWidth\", true***REMOVED***;\n          parentOffset.left += jQuery.css(offsetParent, \"borderLeftWidth\", true***REMOVED***;\n        ***REMOVED***\n      ***REMOVED***\n\n      // Subtract parent offsets and element margins\n      return {\n        top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true***REMOVED***,\n        left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true***REMOVED***\n      ***REMOVED***;\n    ***REMOVED***,\n    // This method will return documentElement in the following cases:\n    // 1***REMOVED*** For the element inside the iframe without offsetParent, this method will return\n    //    documentElement of the parent window\n    // 2***REMOVED*** For the hidden or detached element\n    // 3***REMOVED*** For body or html element, i.e. in case of the html node - it will return itself\n    //\n    // but those exceptions were never presented as a real life use-cases\n    // and might be considered as more preferable results.\n    //\n    // This logic, however, is not guaranteed and can change at any point in the future\n    offsetParent: function (***REMOVED*** {\n      return this.map(function (***REMOVED*** {\n        var offsetParent = this.offsetParent;\n        while (offsetParent && jQuery.css(offsetParent, \"position\"***REMOVED*** === \"static\"***REMOVED*** {\n          offsetParent = offsetParent.offsetParent;\n        ***REMOVED***\n        return offsetParent || documentElement;\n      ***REMOVED******REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n\n  // Create scrollLeft and scrollTop methods\n  jQuery.each({\n    scrollLeft: \"pageXOffset\",\n    scrollTop: \"pageYOffset\"\n  ***REMOVED***, function (method, prop***REMOVED*** {\n    var top = \"pageYOffset\" === prop;\n    jQuery.fn[method] = function (val***REMOVED*** {\n      return access(this, function (elem, method, val***REMOVED*** {\n        // Coalesce documents and windows\n        var win;\n        if (isWindow(elem***REMOVED******REMOVED*** {\n          win = elem;\n        ***REMOVED*** else if (elem.nodeType === 9***REMOVED*** {\n          win = elem.defaultView;\n        ***REMOVED***\n        if (val === undefined***REMOVED*** {\n          return win ? win[prop] : elem[method];\n        ***REMOVED***\n        if (win***REMOVED*** {\n          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset***REMOVED***;\n        ***REMOVED*** else {\n          elem[method] = val;\n        ***REMOVED***\n      ***REMOVED***, method, val, arguments.length***REMOVED***;\n    ***REMOVED***;\n  ***REMOVED******REMOVED***;\n\n  // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n  // Add the top/left cssHooks using jQuery.fn.position\n  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n  // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n  // getComputedStyle returns percent when specified for top/left/bottom/right;\n  // rather than make the css module depend on the offset module, just check for it here\n  jQuery.each([\"top\", \"left\"], function (_i, prop***REMOVED*** {\n    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed***REMOVED*** {\n      if (computed***REMOVED*** {\n        computed = curCSS(elem, prop***REMOVED***;\n\n        // If curCSS returns percentage, fallback to offset\n        return rnumnonpx.test(computed***REMOVED*** ? jQuery(elem***REMOVED***.position(***REMOVED***[prop] + \"px\" : computed;\n      ***REMOVED***\n    ***REMOVED******REMOVED***;\n  ***REMOVED******REMOVED***;\n\n  // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n  jQuery.each({\n    Height: \"height\",\n    Width: \"width\"\n  ***REMOVED***, function (name, type***REMOVED*** {\n    jQuery.each({\n      padding: \"inner\" + name,\n      content: type,\n      \"\": \"outer\" + name\n    ***REMOVED***, function (defaultExtra, funcName***REMOVED*** {\n      // Margin is only for outerHeight, outerWidth\n      jQuery.fn[funcName] = function (margin, value***REMOVED*** {\n        var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"***REMOVED***,\n          extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\"***REMOVED***;\n        return access(this, function (elem, type, value***REMOVED*** {\n          var doc;\n          if (isWindow(elem***REMOVED******REMOVED*** {\n            // $( window ***REMOVED***.outerWidth/Height return w/h including scrollbars (gh-1729***REMOVED***\n            return funcName.indexOf(\"outer\"***REMOVED*** === 0 ? elem[\"inner\" + name] : elem.document.documentElement[\"client\" + name];\n          ***REMOVED***\n\n          // Get document width or height\n          if (elem.nodeType === 9***REMOVED*** {\n            doc = elem.documentElement;\n\n            // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n            // whichever is greatest\n            return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]***REMOVED***;\n          ***REMOVED***\n          return value === undefined ?\n          // Get width or height on the element, requesting but not forcing parseFloat\n          jQuery.css(elem, type, extra***REMOVED*** :\n          // Set width or height on the element\n          jQuery.style(elem, type, value, extra***REMOVED***;\n        ***REMOVED***, type, chainable ? margin : undefined, chainable***REMOVED***;\n      ***REMOVED***;\n    ***REMOVED******REMOVED***;\n  ***REMOVED******REMOVED***;\n  jQuery.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function (_i, type***REMOVED*** {\n    jQuery.fn[type] = function (fn***REMOVED*** {\n      return this.on(type, fn***REMOVED***;\n    ***REMOVED***;\n  ***REMOVED******REMOVED***;\n  jQuery.fn.extend({\n    bind: function (types, data, fn***REMOVED*** {\n      return this.on(types, null, data, fn***REMOVED***;\n    ***REMOVED***,\n    unbind: function (types, fn***REMOVED*** {\n      return this.off(types, null, fn***REMOVED***;\n    ***REMOVED***,\n    delegate: function (selector, types, data, fn***REMOVED*** {\n      return this.on(types, selector, data, fn***REMOVED***;\n    ***REMOVED***,\n    undelegate: function (selector, types, fn***REMOVED*** {\n      // ( namespace ***REMOVED*** or ( selector, types [, fn] ***REMOVED***\n      return arguments.length === 1 ? this.off(selector, \"**\"***REMOVED*** : this.off(types, selector || \"**\", fn***REMOVED***;\n    ***REMOVED***,\n    hover: function (fnOver, fnOut***REMOVED*** {\n      return this.mouseenter(fnOver***REMOVED***.mouseleave(fnOut || fnOver***REMOVED***;\n    ***REMOVED***\n  ***REMOVED******REMOVED***;\n  jQuery.each((\"blur focus focusin focusout resize scroll click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup contextmenu\"***REMOVED***.split(\" \"***REMOVED***, function (_i, name***REMOVED*** {\n    // Handle event binding\n    jQuery.fn[name] = function (data, fn***REMOVED*** {\n      return arguments.length > 0 ? this.on(name, null, data, fn***REMOVED*** : this.trigger(name***REMOVED***;\n    ***REMOVED***;\n  ***REMOVED******REMOVED***;\n\n  // Support: Android <=4.0 only\n  // Make sure we trim BOM and NBSP\n  var rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n  // Bind a function to a context, optionally partially applying any\n  // arguments.\n  // jQuery.proxy is deprecated to promote standards (specifically Function#bind***REMOVED***\n  // However, it is not slated for removal any time soon\n  jQuery.proxy = function (fn, context***REMOVED*** {\n    var tmp, args, proxy;\n    if (typeof context === \"string\"***REMOVED*** {\n      tmp = fn[context];\n      context = fn;\n      fn = tmp;\n    ***REMOVED***\n\n    // Quick check to determine if target is callable, in the spec\n    // this throws a TypeError, but we will just return undefined.\n    if (!isFunction(fn***REMOVED******REMOVED*** {\n      return undefined;\n    ***REMOVED***\n\n    // Simulated bind\n    args = slice.call(arguments, 2***REMOVED***;\n    proxy = function (***REMOVED*** {\n      return fn.apply(context || this, args.concat(slice.call(arguments***REMOVED******REMOVED******REMOVED***;\n    ***REMOVED***;\n\n    // Set the guid of unique handler to the same of original handler, so it can be removed\n    proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n    return proxy;\n  ***REMOVED***;\n  jQuery.holdReady = function (hold***REMOVED*** {\n    if (hold***REMOVED*** {\n      jQuery.readyWait++;\n    ***REMOVED*** else {\n      jQuery.ready(true***REMOVED***;\n    ***REMOVED***\n  ***REMOVED***;\n  jQuery.isArray = Array.isArray;\n  jQuery.parseJSON = JSON.parse;\n  jQuery.nodeName = nodeName;\n  jQuery.isFunction = isFunction;\n  jQuery.isWindow = isWindow;\n  jQuery.camelCase = camelCase;\n  jQuery.type = toType;\n  jQuery.now = Date.now;\n  jQuery.isNumeric = function (obj***REMOVED*** {\n    // As of jQuery 3.0, isNumeric is limited to\n    // strings and numbers (primitives or objects***REMOVED***\n    // that can be coerced to finite numbers (gh-2662***REMOVED***\n    var type = jQuery.type(obj***REMOVED***;\n    return (type === \"number\" || type === \"string\"***REMOVED*** &&\n    // parseFloat NaNs numeric-cast false positives (\"\"***REMOVED***\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\"***REMOVED***\n    // subtraction forces infinities to NaN\n    !isNaN(obj - parseFloat(obj***REMOVED******REMOVED***;\n  ***REMOVED***;\n  jQuery.trim = function (text***REMOVED*** {\n    return text == null ? \"\" : (text + \"\"***REMOVED***.replace(rtrim, \"\"***REMOVED***;\n  ***REMOVED***;\n\n  // Register as a named AMD module, since jQuery can be concatenated with other\n  // files that may use define, but not via a proper concatenation script that\n  // understands anonymous AMD modules. A named AMD is safest and most robust\n  // way to register. Lowercase jquery is used because AMD module names are\n  // derived from file names, and jQuery is normally delivered in a lowercase\n  // file name. Do this after creating the global so that if an AMD module wants\n  // to call noConflict to hide this version of jQuery, it will work.\n\n  // Note that for maximum portability, libraries that are not jQuery should\n  // declare themselves as anonymous modules, and avoid setting a global if an\n  // AMD loader is present. jQuery is a special case. For more information, see\n  // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n  if (typeof define === \"function\" && define.amd***REMOVED*** {\n    define(\"jquery\", [], function (***REMOVED*** {\n      return jQuery;\n    ***REMOVED******REMOVED***;\n  ***REMOVED***\n  var\n    // Map over jQuery in case of overwrite\n    _jQuery = window.jQuery,\n    // Map over the $ in case of overwrite\n    _$ = window.$;\n  jQuery.noConflict = function (deep***REMOVED*** {\n    if (window.$ === jQuery***REMOVED*** {\n      window.$ = _$;\n    ***REMOVED***\n    if (deep && window.jQuery === jQuery***REMOVED*** {\n      window.jQuery = _jQuery;\n    ***REMOVED***\n    return jQuery;\n  ***REMOVED***;\n\n  // Expose jQuery and $ identifiers, even in AMD\n  // (#7102#comment:10, https://github.com/jquery/jquery/pull/557***REMOVED***\n  // and CommonJS for browser emulators (#13566***REMOVED***\n  if (typeof noGlobal === \"undefined\"***REMOVED*** {\n    window.jQuery = window.$ = jQuery;\n  ***REMOVED***\n  return jQuery;\n***REMOVED******REMOVED***;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClsourceRoot":""***REMOVED***