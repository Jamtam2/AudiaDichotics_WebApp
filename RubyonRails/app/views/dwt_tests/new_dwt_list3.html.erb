<body class= "bg-light center">
<div class="container p-5 my-3 w-100 border rounded bg-white ">




<h1 class= "display-5", style= 'padding-bottom:20px' ><strong><%= "Testing " + @client.first_name + " " + @client.last_name%></strong></h1>

<!--Test page for DWT LIST 3 Contains everything for completing and submitting a test  -->
<link href="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/css/bootstrap4-toggle.min.css" rel="stylesheet">

<%= form_with model: [@client, @dwt_test], local: true do |f| %>
<div class="container">
  <div class="row">
    <div class="col-sm">
      <div class="form-group row">
        <label for="exampleLabel">Label</label>
          <%= f.text_field :label, class: "form-control", type: "text", id: "exampleLabel", value: "Dwt List Three" %>
      </div>
      <div class="form-group row">
        <label for="clientName">Client</label>
        <input class="form-control" type="text" id="clientName" placeholder="<%= @client.first_name + ' ' + @client.last_name %>" readonly>
      </div>
      <div class="form-group row">
        <label for="testType">Type</label>
        <input class="form-control" type="text" id="testType" placeholder="DWT" readonly>
      </div>
      <hr/>
      <div class="form-group row">
        <label for="conditionSelect">Condition</label>
        <select class="form-control" id="conditionSelect">
          <option>DirectedLeft</option>
          <option>DirectedRight</option>
          <option>FreeRecall</option>
        </select>
      </div>
      <%= button_tag "Switch left/right", :onclick => "event.preventDefault(***REMOVED***;" %>

      <hr/>
      <label for="Notes">Notes</label>
      <%= f.text_area :notes, class: 'form-control', rows: '3' %>
      <hr/>
      <!--AUDIO PLAYER FOR AUDIO FILES STORED IN ASSETS/AUDIO/ETC.MP3-->
      <audio controls>
        <source src="<%= asset_path('Track 04 Dichotic Words Test Track 3.mp3'***REMOVED*** %>" type="audio/mpeg">
      </audio>
      <hr/>
      <!--Table for ear advantage percentage that is calculated in the script-->
      <style>
          .left-column {
            background-color: lightblue;
          ***REMOVED***
          
          .right-column {
            background-color: lightpink;
          ***REMOVED***
          
          .ear-advantage {
            background-color: white;
          ***REMOVED***
          
          .ear-advantage.positive {
            background-color: lightblue;
          ***REMOVED***
          
          .ear-advantage.negative {
            background-color: lightpink;
          ***REMOVED***
      </style>
      <p>Scores:</p>
      <table class="table table-sm table-bordered m1-4" style="max-width: 25rem;">
        <thead>
          <tr>
            <th scope="col">Pairs</th>
            <th scope="col">Left</th>
            <th scope="col">Right</th>
            <th scope="col">Ear Adv</th>
          </tr>
          <tbody>
            <tr>
              <th scope="row">1</th>
              <td class="left-column"><span id="column1-percent">0</span>%</p></td>
              <td class="right-column"><span id="column2-percent">0</span>%</td>
              <td class="ear-advantage"><span id="advantage-Diff">0</span>%</td>
            </tr>
            <tr>
              <th scope="row">2</th>
            </tr>
            <tr>
              <th scope="row">3</th>           
            </tr>
          </tbody>
        </thead>
      </table>
      <!--Table for ear advantage that is calculated in the script and ear diagnosis/interpretation-->
      <label for="read-Only">Ear Advantage</label>
      <input class="form-control" type="text" id="read-Only" value="" readonly>
      <span hidden id="advantage-Name"></span>
      <label for="read-Only">Interpretation</label>
      <input class="form-control" type="text" id="read-Only-diag" value="" readonly>
      <span hidden id="Diagnosis"></span>
    </div>

    
    <div class="col-sm">
        <table class="table table-sm table-striped ml-4" style="max-width: 25rem;">
          <thead class="thead-dark">
            <tr>
              <th>Number</th>
              <th>Left</th>
              <th>Right</th>
            </tr>
          </thead>
          <tbody>
          <!-- Loop for table of words and creation of all buttons, only loops 25 times and creates table for buttons-->
            <% 25.times do |i| %>
              <% words = [
                ["Post", "Rim"],
                ["Two", "Look"],
                ["Cook", "Bite"],
                ["Car", "Lamp"],
                ["Skip", "Kiss"],
                ["Dream", "Floor"],
                ["Phone", "Damp"],
                ["Sit", "Gold"],
                ["Bear", "Sun"],
                ["Knife", "Bath"],
                ["Leg", "Milk"],
                ["Young", "Brush"],
                ["See", "Law"],
                ["Cat", "Hug"],
                ["Grass", "Square"],
                ["Weird", "Globe"],
                ["Bird", "Fork"],
                ["Bus", "Swing"],
                ["Snow", "Race"],
                ["Moon", "Wall"],
                ["Heel", "Five"],
                ["Mud", "Sheet"],
                ["Mat", "Nail"],
                ["Gum", "Pie"],
                ["Pill", "Key"]
                ] %>
              <tr>
                <td><%= i + 1 %></td>
                <td>
                  <div class="btn-group-toggle" data="buttons">
                    <label class="btn btn-outline-primary column1-button">
                      <input type="checkbox" name="column1[<%= i %>][]" value="1"> <%= words[i][0] %>
                    </label>
                  </div>
                </td>
                <td>
                  <div class="btn-group-toggle" data="buttons">
                    <label class="btn btn-outline-primary column2-button">
                      <input type="checkbox" name="column1[<%= i %>][]" value="2"> <%= words[i][1] %>
                    </label>
                  </div>
                </td>
              </tr>
            <% end %>
          </tbody>
          <!--Hidden table for submition items-->
        </table>
      
        <%= f.hidden_field :client_name, value: "Example user" %>
        <%= f.hidden_field :test_type, value: "DWT" %>
        <%= f.hidden_field :left_score, id: "left_score" %>
        <%= f.hidden_field :right_score, id: "right_score" %>
        <%= f.hidden_field :ear_advantage, id: "ear_advantage" %>
        <%= f.hidden_field :ear_advantage_score, id: "ear_advantage_score" %>
    
        <%= f.submit "Submit", class: "btn btn-primary btn-block", onclick: "populateHiddenFields(***REMOVED***" %>
      
      <% end %>

    <div>
      <p><span hidden id="column1-count"></span></p>
      <p><span id="column1-percent"></span></p>
      <p><span hidden id="column2-count"></span></p>
      <p><span id="column2-percent"></span></p>
      <p><span id="advantage-Diff"></span></p>
    </div>



    <script>




    //function for keeping the buttons blue after being clicked
      const checkboxes = document.querySelectorAll('input[type="checkbox"]'***REMOVED***;

      checkboxes.forEach(function(checkbox***REMOVED*** {
        checkbox.addEventListener('change', function(***REMOVED*** {
          const label = this.closest('label'***REMOVED***;
          if (this.checked***REMOVED*** {
            label.classList.add('active'***REMOVED***;
          ***REMOVED*** else {
            label.classList.remove('active'***REMOVED***;
          ***REMOVED***
        ***REMOVED******REMOVED***;
      ***REMOVED******REMOVED***;

      //script completes all logic for calculating diagnosis and ear advantage values, It updates the percentages and lists the ear diag and advantage
      // Get the toggle buttons and count elements
      const column1Buttons = document.querySelectorAll(".column1-button input[type='checkbox']"***REMOVED***;
      const column2Buttons = document.querySelectorAll(".column2-button input[type='checkbox']"***REMOVED***;
      const allButtons = document.querySelectorAll(".column1-button input[type='checkbox'], .column2-button input[type='checkbox']"***REMOVED***;
      const column1Count = document.getElementById("column1-count"***REMOVED***;
      const column2Count = document.getElementById("column2-count"***REMOVED***;
      const column1Percent = document.getElementById("column1-percent"***REMOVED***;
      const column2Percent = document.getElementById("column2-percent"***REMOVED***;
      const advantageDiff = document.getElementById("advantage-Diff"***REMOVED***;
      const advantageName = document.getElementById("advantage-Name"***REMOVED***;
      const testDiagnosis = document.getElementById("Diagnosis"***REMOVED***;
      const readOnly = document.getElementById("read-Only"***REMOVED***;
      const readOnlyDiag = document.getElementById("read-Only-diag"***REMOVED***;
      


      // Update the counts when a button is clicked
      
      allButtons.forEach(function(button***REMOVED*** {
        button.addEventListener("click", function(***REMOVED*** {
        const checkedCount1 = document.querySelectorAll(".column1-button input[type='checkbox']:checked"***REMOVED***.length;
        const checkedCount2 = document.querySelectorAll(".column2-button input[type='checkbox']:checked"***REMOVED***.length;
        const totalCount1 = column1Buttons.length;
        const totalCount2 = column2Buttons.length;
        const percent1 = ((checkedCount1 / totalCount1***REMOVED*** * 100***REMOVED***.toFixed(2***REMOVED***;
        const percent2 = ((checkedCount2 / totalCount2***REMOVED*** * 100***REMOVED***.toFixed(2***REMOVED***;
        const advantage = (percent1 - percent2***REMOVED***.toFixed(2***REMOVED***;
        const avgPercent = ((+percent1 + +percent2***REMOVED*** / 2***REMOVED***.toFixed(2***REMOVED***;

        let direction = null;
        let interpretation = null;
        let age = <%= @client.age_in_years %>;
        let dom = null;
        let nondom = null;
        if (advantage > 0***REMOVED*** {
          direction = "Left";
          dom = percent1;
          nondom = percent2;
        ***REMOVED*** else if (advantage < 0***REMOVED*** {
          direction = "Right";
          dom = percent2;
          nondom = percent1;
        ***REMOVED*** else {
          direction = "Neutral";
        ***REMOVED***
        // IF else logic for diagnosis based on the childs age. Still unsure if this works as intended accoring to Employer, but we believe it is
        if (age == 5 || age == 6***REMOVED***{
          if (direction == "Neutral"***REMOVED***{
            if (percent1 <= 44***REMOVED***{
              interpretation = "Dichotic Dysaudia";
            ***REMOVED***
            else{
              interpretation = "Within Normal Limits";
            ***REMOVED***
          ***REMOVED***
          else{
            if (((dom <= 64***REMOVED*** || (nondom <= 44***REMOVED******REMOVED*** && ((advantage <= -32***REMOVED*** || (advantage >= 32***REMOVED******REMOVED******REMOVED***{
              interpretation = "Amblyaudia + Dichotic Dysaudia";
            ***REMOVED***
            else if ((dom <= 64***REMOVED*** || (nondom <= 44***REMOVED******REMOVED***{
              interpretation = "Dichotic Dysaudia";
            ***REMOVED***
            else if (((dom > 64***REMOVED*** && (nondom > 44***REMOVED******REMOVED*** && (advantage <= -32***REMOVED******REMOVED***{
              interpretation = "Ambylaudia Right Ear Dominant";
            ***REMOVED***
            else if (((dom > 64***REMOVED*** && (nondom > 44***REMOVED******REMOVED*** && (advantage >= 32***REMOVED******REMOVED***{
              interpretation = "Ambylaudia Left Ear Dominant";
            ***REMOVED***
            else{
              interpretation = "Within Normal Limits";
            ***REMOVED***
          ***REMOVED***            
        ***REMOVED***
        if (age >= 7 && age <= 9***REMOVED***{
          if (direction == "Neutral"***REMOVED***{
            if (percent1 <= 60***REMOVED***{
              interpretation = "Dichotic Dysaudia";
            ***REMOVED***
            else{
              interpretation = "Within Normal Limits";
            ***REMOVED***
          ***REMOVED***
          else{
            if (((dom <= 76***REMOVED*** || (nondom <= 60***REMOVED******REMOVED*** && ((advantage <= -24***REMOVED*** || (advantage >= 24***REMOVED******REMOVED******REMOVED***{
              interpretation = "Amblyaudia + Dichotic Dysaudia";
            ***REMOVED***
            else if ((dom <= 76***REMOVED*** || (nondom <= 60***REMOVED******REMOVED***{
              interpretation = "Dichotic Dysaudia";
            ***REMOVED***
            else if (((dom > 76***REMOVED*** && (nondom > 60***REMOVED******REMOVED*** && (advantage <= -24***REMOVED******REMOVED***{
              interpretation = "Ambylaudia Right Ear Dominant";
            ***REMOVED***
            else if (((dom > 76***REMOVED*** && (nondom > 60***REMOVED******REMOVED*** && (advantage >= 24***REMOVED******REMOVED***{
              interpretation = "Ambylaudia Left Ear Dominant";
            ***REMOVED***
            else{
              interpretation = "Within Normal Limits";
            ***REMOVED***
          ***REMOVED***          
        ***REMOVED***
        if (age >= 10 && age <= 12***REMOVED***{
          if (direction == "Neutral"***REMOVED***{
            if (percent1 <= 72***REMOVED***{
              interpretation = "Dichotic Dysaudia";
            ***REMOVED***
            else{
              interpretation = "Within Normal Limits";
            ***REMOVED***
          ***REMOVED***
          else{
            if (((dom <= 84***REMOVED*** || (nondom <= 72***REMOVED******REMOVED*** && ((advantage <= -20***REMOVED*** || (advantage >= 20***REMOVED******REMOVED******REMOVED***{
              interpretation = "Amblyaudia + Dichotic Dysaudia";
            ***REMOVED***
            else if ((dom <= 84***REMOVED*** || (nondom <= 72***REMOVED******REMOVED***{
              interpretation = "Dichotic Dysaudia";
            ***REMOVED***
            else if (((dom > 84***REMOVED*** && (nondom > 72***REMOVED******REMOVED*** && (advantage <= -20***REMOVED******REMOVED***{
              interpretation = "Ambylaudia Right Ear Dominant";
            ***REMOVED***
            else if (((dom > 84***REMOVED*** && (nondom > 72***REMOVED******REMOVED*** && (advantage >= 20***REMOVED******REMOVED***{
              interpretation = "Ambylaudia Left Ear Dominant";
            ***REMOVED***
            else{
              interpretation = "Within Normal Limits";
            ***REMOVED***
          ***REMOVED***
        ***REMOVED***
        if (age >= 13 && age <= 15***REMOVED***{
          if (direction == "Neutral"***REMOVED***{
            if (percent1 <= 76***REMOVED***{
              interpretation = "Dichotic Dysaudia";
            ***REMOVED***
            else{
              interpretation = "Within Normal Limits";
            ***REMOVED***
          ***REMOVED***
          else{
            if (((dom <= 92***REMOVED*** || (nondom <= 76***REMOVED******REMOVED*** && ((advantage <= -16***REMOVED*** || (advantage >= 16***REMOVED******REMOVED******REMOVED***{
              interpretation = "Amblyaudia + Dichotic Dysaudia";
            ***REMOVED***
            else if ((dom <= 92***REMOVED*** || (nondom <= 76***REMOVED******REMOVED***{
              interpretation = "Dichotic Dysaudia";
            ***REMOVED***
            else if (((dom > 92***REMOVED*** && (nondom > 76***REMOVED******REMOVED*** && (advantage <= -16***REMOVED******REMOVED***{
              interpretation = "Ambylaudia Right Ear Dominant";
            ***REMOVED***
            else if (((dom > 92***REMOVED*** && (nondom > 76***REMOVED******REMOVED*** && (advantage >= 16***REMOVED******REMOVED***{
              interpretation = "Ambylaudia Left Ear Dominant";
            ***REMOVED***
            else{
              interpretation = "Within Normal Limits";
            ***REMOVED***
          ***REMOVED***          
        ***REMOVED***
        if (age >= 16 && age <= 18***REMOVED***{
          if (direction == "Neutral"***REMOVED***{
            if (percent1 <= 80***REMOVED***{
              interpretation = "Dichotic Dysaudia";
            ***REMOVED***
            else{
              interpretation = "Within Normal Limits";
            ***REMOVED***
          ***REMOVED***
          else{
            if (((dom <= 88***REMOVED*** || (nondom <= 80***REMOVED******REMOVED*** && ((advantage <= -14***REMOVED*** || (advantage >= 14***REMOVED******REMOVED******REMOVED***{
              interpretation = "Amblyaudia + Dichotic Dysaudia";
            ***REMOVED***
            else if ((dom <= 88***REMOVED*** || (nondom <= 80***REMOVED******REMOVED***{
              interpretation = "Dichotic Dysaudia";
            ***REMOVED***
            else if (((dom > 88***REMOVED*** && (nondom > 80***REMOVED******REMOVED*** && (advantage <= -14***REMOVED******REMOVED***{
              interpretation = "Ambylaudia Right Ear Dominant";
            ***REMOVED***
            else if (((dom > 88***REMOVED*** && (nondom > 80***REMOVED******REMOVED*** && (advantage >= 14***REMOVED******REMOVED***{
              interpretation = "Ambylaudia Left Ear Dominant";
            ***REMOVED***
            else{
              interpretation = "Within Normal Limits";
            ***REMOVED***
          ***REMOVED***          
        ***REMOVED***
        // Passes values to strings so they can be pushed to the html above
        column1Count.innerText = checkedCount1.toString(***REMOVED***;
        column1Percent.innerText = percent1.toString(***REMOVED***;
        column2Count.innerText = checkedCount2.toString(***REMOVED***;
        column2Percent.innerText = percent2.toString(***REMOVED***;
        advantageDiff.innerText = advantage.toString(***REMOVED***;
        advantageName.innerText = direction;
        testDiagnosis.innerText = interpretation;
        readOnly.value = advantageName.innerText;
        readOnlyDiag.value = testDiagnosis.innerText;

          // Get the ear advantage cells
          const earAdvantageCells = document.querySelectorAll('.ear-advantage'***REMOVED***;
          // Loop through each ear advantage cell
          earAdvantageCells.forEach(cell => {
            // Get the value of the cell
            const value = parseFloat(cell.textContent***REMOVED***;

            // Check the value and set the background color accordingly
            if (value > 0***REMOVED*** {
              cell.style.backgroundColor = 'lightblue';
            ***REMOVED*** else if (value < 0***REMOVED*** {
              cell.style.backgroundColor = 'lightpink';
            ***REMOVED*** else {
              cell.style.backgroundColor = 'white';
            ***REMOVED***
          ***REMOVED******REMOVED***;

        ***REMOVED******REMOVED***
      ***REMOVED******REMOVED***
     // gets the elements from hidden field submit above and populates them from the results in the script 
    function populateHiddenFields(***REMOVED*** {
      document.getElementById("left_score"***REMOVED***.value = column1Percent.innerText;
      document.getElementById("right_score"***REMOVED***.value = column2Percent.innerText;
      document.getElementById("ear_advantage"***REMOVED***.value = advantageName.innerText;
      document.getElementById("ear_advantage_score"***REMOVED***.value = advantageDiff.innerText;
    ***REMOVED***

    </script>

  </div>
</div>
</div>
</body>