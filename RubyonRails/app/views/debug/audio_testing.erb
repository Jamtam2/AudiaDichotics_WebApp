
<!-- Audio player for WAV files ONLY -->
<audio id="audio-player" controls>
  <source id="audio-source" src="<%= url_for(controller: 'audio_files', action: 'play') %>" type="audio/wav">
</audio>

<!-- Form for adjusting audio decibel levels -->
<%= form_with(url: adjust_audio_path, method: :post, local: false) do |form| %>
  <%= form.number_field :decibel_change, step: 0.1, placeholder: 'Enter decibel change' %>
  <%= form.submit 'Change Decibel Level' %>
<% end %>

<!-- Div section for displaying error messages that aren't exclusively console -->
<div id="error-message" style="color: red; display: none;"></div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Get references to the audio player and its source (for the script portion of page)
  const audioPlayer = document.getElementById('audio-player');
  const audioSource = document.getElementById('audio-source');
  // Used to display errors in div
  const errorMessage = document.getElementById('error-message');
 
  // Path is set by helper in form_with above, this is for player
  // This loads the original unadjusted audio file
  audioSource.src = '<%= url_for(controller: 'audio_files', action: 'play') %>';
  audioPlayer.load();
  // Handles form submission for changing decibels
  const form = document.querySelector('form');
  form.addEventListener('submit', function(e) {
    // Prevents using a default form submission for our specific
    e.preventDefault();
    const formData = new FormData(form);
   
    // This is an AJAX request for when we want to adjust the audio. Goal is to adjust without page refresh.
    fetch('<%= adjust_audio_path %>', {
      method: 'POST',
      body: formData
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response error');
      }
      return response.blob();
    })
    .then(blob => {
      // This creates a URL for the adjusted audio files
      const url = URL.createObjectURL(blob);
      // Updates our source audio, player, etc for the new file
      audioSource.src = url;
      audioPlayer.load();
      audioPlayer.play();
      // Hide any previous error message
      // TODO: Make sure this isn't screwing up ever displaying
      errorMessage.style.display = 'none';
    })
    .catch(error => {
      console.error('Error:', error);
      // Handle the error, show a message on page
      errorMessage.textContent = 'An error occurred while adjusting the audio.';
      errorMessage.style.display = 'block';
    });
  });
});
</script>