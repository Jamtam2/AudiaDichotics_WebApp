
  <body class= "bg-light center">
  <div class="container p-5 my-3 w-100 border rounded bg-white ">


  <h1 class= "display-5", style= 'padding-bottom:20px' ><strong><%= "Testing " + @client.first_name + " " + @client.last_name%></strong></h1>

  <!--Test page for RDDT List 2 Contains everything for completing and submitting a test  -->
  <link href="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/css/bootstrap4-toggle.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/js/bootstrap4-toggle.min.js"></script>
  <%= form_with model: [@client, @test], local: true do |f| %>
  <div class="container">
    <div class="row">
      <div class="col-sm">
        <div class="form-group row">
          <label for="exampleLabel">Label</label>
            <%= f.text_field :label, class: "form-control", type: "text", id: "exampleLabel", value: "Rddt List Two" %>
        </div>
        <div class="form-group row">
          <label for="testType">Client</label>
          <input class="form-control" type="text" id="testType" placeholder="<%= @client.first_name + ' ' + @client.last_name %>" readonly>
        </div>
        <div class="form-group row">
          <label for="testType">Type</label>
          <input class="form-control" type="text" id="testType" placeholder="RDDT" readonly>
        </div>
        <hr/>
        <div class="form-group row">
          <label for="conditionSelect">Condition</label>
          <input class="form-control" type="text" id="testType" placeholder="" readonly>
        </div>
        <%= button_tag "Switch left/right", :onclick => "event.preventDefault(***REMOVED***;" %>

        <hr/>
        <label for="Notes">Notes</label>
        <%= f.text_area :notes, class: 'form-control', rows: '3' %>
        <hr/>
        <!--AUDIO PLAYER FOR AUDIO FILES STORED IN ASSETS/AUDIO/ETC.MP3-->
        <audio controls>
          <source src="/assets/Track 07 RDDT-FreeRecall 1.mp3" type="audio/mpeg">
        </audio>
        <hr/>
        <!--Table for ear advantage percentage that is calculated in the script-->
        <p>Scores:</p>
        <table class="table table-sm table-bordered m1-4" style="max-width: 25rem;">
          <thead>
            <tr>
              <th scope="col">Pairs</th>
              <th scope="col">Left</th>
              <th scope="col">Right</th>
              <th scope="col">Ear Adv</th>
            </tr>
            <tbody>
              <tr>
                <th scope="row">1</th>
                <td><span id="column1Group1-percent">0</span>%</p></td>
                <td><span id="column2Group1-percent">0</span>%</td>
                <td><span id="Group1advantage-Diff">0</span>%</td>
              </tr>
              <tr>
                <th scope="row">2</th>
                <td><span id="column1Group2-percent">0</span>%</p></td>
                <td><span id="column2Group2-percent">0</span>%</td>
                <td><span id="Group2advantage-Diff">0</span>%</td>
              </tr>
              <tr>
                <th scope="row">3</th>  
                <td><span id="column1Group3-percent">0</span>%</p></td>
                <td><span id="column2Group3-percent">0</span>%</td>
                <td><span id="Group3advantage-Diff">0</span>%</td>         
              </tr>
            </tbody>
          </thead>
        </table>
        <!--Table for ear advantage that is calculated in the script and ear diagnosis/interpretation-->
        <label for="read-Only">Ear Advantage</label>
        <input class="form-control" type="text" id="read-Only" value="" readonly>
        <span hidden id="advantage-Name"></span>
        <label for="read-Only">Interpretation</label>
        <input class="form-control" type="text" id="read-Only-diag" value="" readonly>
        <span hidden id="Diagnosis"></span>
      </div>

      
      <div class="col-sm">
        <!--<div class="table-responsive" style="height: 1000px; overflow-y: auto; overflow-x: hidden;">-->
          <table class="table table-sm table-striped ml-4" style="max-width: 25rem;">
            <thead class="thead-dark">
              <tr>
                <th>Number</th>
                <th>Left</th>
                <th>Right</th>
              </tr>
            </thead>
            <tbody>
            <!-- Loop for table of numbers and creation of all buttons, only loops 54 times and creates table for buttons-->
              <% 54.times do |i| %>
                <% nums = [
                  [[6,2,4],[8,5,9]],
                  [[2,10],[3,9]],
                  [[5],[6]],
                  [[10],[6]],
                  [[5,9,6],[1,3,10]],
                  [[6],[4]],
                  [[4,8],[1,9]],
                  [[4,8],[5,6]],
                  [[8,3,6],[10,4,9]],
                  [[10,3],[9,8]],
                  [[2,1,10],[6,3,9]],
                  [[5],[2]],
                  [[4,1,3],[9,6,10]],
                  [[1,6,5],[8,3,4]],
                  [[10,6,9],[8,5,4]],
                  [[9,10,8],[4,5,3]],
                  [[3,1,2],[10,4,8]],
                  [[4,5,9],[3,2,1]],
                  [[5],[10]],
                  [[3,4,10],[9,8,5]],
                  [[5],[4]],
                  [[2,8],[9,10]],
                  [[5,9],[1,3]],
                  [[3,9],[8,4]],
                  [[1],[5]],
                  [[4,1],[9,6]],
                  [[6,8,4],[2,5,3]],
                  [[10,4],[6,9]],
                  [[10,6],[3,4]],
                  [[6,4,5],[1,10,8]],
                  [[10,4,2],[6,9,5]],
                  [[1],[2]],
                  [[8],[5]],
                  [[6,10,4],[3,1,2]],
                  [[4,1,3],[2,8,9]],
                  [[1,2],[9,4]],
                  [[2,10],[1,8]],
                  [[10],[9]],
                  [[10],[2]],
                  [[10,6,8],[4,1,2]],
                  [[8],[9]],
                  [[10,6],[4,1]],
                  [[4],[10]],
                  [[3],[10]],
                  [[2,5,10],[8,3,4]],
                  [[1],[3]],
                  [[6],[8]],
                  [[8,4],[9,6]],
                  [[2],[8]],
                  [[1,9],[3,2]],
                  [[8,2],[5,10]],
                  [[9,10],[4,5]],
                  [[10],[1]],
                  [[8,3],[4,2]]
                  ] %>
                <tr>
                  <td><%= i + 1 %></td>

                  <td>
                    <div class="btn-group-toggle" data="buttons">
                      <% group_size = nums[i][0].length %>
                      <% nums[i][0].each_with_index do |num, index| %>
                        <% button_class = "column1Group#{group_size***REMOVED***-button" %>
                        <label class="btn btn-outline-primary <%= button_class %>">
                          <input type="checkbox" name="column1[<%= i %>][]" value="<%= num %>">
                          <%= num %>
                        </label>
                      <% end %>
                    </div>
                  </td>

                  <td>
                    <div class="btn-group-toggle" data="buttons">
                      <% group_size = nums[i][1].length %>
                      <% nums[i][1].each_with_index do |num, index| %>
                        <% button_class = "column2Group#{group_size***REMOVED***-button" %>
                        <label class="btn btn-outline-primary <%= button_class %>">
                          <input type="checkbox" name="column2[<%= i %>][]" value="<%= num %>">
                          <%= num %>
                        </label>
                      <% end %>
                    </div>
                  </td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
          <%= f.hidden_field :client_name, value: "Example user" %>
          <%= f.hidden_field :test_type, value: "RDDT" %>
          <%= f.hidden_field :left_score, id: "left_score" %>
          <%= f.hidden_field :right_score, id: "right_score" %>
          <%= f.hidden_field :ear_advantage, id: "ear_advantage" %>
          <%= f.hidden_field :ear_advantage_score, id: "ear_advantage_score" %>
      
          <%= f.submit "Submit", class: "btn btn-primary btn-block", onclick: "populateHiddenFields(***REMOVED***" %>
        
        <% end %>

        <div>
          <p><span hidden id="column1-count"></span></p>
          <p><span id="column1Group1-percent"></span></p>
          <p><span id="column1Group2-percent"></span></p>
          <p><span id="column1Group3-percent"></span></p>

          <p><span hidden id="column2-count"></span></p>
          <p><span id="column2Group1-percent"></span></p>
          <p><span id="column2Group2-percent"></span></p>
          <p><span id="column2Group3-percent"></span></p>

          <p><span id="Group1advantage-Diff"></span></p>
          <p><span id="Group2advantage-Diff"></span></p>
          <p><span id="Group3advantage-Diff"></span></p>
        </div>





      <script>/*
  
        document.addEventListener('DOMContentLoaded', function(***REMOVED*** {
          // Disable scrolling
          document.body.style.overflow = 'hidden';
        ***REMOVED******REMOVED***;
        */



      //function for keeping the buttons blue after being clicked
        const checkboxes = document.querySelectorAll('input[type="checkbox"]'***REMOVED***;

        checkboxes.forEach(function(checkbox***REMOVED*** {
          checkbox.addEventListener('change', function(***REMOVED*** {
            const label = this.closest('label'***REMOVED***;
            if (this.checked***REMOVED*** {
              label.classList.add('active'***REMOVED***;
            ***REMOVED*** else {
              label.classList.remove('active'***REMOVED***;
            ***REMOVED***
          ***REMOVED******REMOVED***;
        ***REMOVED******REMOVED***;

        //script completes all logic for calculating diagnosis and ear advantage values, It updates the percentages and lists the ear diag and advantage
        // Get the toggle buttons and count elements
        const column1ButtonsGroup1 = document.querySelectorAll(".column1Group1-button input[type='checkbox']"***REMOVED***;
        const column1ButtonsGroup2 = document.querySelectorAll(".column1Group2-button input[type='checkbox']"***REMOVED***;
        const column1ButtonsGroup3 = document.querySelectorAll(".column1Group3-button input[type='checkbox']"***REMOVED***;
        const column2ButtonsGroup1 = document.querySelectorAll(".column2Group1-button input[type='checkbox']"***REMOVED***;
        const column2ButtonsGroup2 = document.querySelectorAll(".column2Group2-button input[type='checkbox']"***REMOVED***;
        const column2ButtonsGroup3 = document.querySelectorAll(".column2Group3-button input[type='checkbox']"***REMOVED***;

        const allButtons = document.querySelectorAll(".column1Group1-button input[type='checkbox'], .column1Group2-button input[type='checkbox'], .column1Group3-button input[type='checkbox'], .column2Group1-button input[type='checkbox'], .column2Group2-button input[type='checkbox'], .column2Group3-button input[type='checkbox']"***REMOVED***;
        
        const column1Count = document.getElementById("column1-count"***REMOVED***;
        const column2Count = document.getElementById("column2-count"***REMOVED***;
        
        const column1Group1Percent = document.getElementById("column1Group1-percent"***REMOVED***;
        const column1Group2Percent = document.getElementById("column1Group2-percent"***REMOVED***;
        const column1Group3Percent = document.getElementById("column1Group3-percent"***REMOVED***;
        const column2Group1Percent = document.getElementById("column2Group1-percent"***REMOVED***;
        const column2Group2Percent = document.getElementById("column2Group2-percent"***REMOVED***;
        const column2Group3Percent = document.getElementById("column2Group3-percent"***REMOVED***;

        const advantageDiffGroup1 = document.getElementById("Group1advantage-Diff"***REMOVED***;
        const advantageDiffGroup2 = document.getElementById("Group2advantage-Diff"***REMOVED***;
        const advantageDiffGroup3 = document.getElementById("Group3advantage-Diff"***REMOVED***;



        const advantageName = document.getElementById("advantage-Name"***REMOVED***;
        const testDiagnosis = document.getElementById("Diagnosis"***REMOVED***;
        const readOnly = document.getElementById("read-Only"***REMOVED***;
        const readOnlyDiag = document.getElementById("read-Only-diag"***REMOVED***;
        


        // Update the counts when a button is clicked
        
        allButtons.forEach(function(button***REMOVED*** {
          button.addEventListener("click", function(***REMOVED*** {
          const checkedCount1Group1 = document.querySelectorAll(".column1Group1-button input[type='checkbox']:checked"***REMOVED***.length;
          const checkedCount1Group2 = document.querySelectorAll(".column1Group2-button input[type='checkbox']:checked"***REMOVED***.length;
          const checkedCount1Group3 = document.querySelectorAll(".column1Group3-button input[type='checkbox']:checked"***REMOVED***.length;
          const checkedCount2Group1 = document.querySelectorAll(".column2Group1-button input[type='checkbox']:checked"***REMOVED***.length;
          const checkedCount2Group2 = document.querySelectorAll(".column2Group2-button input[type='checkbox']:checked"***REMOVED***.length;
          const checkedCount2Group3 = document.querySelectorAll(".column2Group3-button input[type='checkbox']:checked"***REMOVED***.length;

          const totalCountColumn1Group1 = column1ButtonsGroup1.length;
          const totalCountColumn1Group2 = column1ButtonsGroup2.length;
          const totalCountColumn1Group3 = column1ButtonsGroup3.length;
          const totalCountColumn2Group1 = column2ButtonsGroup1.length;
          const totalCountColumn2Group2 = column2ButtonsGroup2.length;
          const totalCountColumn2Group3 = column2ButtonsGroup3.length;


          const percentColumn1Group1 = ((checkedCount1Group1 / totalCountColumn1Group1***REMOVED*** * 100***REMOVED***.toFixed(2***REMOVED***;
          const percentColumn1Group2 = ((checkedCount1Group2 / totalCountColumn1Group2***REMOVED*** * 100***REMOVED***.toFixed(2***REMOVED***;
          const percentColumn1Group3 = ((checkedCount1Group3 / totalCountColumn1Group3***REMOVED*** * 100***REMOVED***.toFixed(2***REMOVED***;
          const percentColumn2Group1 = ((checkedCount2Group1 / totalCountColumn2Group1***REMOVED*** * 100***REMOVED***.toFixed(2***REMOVED***;
          const percentColumn2Group2 = ((checkedCount2Group2 / totalCountColumn2Group2***REMOVED*** * 100***REMOVED***.toFixed(2***REMOVED***;
          const percentColumn2Group3 = ((checkedCount2Group3 / totalCountColumn2Group3***REMOVED*** * 100***REMOVED***.toFixed(2***REMOVED***;

          const group1Advantage = (percentColumn1Group1 - percentColumn2Group1***REMOVED***.toFixed(2***REMOVED***;
          const group2Advantage = (percentColumn1Group2 - percentColumn2Group2***REMOVED***.toFixed(2***REMOVED***;
          const group3Advantage = (percentColumn1Group3 - percentColumn2Group3***REMOVED***.toFixed(2***REMOVED***;

          let direction = null;
          console.log(group1Advantage + group2Advantage + group3Advantage***REMOVED***;
          if ((parseFloat(group1Advantage***REMOVED*** + parseFloat(group2Advantage***REMOVED*** + parseFloat(group3Advantage***REMOVED******REMOVED*** > 0***REMOVED*** {
            direction = "Left";
          ***REMOVED***
          else if ((parseFloat(group1Advantage***REMOVED*** + parseFloat(group2Advantage***REMOVED*** + parseFloat(group3Advantage***REMOVED******REMOVED*** < 0***REMOVED*** {
            direction = "Right";
          ***REMOVED***
          else{
            direction = "Neutral";
          ***REMOVED***


          /*
          const advantage = (percent1 - percent2***REMOVED***.toFixed(2***REMOVED***;
          const avgPercent = ((+percent1 + +percent2***REMOVED*** / 2***REMOVED***.toFixed(2***REMOVED***;

          let direction = null;
          let interpretation = null;
          let age = 40;
          let dom = null;
          let nondom = null;
          if (advantage > 0***REMOVED*** {
            direction = "Left";
            dom = percent1;
            nondom = percent2;
          ***REMOVED*** else if (advantage < 0***REMOVED*** {
            direction = "Right";
            dom = percent2;
            nondom = percent1;
          ***REMOVED*** else {
            direction = "Neutral";
            ***REMOVED***
  // IF else logic for diagnosis based on the childs age. Still unsure if this works as intended accoring to Employer, but we believe it does
          if (age == 5 || age == 6***REMOVED***{
            if (direction == "Neutral"***REMOVED***{
              if (percent1 <= 44***REMOVED***{
                interpretation = "Dichotic Dysaudia";
              ***REMOVED***
              else{
                interpretation = "Within Normal Limits";
              ***REMOVED***
            ***REMOVED***
            else{
              if (((dom <= 64***REMOVED*** || (nondom <= 44***REMOVED******REMOVED*** && ((advantage <= -32***REMOVED*** || (advantage >= 32***REMOVED******REMOVED******REMOVED***{
                interpretation = "Amblyaudia + Dichotic Dysaudia";
              ***REMOVED***
              else if ((dom <= 64***REMOVED*** || (nondom <= 44***REMOVED******REMOVED***{
                interpretation = "Dichotic Dysaudia";
              ***REMOVED***
              else if (((dom > 64***REMOVED*** && (nondom > 44***REMOVED******REMOVED*** && (advantage <= -32***REMOVED******REMOVED***{
                interpretation = "Ambylaudia Right Ear Dominant";
              ***REMOVED***
              else if (((dom > 64***REMOVED*** && (nondom > 44***REMOVED******REMOVED*** && (advantage >= 32***REMOVED******REMOVED***{
                interpretation = "Ambylaudia Left Ear Dominant";
              ***REMOVED***
              else{
                interpretation = "Within Normal Limits";
              ***REMOVED***
            ***REMOVED***            
          ***REMOVED***
          if (age >= 7 && age <= 9***REMOVED***{
            if (direction == "Neutral"***REMOVED***{
              if (percent1 <= 60***REMOVED***{
                interpretation = "Dichotic Dysaudia";
              ***REMOVED***
              else{
                interpretation = "Within Normal Limits";
              ***REMOVED***
            ***REMOVED***
            else{
              if (((dom <= 76***REMOVED*** || (nondom <= 60***REMOVED******REMOVED*** && ((advantage <= -24***REMOVED*** || (advantage >= 24***REMOVED******REMOVED******REMOVED***{
                interpretation = "Amblyaudia + Dichotic Dysaudia";
              ***REMOVED***
              else if ((dom <= 76***REMOVED*** || (nondom <= 60***REMOVED******REMOVED***{
                interpretation = "Dichotic Dysaudia";
              ***REMOVED***
              else if (((dom > 76***REMOVED*** && (nondom > 60***REMOVED******REMOVED*** && (advantage <= -24***REMOVED******REMOVED***{
                interpretation = "Ambylaudia Right Ear Dominant";
              ***REMOVED***
              else if (((dom > 76***REMOVED*** && (nondom > 60***REMOVED******REMOVED*** && (advantage >= 24***REMOVED******REMOVED***{
                interpretation = "Ambylaudia Left Ear Dominant";
              ***REMOVED***
              else{
                interpretation = "Within Normal Limits";
              ***REMOVED***
            ***REMOVED***          
          ***REMOVED***
          if (age >= 10 && age <= 12***REMOVED***{
            if (direction == "Neutral"***REMOVED***{
              if (percent1 <= 72***REMOVED***{
                interpretation = "Dichotic Dysaudia";
              ***REMOVED***
              else{
                interpretation = "Within Normal Limits";
              ***REMOVED***
            ***REMOVED***
            else{
              if (((dom <= 84***REMOVED*** || (nondom <= 72***REMOVED******REMOVED*** && ((advantage <= -20***REMOVED*** || (advantage >= 20***REMOVED******REMOVED******REMOVED***{
                interpretation = "Amblyaudia + Dichotic Dysaudia";
              ***REMOVED***
              else if ((dom <= 84***REMOVED*** || (nondom <= 72***REMOVED******REMOVED***{
                interpretation = "Dichotic Dysaudia";
              ***REMOVED***
              else if (((dom > 84***REMOVED*** && (nondom > 72***REMOVED******REMOVED*** && (advantage <= -20***REMOVED******REMOVED***{
                interpretation = "Ambylaudia Right Ear Dominant";
              ***REMOVED***
              else if (((dom > 84***REMOVED*** && (nondom > 72***REMOVED******REMOVED*** && (advantage >= 20***REMOVED******REMOVED***{
                interpretation = "Ambylaudia Left Ear Dominant";
              ***REMOVED***
              else{
                interpretation = "Within Normal Limits";
              ***REMOVED***
            ***REMOVED***
          ***REMOVED***
          if (age >= 13 && age <= 15***REMOVED***{
            if (direction == "Neutral"***REMOVED***{
              if (percent1 <= 76***REMOVED***{
                interpretation = "Dichotic Dysaudia";
              ***REMOVED***
              else{
                interpretation = "Within Normal Limits";
              ***REMOVED***
            ***REMOVED***
            else{
              if (((dom <= 92***REMOVED*** || (nondom <= 76***REMOVED******REMOVED*** && ((advantage <= -16***REMOVED*** || (advantage >= 16***REMOVED******REMOVED******REMOVED***{
                interpretation = "Amblyaudia + Dichotic Dysaudia";
              ***REMOVED***
              else if ((dom <= 92***REMOVED*** || (nondom <= 76***REMOVED******REMOVED***{
                interpretation = "Dichotic Dysaudia";
              ***REMOVED***
              else if (((dom > 92***REMOVED*** && (nondom > 76***REMOVED******REMOVED*** && (advantage <= -16***REMOVED******REMOVED***{
                interpretation = "Ambylaudia Right Ear Dominant";
              ***REMOVED***
              else if (((dom > 92***REMOVED*** && (nondom > 76***REMOVED******REMOVED*** && (advantage >= 16***REMOVED******REMOVED***{
                interpretation = "Ambylaudia Left Ear Dominant";
              ***REMOVED***
              else{
                interpretation = "Within Normal Limits";
              ***REMOVED***
            ***REMOVED***          
          ***REMOVED***
          if (age >= 16 && age <= 18***REMOVED***{
            if (direction == "Neutral"***REMOVED***{
              if (percent1 <= 80***REMOVED***{
                interpretation = "Dichotic Dysaudia";
              ***REMOVED***
              else{
                interpretation = "Within Normal Limits";
              ***REMOVED***
            ***REMOVED***
            else{
              if (((dom <= 88***REMOVED*** || (nondom <= 80***REMOVED******REMOVED*** && ((advantage <= -14***REMOVED*** || (advantage >= 14***REMOVED******REMOVED******REMOVED***{
                interpretation = "Amblyaudia + Dichotic Dysaudia";
              ***REMOVED***
              else if ((dom <= 88***REMOVED*** || (nondom <= 80***REMOVED******REMOVED***{
                interpretation = "Dichotic Dysaudia";
              ***REMOVED***
              else if (((dom > 88***REMOVED*** && (nondom > 80***REMOVED******REMOVED*** && (advantage <= -14***REMOVED******REMOVED***{
                interpretation = "Ambylaudia Right Ear Dominant";
              ***REMOVED***
              else if (((dom > 88***REMOVED*** && (nondom > 80***REMOVED******REMOVED*** && (advantage >= 14***REMOVED******REMOVED***{
                interpretation = "Ambylaudia Left Ear Dominant";
              ***REMOVED***
              else{
                interpretation = "Within Normal Limits";
              ***REMOVED***
            ***REMOVED***          
          ***REMOVED***
          */
          
          // Passes values to strings so they can be pushed to the html above


          column1Group1Percent.innerText = percentColumn1Group1.toString(***REMOVED***;
          column1Group2Percent.innerText = percentColumn1Group2.toString(***REMOVED***;
          column1Group3Percent.innerText = percentColumn1Group3.toString(***REMOVED***;

          column2Group1Percent.innerText = percentColumn2Group1.toString(***REMOVED***;
          column2Group2Percent.innerText = percentColumn2Group2.toString(***REMOVED***;
          column2Group3Percent.innerText = percentColumn2Group3.toString(***REMOVED***;



          advantageDiffGroup1.innerText = group1Advantage.toString(***REMOVED***;
          advantageDiffGroup2.innerText = group2Advantage.toString(***REMOVED***;
          advantageDiffGroup3.innerText = group3Advantage.toString(***REMOVED***;


          advantageName.innerText = direction;
          readOnly.value = advantageName.innerText;

          
          testDiagnosis.innerText = interpretation;
          readOnly.value = advantageName.innerText;
          readOnlyDiag.value = testDiagnosis.innerText;
  
          ***REMOVED******REMOVED***
        ***REMOVED******REMOVED***
      // gets the elements from hidden field submit above and populates them from the results in the script 
      function populateHiddenFields(***REMOVED*** {
        document.getElementById("left_score"***REMOVED***.value = column1Group1Percent.innerText;
        document.getElementById("right_score"***REMOVED***.value = column2Group1Percent.innerText;
        document.getElementById("ear_advantage"***REMOVED***.value = advantageName.innerText;
        document.getElementById("ear_advantage_score"***REMOVED***.value = advantageDiffGroup1.innerText;
      ***REMOVED***
        
      </script>

      </div>
    </div>
  </div>
  </body>
