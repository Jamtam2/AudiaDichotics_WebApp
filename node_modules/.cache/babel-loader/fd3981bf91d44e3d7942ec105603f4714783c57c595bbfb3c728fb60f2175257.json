{"ast":null,"code":"function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n// app/javascript/packs/transcription.js\n\n// Import necessary modules\nimport consumer from \"../channels/consumer\"; // Import the ActionCable consumer\nimport Recorder from 'recorder-js';\nvar listType = document.body.getAttribute('data-list-type');\nconsole.log('In page: ', listType);\nvar ws;\n\n// Define lookup objects for each list\nvar dwtList1 = {\n  'y': 'Why',\n  'four': 'For',\n  'pick': 'Pig',\n  'rome': 'Room',\n  'around': 'Round',\n  'toe': 'Tow',\n  'anten': 'Tan',\n  'can': 'Tan',\n  'broom': 'Room',\n  'thor': 'Store',\n  'blip': 'Lip',\n  'ball': 'Fall',\n  'line': 'Vine',\n  'net': 'Bet',\n  'flip': 'Lip',\n  'po': 'Tow',\n  'hake': 'Cake',\n  'bake': 'Cake',\n  'bat': 'That',\n  'home': 'Comb',\n  'whack': 'Quack',\n  'hoop': 'Soap',\n  'by': 'Buy',\n  'she': 'Sheep',\n  'mine': 'Vine',\n  'take': 'Cake',\n  'black': 'Quack',\n  'qhiz': 'Quiz',\n  'blast': 'Glass',\n  'collapse': 'Glass',\n  'piece': 'Teeth',\n  'li': 'Why',\n  'fawn': 'Fun',\n  'dog': 'Dad',\n  'ground': 'Round',\n  'haroo': 'Room',\n  'both': 'Booth',\n  'ten': 'Pen',\n  'ohm': 'Comb',\n  'com': 'Comb',\n  'bold': 'Old',\n  'and': 'Hand',\n  'amp': 'Camp',\n  'font': 'Want',\n  'full': 'Fall',\n  'fine': 'Vine',\n  'og': 'Old',\n  'brown': 'Round',\n  'mime': 'Vine',\n  'bets': 'Bet'\n};\nvar dwtList2 = {\n  'form': 'Farm',\n  'ben': 'Den',\n  'hoarse': 'Horse',\n  'moreth': 'North',\n  'butt': 'But',\n  'cag': 'Tag',\n  'fall': 'Ball',\n  'ow': 'How',\n  'freak': 'Greek',\n  'moon': 'Spoon',\n  'coin': 'Corn',\n  'horn': 'Corn',\n  'boon': 'Spoon',\n  'born': 'Corn',\n  'beer': 'Year',\n  'bread': 'Red',\n  'bred': 'Red',\n  'po': 'Corn',\n  'gear': 'Year',\n  'ear': 'Year',\n  'blick': 'Lick',\n  'hat': 'Pat',\n  'corrupt': 'Rough',\n  'then': 'Den',\n  'art': 'Heart',\n  'all': 'Ball',\n  'hot': 'Pot',\n  'clothes': 'Close',\n  'sop': 'Stop',\n  'rink': 'Ring',\n  'house': 'How',\n  'am': 'Ham',\n  'l': 'Bell',\n  'fame': 'Same',\n  'read': 'Red',\n  'night': 'Nice',\n  'mice': 'Nice',\n  'rank': 'Ring',\n  'force': 'Horse',\n  'they': 'Day'\n};\nvar dwtList3 = {\n  'rem': 'Rim',\n  'c': 'See',\n  'to': 'Two',\n  'too': 'Two',\n  'orc': 'Fork',\n  'life': 'Knife',\n  'son': 'Sun',\n  'bit': 'Bite',\n  'byte': 'Bite',\n  'host': 'Post',\n  'hook': 'Cook',\n  'par': 'Car',\n  'bat': 'Bath',\n  'pug': 'Hug',\n  'at': 'Mat',\n  'tie': 'Pie',\n  'keen': 'Key',\n  'bass': 'Bath',\n  'bare': 'Bear',\n  'bone': 'Phone',\n  'pillant': 'Pill',\n  'heal': 'Heel',\n  'third': 'Bird'\n};\nvar dwtList4 = {\n  'wear': 'Where',\n  'knead': 'Need',\n  'our': 'Bar',\n  'ban': 'Van',\n  'ed': 'Bed',\n  'pipe': 'Type',\n  'brain': 'Rain',\n  'how': 'Cow',\n  'lane': 'Plain',\n  'plane': 'Plain',\n  'reign': 'Rain',\n  'blaine': 'Plain',\n  'eat': 'Neat',\n  'lane?': 'Plain'\n};\n\n// Create a map for easy lookup based on listType\nvar lookupTable = {\n  'dwt_list1': dwtList1,\n  'dwt_list2': dwtList2,\n  'dwt_list3': dwtList3,\n  'dwt_list4': dwtList4\n};\n\n// import { SoxRecording } from './sox.js'; // Import SoxRecording\n// Access the words array passed from the ERB template\nvar words;\nif (listType === \"dwt_list1\") {\n  words = [[\"Fun\", \"Pig\"], [\"Vine\", \"Sheep\"], [\"Cake\", \"Buy\"], [\"Round\", \"Storm\"], [\"Say\", \"Tan\"], [\"Yes\", \"Fast\"], [\"Pen\", \"Most\"], [\"Bet\", \"One\"], [\"Green\", \"Booth\"], [\"Store\", \"Glass\"], [\"Soap\", \"Teeth\"], [\"Bring\", \"Share\"], [\"Rug\", \"Book\"], [\"Want\", \"Soft\"], [\"Tow\", \"Kite\"], [\"Why\", \"Quack\"], [\"Comb\", \"For\"], [\"That\", \"Love\"], [\"Bug\", \"Wet\"], [\"Quiz\", \"Juice\"], [\"Camp\", \"Light\"], [\"Hand\", \"Goose\"], [\"Lip\", \"Dad\"], [\"Fall\", \"Room\"], [\"Old\", \"Chef\"]];\n} else if (listType === \"dwt_list2\") {\n  words = [[\"Bell\", \"Farm\"], [\"Same\", \"Cast\"], [\"Child\", \"Bowl\"], [\"How\", \"Plug\"], [\"Lick\", \"Top\"], [\"Watch\", \"Horse\"], [\"Ham\", \"Day\"], [\"When\", \"Truck\"], [\"Drink\", \"Rhyme\"], [\"Sleep\", \"Yard\"], [\"Greek\", \"Stop\"], [\"Den\", \"Red\"], [\"Song\", \"Math\"], [\"Dog\", \"More\"], [\"Spoon\", \"North\"], [\"But\", \"Chip\"], [\"Year\", \"Nice\"], [\"Cloud\", \"Make\"], [\"Tag\", \"Heart\"], [\"Pot\", \"Ball\"], [\"Door\", \"Set\"], [\"Cup\", \"Pat\"], [\"Close\", \"Shine\"], [\"Ring\", \"Test\"], [\"Rough\", \"Corn\"]];\n} else if (listType === \"dwt_list3\") {\n  words = [[\"Post\", \"Rim\"], [\"Two\", \"Look\"], [\"Cook\", \"Bite\"], [\"Car\", \"Lamp\"], [\"Skip\", \"Kiss\"], [\"Dream\", \"Floor\"], [\"Phone\", \"Damp\"], [\"Sit\", \"Gold\"], [\"Bear\", \"Sun\"], [\"Knife\", \"Bath\"], [\"Leg\", \"Milk\"], [\"Young\", \"Brush\"], [\"See\", \"Law\"], [\"Cat\", \"Hug\"], [\"Grass\", \"Square\"], [\"Weird\", \"Globe\"], [\"Bird\", \"Fork\"], [\"Bus\", \"Swing\"], [\"Snow\", \"Race\"], [\"Moon\", \"Wall\"], [\"Heel\", \"Five\"], [\"Mud\", \"Sheet\"], [\"Mat\", \"Nail\"], [\"Gum\", \"Pie\"], [\"Pill\", \"Key\"]];\n} else if (listType === \"dwt_list4\") {\n  words = [[\"Bar\", \"Head\"], [\"Box\", \"Shelf\"], [\"Will\", \"Pan\"], [\"Work\", \"Dive\"], [\"Knit\", \"Where\"], [\"Down\", \"Vase\"], [\"Food\", \"Judge\"], [\"Gas\", \"Sand\"], [\"Van\", \"Game\"], [\"Joke\", \"Need\"], [\"New\", \"Late\"], [\"Plate\", \"Rope\"], [\"Jar\", \"Fish\"], [\"First\", \"Black\"], [\"Voice\", \"Rose\"], [\"Bed\", \"Catch\"], [\"Couch\", \"Best\"], [\"Type\", \"Big\"], [\"Rain\", \"Mouse\"], [\"Cow\", \"Her\"], [\"Neat\", \"Rock\"], [\"Sing\", \"Plain\"], [\"Learn\", \"Dark\"], [\"Yell\", \"White\"], [\"Help\", \"Knee\"]];\n}\n//   console.log('Words array:', words);\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Create a dictionary of labels and checkboxes\n  var labelCheckboxMap = {};\n  document.querySelectorAll('label').forEach(function (label) {\n    var checkbox = label.querySelector('input[type=\"checkbox\"]');\n    if (checkbox) {\n      labelCheckboxMap[label.textContent.trim().toLowerCase()] = {\n        checkbox: checkbox,\n        label: label\n      };\n    }\n  });\n  // console.log('created the label checkbox map: ', labelCheckboxMap)\n\n  // Create wordTimeWindows\n  var wordTimeWindows = words.map(function (pair, index) {\n    var startTime = index * 5 + 5; // Each word pair starts every 5 seconds\n    var endTime = startTime + 15; // Each word pair is acceptable for 15 seconds\n    return {\n      words: pair,\n      startTime: startTime,\n      endTime: endTime\n    };\n  });\n  //   console.log('wordTimeWindows:', wordTimeWindows);\n\n  // Start the Node.js script when the page loads\n  fetch('/start_speech_script').then(function (response) {\n    return response.text();\n  }).then(function (data) {\n    return console.log(\"Speech-to-text script started:\", data);\n  })[\"catch\"](function (error) {\n    return console.error(\"Error starting script:\", error);\n  });\n  var startBtn = document.getElementById('startBtn');\n  var stopBtn = document.getElementById('stopBtn');\n  // const ws = new WebSocket('wss://www.audiadichotics.com');\n  var audioPlayer = document.getElementById('audioPlayer');\n  var audioContext;\n  var recorder;\n  var transcriptionChannel = null;\n\n  // Silence detection variables\n  var silenceTimeout;\n  var scriptProcessor;\n  var isSpeaking = false;\n  var silenceDuration = 1000; // 1 second in milliseconds\n  var silenceThreshold = 0.01; // Adjust this threshold as needed\n  function connectWebSocket() {\n    ws = new WebSocket('wss://speechtotextserver-be5e42377a32.herokuapp.com');\n    ws.onopen = function () {\n      console.log('WebSocket connection established');\n    };\n    ws.onmessage = function (event) {\n      var transcript = JSON.parse(event.data);\n      if (transcript.text) {\n        checkAnswer(transcript.text.replace(/\\./, ''));\n        console.log('Transcript received:', transcript.text);\n      }\n    };\n    ws.onerror = function (error) {\n      console.error(\"WebSocket error: \".concat(error));\n    };\n    ws.onclose = function () {\n      console.log('WebSocket connection closed. Reconnecting...');\n      setTimeout(connectWebSocket, 5000); // Attempt reconnection after 5 seconds\n    };\n  }\n\n  // Initial connection\n  connectWebSocket();\n  startBtn.onclick = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var stream, source;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return navigator.mediaDevices.getUserMedia({\n            audio: true\n          });\n        case 3:\n          stream = _context.sent;\n          console.log('Stream obtained:', stream);\n          _context.next = 11;\n          break;\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('Error accessing microphone:', _context.t0);\n          return _context.abrupt(\"return\");\n        case 11:\n          // Initialize Recorder.js\n          audioContext = new (window.AudioContext || window.webkitAudioContext)();\n          recorder = new Recorder(audioContext, {\n            numChannels: 1\n          });\n          _context.next = 15;\n          return recorder.init(stream);\n        case 15:\n          // Set up the audio analyzer for silence detection\n          source = audioContext.createMediaStreamSource(stream);\n          scriptProcessor = audioContext.createScriptProcessor(4096, 1, 1);\n          source.connect(scriptProcessor);\n          scriptProcessor.connect(audioContext.destination);\n          scriptProcessor.onaudioprocess = function (event) {\n            var inputData = event.inputBuffer.getChannelData(0);\n            var total = 0;\n\n            // Calculate the average amplitude\n            for (var i = 0; i < inputData.length; i++) {\n              total += Math.abs(inputData[i]);\n            }\n            var average = total / inputData.length;\n\n            // Check if the average amplitude is above the silence threshold\n            if (average > silenceThreshold) {\n              // Audio is above the threshold; reset the silence timer\n              if (silenceTimeout) {\n                clearTimeout(silenceTimeout);\n                silenceTimeout = null;\n              }\n              if (!isSpeaking) {\n                console.log('Started speaking');\n                isSpeaking = true;\n                // Start recording when the user starts speaking\n                recorder.start();\n              }\n            } else {\n              // Audio is below the threshold\n              if (!silenceTimeout && isSpeaking) {\n                silenceTimeout = setTimeout(function () {\n                  // Silence has been detected for the specified duration\n                  console.log('Stopped speaking');\n                  isSpeaking = false;\n                  // Stop recording and send the audio data\n                  recorder.stop().then(function (_ref2) {\n                    var blob = _ref2.blob;\n                    console.log('Sending audio data');\n                    sendAudioData(blob);\n                    // recorder.clear(); // Uncomment if you want to clear the recorder\n                  });\n                  silenceTimeout = null;\n                }, silenceDuration);\n              }\n            }\n          };\n          startBtn.disabled = true;\n          stopBtn.disabled = false;\n        case 22:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  stopBtn.onclick = /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var _yield$recorder$stop, blob;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          fetch('/stop_speech_script').then(function (response) {\n            return response.text();\n          }).then(function (data) {\n            return console.log(\"Speech-to-text script ended:\", data);\n          })[\"catch\"](function (error) {\n            return console.error(\"Error starting script:\", error);\n          });\n\n          // Stop recording\n          if (!(recorder && isSpeaking)) {\n            _context2.next = 7;\n            break;\n          }\n          _context2.next = 4;\n          return recorder.stop();\n        case 4:\n          _yield$recorder$stop = _context2.sent;\n          blob = _yield$recorder$stop.blob;\n          if (blob && blob.size > 0) {\n            sendAudioData(blob);\n            recorder.stop();\n          }\n        case 7:\n          // Disconnect audio nodes\n          if (scriptProcessor) {\n            scriptProcessor.disconnect();\n          }\n          startBtn.disabled = false;\n          stopBtn.disabled = true;\n          console.log('Recording stopped');\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  function sendAudioData(blob) {\n    // console.log('In audio data');\n\n    if (!blob || blob.size === 0) {\n      console.log('No audio data to send.');\n      return;\n    }\n\n    // Send the audio Blob to your server for saving and conversion\n    // console.log('Starting to save and convert audio data....');\n    var formData = new FormData();\n    formData.append('audio', blob, 'audio.wav');\n    fetch('/save_audio', {\n      // Ensure this matches your route\n      method: 'POST',\n      body: formData\n      // If you implemented API key authentication, include headers here\n      // headers: {\n      //     'Authorization': 'your_api_key_here'\n      // }\n    }).then(function (response) {\n      var contentType = response.headers.get('content-type');\n      if (contentType && contentType.includes('application/json')) {\n        return response.json();\n      } else {\n        return response.text().then(function (text) {\n          throw new Error(text);\n        });\n      }\n    }).then(function (data) {\n      if (data.audio_data) {\n        // console.log('Audio saved and converted successfully:', data);\n\n        // Decode the Base64 audio data\n        var decodedAudio = base64ToArrayBuffer(data.audio_data);\n        // console.log(`Blob size: `, decodedAudio.byteLength);\n\n        // Log the size of the converted audio data\n        // console.log('Converted audio size (bytes):', decodedAudio.byteLength);\n\n        // Send the converted audio data via WebSocket\n        // console.log('Sending converted audio to WebSocket...');\n        ws.send(decodedAudio);\n      } else {\n        console.log('Audio saved successfully:', data);\n      }\n    })[\"catch\"](function (error) {\n      console.error('Error saving audio:', error);\n    });\n  }\n\n  // Helper function to convert Base64 to ArrayBuffer\n  function base64ToArrayBuffer(base64) {\n    var binaryString = window.atob(base64);\n    var len = binaryString.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes.buffer;\n  }\n\n  // Helper function to convert ArrayBuffer to Base64\n  function arrayBufferToBase64(buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    var chunkSize = 0x8000; // 32768\n\n    for (var i = 0; i < len; i += chunkSize) {\n      var chunk = bytes.subarray(i, i + chunkSize);\n      binary += String.fromCharCode.apply(null, chunk);\n    }\n    return btoa(binary);\n  }\n\n  // The checkAnswer function remains the same\n  function checkAnswer(transcribedText) {\n    var currentTime = audioPlayer.currentTime;\n    // console.log('Checking answer...');\n    // console.log('Current audio file time: ', audioPlayer.currentTime)\n    // console.log('On file: ', listType)\n\n    var validWords = [];\n    wordTimeWindows.forEach(function (item) {\n      if (currentTime >= item.startTime && currentTime <= item.endTime) {\n        validWords = validWords.concat(item.words);\n      }\n    });\n    // console.log('Valid words for current time: ', validWords);\n\n    // let wordList = transcribedText.replace(/[^\\w\\s]|_/g, '').trim().split(/\\s+/);\n    // let wordList = transcribedText.replace(/\\./, '').trim().split(/\\s+/); // Clean up the transcript\n    var wordList = transcribedText.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '').trim().split(/\\s+/);\n\n    // console.log('Mapping vocab...');\n\n    wordList = wordList.map(function (word) {\n      var list = lookupTable[listType];\n      var lowerCaseWord = word.toLowerCase();\n      if (list && lowerCaseWord in list) {\n        return list[lowerCaseWord];\n      }\n      return word; // Keep the word unchanged if no match\n    });\n    // console.log('Vocab mapped...');\n\n    console.log('Filled out:', wordList);\n    var allLabels = document.querySelectorAll('label');\n\n    // Loop through each word in the wordList and check if it exists in the dictionary\n    // Only check checkboxes for words that are in validWords\n    wordList.forEach(function (word) {\n      var key = word.toLowerCase();\n      if (validWords.map(function (w) {\n        return w.toLowerCase();\n      }).includes(key)) {\n        if (labelCheckboxMap[key]) {\n          var _labelCheckboxMap$key = labelCheckboxMap[key],\n            checkbox = _labelCheckboxMap$key.checkbox,\n            label = _labelCheckboxMap$key.label;\n          if (!checkbox.checked) {\n            checkbox.checked = true;\n            checkbox.dispatchEvent(new Event('change', {\n              bubbles: true,\n              cancelable: true\n            }));\n            label.classList.add('active'); // Provide visual feedback\n          }\n        }\n      }\n    });\n  }\n\n  // Stop the Node.js script when the user leaves the page\n  window.addEventListener('beforeunload', function () {\n    navigator.sendBeacon('/stop_speech_script');\n    console.log(\"Speech-to-text script stopped\");\n  });\n});","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","consumer","Recorder","listType","document","body","getAttribute","console","log","ws","dwtList1","dwtList2","dwtList3","dwtList4","lookupTable","words","addEventListener","labelCheckboxMap","querySelectorAll","label","checkbox","querySelector","textContent","trim","toLowerCase","wordTimeWindows","map","pair","index","startTime","endTime","fetch","response","text","data","error","startBtn","getElementById","stopBtn","audioPlayer","audioContext","recorder","transcriptionChannel","silenceTimeout","scriptProcessor","isSpeaking","silenceDuration","silenceThreshold","connectWebSocket","WebSocket","onopen","onmessage","event","transcript","JSON","parse","checkAnswer","replace","onerror","concat","onclose","setTimeout","onclick","_callee","stream","source","_callee$","_context","navigator","mediaDevices","getUserMedia","audio","t0","window","AudioContext","webkitAudioContext","numChannels","init","createMediaStreamSource","createScriptProcessor","connect","destination","onaudioprocess","inputData","inputBuffer","getChannelData","total","Math","abs","average","clearTimeout","start","_ref2","blob","sendAudioData","disabled","_callee2","_yield$recorder$stop","_callee2$","_context2","size","disconnect","formData","FormData","append","contentType","headers","get","includes","json","audio_data","decodedAudio","base64ToArrayBuffer","send","base64","binaryString","atob","len","bytes","Uint8Array","charCodeAt","buffer","arrayBufferToBase64","binary","byteLength","chunkSize","chunk","subarray","String","fromCharCode","btoa","transcribedText","currentTime","validWords","item","wordList","split","word","list","lowerCaseWord","allLabels","key","w","_labelCheckboxMap$key","checked","dispatchEvent","Event","bubbles","cancelable","classList","add","sendBeacon"],"sources":["/home/jamtam2/workspace/dichotics/app/javascript/packs/transcription.js"],"sourcesContent":["// app/javascript/packs/transcription.js\n\n// Import necessary modules\nimport consumer from \"../channels/consumer\" // Import the ActionCable consumer\nimport Recorder from 'recorder-js';\nconst listType = document.body.getAttribute('data-list-type')\nconsole.log('In page: ', listType)\nlet ws; \n\n\n// Define lookup objects for each list\nconst dwtList1 = {\n    'y': 'Why',\n    'four': 'For',\n    'pick': 'Pig',\n    'rome': 'Room',\n    'around': 'Round',\n    'toe': 'Tow',\n    'anten': 'Tan',\n    'can': 'Tan',\n    'broom': 'Room',\n    'thor': 'Store',\n    'blip': 'Lip',\n    'ball': 'Fall',\n    'line': 'Vine',\n    'net': 'Bet',\n    'flip': 'Lip',\n    'po': 'Tow',\n    'hake': 'Cake',\n    'bake': 'Cake',\n    'bat': 'That',\n    'home': 'Comb',\n    'whack': 'Quack',\n    'hoop': 'Soap',\n    'by': 'Buy',\n    'she': 'Sheep',\n    'mine': 'Vine',\n    'take': 'Cake',\n    'black': 'Quack',\n    'qhiz': 'Quiz',\n    'blast': 'Glass',\n    'collapse': 'Glass',\n    'piece': 'Teeth',\n    'li': 'Why',\n    'fawn': 'Fun',\n    'dog': 'Dad',\n    'ground': 'Round',\n    'haroo': 'Room',\n    'both': 'Booth',\n    'ten': 'Pen',\n    'ohm': 'Comb',\n    'com': 'Comb',\n    'bold': 'Old',\n    'and': 'Hand',\n    'amp': 'Camp',\n    'font': 'Want',\n    'full': 'Fall',\n    'fine': 'Vine',\n    'og': 'Old',\n    'brown': 'Round',\n    'mime': 'Vine',\n    'bets': 'Bet'\n};\n\nconst dwtList2 = {\n    'form': 'Farm',\n    'ben': 'Den',\n    'hoarse': 'Horse',\n    'moreth': 'North',\n    'butt': 'But',\n    'cag': 'Tag',\n    'fall': 'Ball',\n    'ow': 'How',\n    'freak': 'Greek',\n    'moon': 'Spoon',\n    'coin': 'Corn',\n    'horn': 'Corn',\n    'boon': 'Spoon',\n    'born': 'Corn',\n    'beer': 'Year',\n    'bread': 'Red',\n    'bred': 'Red',\n    'po': 'Corn',\n    'gear': 'Year',\n    'ear': 'Year',\n    'blick': 'Lick',\n    'hat': 'Pat',\n    'corrupt': 'Rough',\n    'then': 'Den',\n    'art': 'Heart',\n    'all': 'Ball',\n    'hot': 'Pot',\n    'clothes': 'Close',\n    'sop': 'Stop',\n    'rink': 'Ring',\n    'house': 'How',\n    'am': 'Ham',\n    'l': 'Bell',\n    'fame': 'Same',\n    'read': 'Red',\n    'night': 'Nice',\n    'mice': 'Nice',\n    'rank': 'Ring',\n    'force': 'Horse',\n    'they': 'Day'\n};\n\nconst dwtList3 = {\n    'rem': 'Rim',\n    'c': 'See',\n    'to': 'Two',\n    'too': 'Two',\n    'orc': 'Fork',\n    'life': 'Knife',\n    'son': 'Sun',\n    'bit': 'Bite',\n    'byte': 'Bite',\n    'host': 'Post',\n    'hook': 'Cook',\n    'par': 'Car',\n    'bat': 'Bath',\n    'pug': 'Hug',\n    'at': 'Mat',\n    'tie': 'Pie',\n    'keen': 'Key',\n    'bass': 'Bath',\n    'bare': 'Bear',\n    'bone': 'Phone',\n    'pillant': 'Pill',\n    'heal': 'Heel',\n    'third': 'Bird'\n};\n\nconst dwtList4 = {\n    'wear': 'Where',\n    'knead': 'Need',\n    'our': 'Bar',\n    'ban': 'Van',\n    'ed': 'Bed',\n    'pipe': 'Type',\n    'brain': 'Rain',\n    'how': 'Cow',\n    'lane': 'Plain',\n    'plane': 'Plain',\n    'reign': 'Rain',\n    'blaine': 'Plain',\n    'eat': 'Neat',\n    'lane?': 'Plain'\n};\n\n// Create a map for easy lookup based on listType\nconst lookupTable = {\n    'dwt_list1': dwtList1,\n    'dwt_list2': dwtList2,\n    'dwt_list3': dwtList3,\n    'dwt_list4': dwtList4\n};\n\n// import { SoxRecording } from './sox.js'; // Import SoxRecording\n  // Access the words array passed from the ERB template\nlet words; \n    if (listType === \"dwt_list1\"){\n     words = [\n        [\"Fun\", \"Pig\"],\n        [\"Vine\", \"Sheep\"],\n        [\"Cake\", \"Buy\"],\n        [\"Round\", \"Storm\"],\n        [\"Say\", \"Tan\"],\n        [\"Yes\", \"Fast\"],\n        [\"Pen\", \"Most\"],\n        [\"Bet\", \"One\"],\n        [\"Green\", \"Booth\"],\n        [\"Store\", \"Glass\"],\n        [\"Soap\", \"Teeth\"],\n        [\"Bring\", \"Share\"],\n        [\"Rug\", \"Book\"],\n        [\"Want\", \"Soft\"],\n        [\"Tow\", \"Kite\"],\n        [\"Why\", \"Quack\"],\n        [\"Comb\", \"For\"],\n        [\"That\", \"Love\"],\n        [\"Bug\", \"Wet\"],\n        [\"Quiz\", \"Juice\"],\n        [\"Camp\", \"Light\"],\n        [\"Hand\", \"Goose\"],\n        [\"Lip\", \"Dad\"],\n        [\"Fall\", \"Room\"],\n        [\"Old\", \"Chef\"]\n        ]\n  }\n    else if (listType === \"dwt_list2\"){\n         words = [\n            [\"Bell\", \"Farm\"],\n            [\"Same\", \"Cast\"],\n            [\"Child\", \"Bowl\"],\n            [\"How\", \"Plug\"],\n            [\"Lick\", \"Top\"],\n            [\"Watch\", \"Horse\"],\n            [\"Ham\", \"Day\"],\n            [\"When\", \"Truck\"],\n            [\"Drink\", \"Rhyme\"],\n            [\"Sleep\", \"Yard\"],\n            [\"Greek\", \"Stop\"],\n            [\"Den\", \"Red\"],\n            [\"Song\", \"Math\"],\n            [\"Dog\", \"More\"],\n            [\"Spoon\", \"North\"],\n            [\"But\", \"Chip\"],\n            [\"Year\", \"Nice\"],\n            [\"Cloud\", \"Make\"],\n            [\"Tag\", \"Heart\"],\n            [\"Pot\", \"Ball\"],\n            [\"Door\", \"Set\"],\n            [\"Cup\", \"Pat\"],\n            [\"Close\", \"Shine\"],\n            [\"Ring\", \"Test\"],\n            [\"Rough\", \"Corn\"]\n            ]\n\n    }\n    else if (listType === \"dwt_list3\"){\n         words = [\n            [\"Post\", \"Rim\"],\n            [\"Two\", \"Look\"],\n            [\"Cook\", \"Bite\"],\n            [\"Car\", \"Lamp\"],\n            [\"Skip\", \"Kiss\"],\n            [\"Dream\", \"Floor\"],\n            [\"Phone\", \"Damp\"],\n            [\"Sit\", \"Gold\"],\n            [\"Bear\", \"Sun\"],\n            [\"Knife\", \"Bath\"],\n            [\"Leg\", \"Milk\"],\n            [\"Young\", \"Brush\"],\n            [\"See\", \"Law\"],\n            [\"Cat\", \"Hug\"],\n            [\"Grass\", \"Square\"],\n            [\"Weird\", \"Globe\"],\n            [\"Bird\", \"Fork\"],\n            [\"Bus\", \"Swing\"],\n            [\"Snow\", \"Race\"],\n            [\"Moon\", \"Wall\"],\n            [\"Heel\", \"Five\"],\n            [\"Mud\", \"Sheet\"],\n            [\"Mat\", \"Nail\"],\n            [\"Gum\", \"Pie\"],\n            [\"Pill\", \"Key\"]\n            ]\n\n    }\n    else if (listType === \"dwt_list4\"){\n         words = [\n            [\"Bar\", \"Head\"],\n            [\"Box\", \"Shelf\"],\n            [\"Will\", \"Pan\"],\n            [\"Work\", \"Dive\"],\n            [\"Knit\", \"Where\"],\n            [\"Down\", \"Vase\"],\n            [\"Food\", \"Judge\"],\n            [\"Gas\", \"Sand\"],\n            [\"Van\", \"Game\"],\n            [\"Joke\", \"Need\"],\n            [\"New\", \"Late\"],\n            [\"Plate\", \"Rope\"],\n            [\"Jar\", \"Fish\"],\n            [\"First\", \"Black\"],\n            [\"Voice\", \"Rose\"],\n            [\"Bed\", \"Catch\"],\n            [\"Couch\", \"Best\"],\n            [\"Type\", \"Big\"],\n            [\"Rain\", \"Mouse\"],\n            [\"Cow\", \"Her\"],\n            [\"Neat\", \"Rock\"],\n            [\"Sing\", \"Plain\"],\n            [\"Learn\", \"Dark\"],\n            [\"Yell\", \"White\"],\n            [\"Help\", \"Knee\"]\n            ]\n    }\n//   console.log('Words array:', words);\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    // Create a dictionary of labels and checkboxes\n    let labelCheckboxMap = {};\n    document.querySelectorAll('label').forEach((label) => {\n        let checkbox = label.querySelector('input[type=\"checkbox\"]');\n        if (checkbox) {\n            labelCheckboxMap[label.textContent.trim().toLowerCase()] = {\n                checkbox: checkbox,\n                label: label\n            };\n        }\n    });\n    // console.log('created the label checkbox map: ', labelCheckboxMap)\n    \n      // Create wordTimeWindows\n  let wordTimeWindows = words.map(function (pair, index) {\n    let startTime = index * 5 +5; // Each word pair starts every 5 seconds\n    let endTime = startTime + 15; // Each word pair is acceptable for 15 seconds\n    return {\n      words: pair,\n      startTime: startTime,\n      endTime: endTime,\n    };\n  });\n//   console.log('wordTimeWindows:', wordTimeWindows);\n\n\n    // Start the Node.js script when the page loads\n    fetch('/start_speech_script')  \n      .then(response => response.text())\n      .then(data => console.log(\"Speech-to-text script started:\", data))\n      .catch(error => console.error(\"Error starting script:\", error));\n\n\n    const startBtn = document.getElementById('startBtn');\n    const stopBtn = document.getElementById('stopBtn');\n    // const ws = new WebSocket('wss://www.audiadichotics.com');\n    const audioPlayer = document.getElementById('audioPlayer');\n    let audioContext;\n    let recorder;\n    let transcriptionChannel = null;\n\n    // Silence detection variables\n    let silenceTimeout;\n    let scriptProcessor;\n    let isSpeaking = false;\n    const silenceDuration = 1000; // 1 second in milliseconds\n    const silenceThreshold = 0.01; // Adjust this threshold as needed\n    function connectWebSocket() {\n        ws = new WebSocket('wss://speechtotextserver-be5e42377a32.herokuapp.com');\n        \n        ws.onopen = () => {\n          console.log('WebSocket connection established');\n        };\n      \n        ws.onmessage = function(event) {\n          const transcript = JSON.parse(event.data);\n          if (transcript.text) {\n            checkAnswer(transcript.text.replace(/\\./, ''));\n            console.log('Transcript received:', transcript.text);\n          }\n        };\n      \n        ws.onerror = (error) => {\n          console.error(`WebSocket error: ${error}`);\n        };\n      \n        ws.onclose = () => {\n          console.log('WebSocket connection closed. Reconnecting...');\n          setTimeout(connectWebSocket, 5000); // Attempt reconnection after 5 seconds\n        };\n      }\n      \n      \n    // Initial connection\n    connectWebSocket();\n\n\n    startBtn.onclick = async () => {\n        // Request microphone access\n        let stream;\n        try {\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            console.log('Stream obtained:', stream);\n        } catch (err) {\n            console.error('Error accessing microphone:', err);\n            return;\n        }\n        \n\n        // Initialize Recorder.js\n        audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        recorder = new Recorder(audioContext, { numChannels: 1 });\n        await recorder.init(stream);\n\n        // Set up the audio analyzer for silence detection\n        const source = audioContext.createMediaStreamSource(stream);\n        scriptProcessor = audioContext.createScriptProcessor(4096, 1, 1);\n        source.connect(scriptProcessor);\n        scriptProcessor.connect(audioContext.destination);\n\n        scriptProcessor.onaudioprocess = function (event) {\n            const inputData = event.inputBuffer.getChannelData(0);\n            let total = 0;\n\n            // Calculate the average amplitude\n            for (let i = 0; i < inputData.length; i++) {\n                total += Math.abs(inputData[i]);\n            }\n            const average = total / inputData.length;\n\n            // Check if the average amplitude is above the silence threshold\n            if (average > silenceThreshold) {\n                // Audio is above the threshold; reset the silence timer\n                if (silenceTimeout) {\n                    clearTimeout(silenceTimeout);\n                    silenceTimeout = null;\n                }\n                if (!isSpeaking) {\n                    console.log('Started speaking');\n                    isSpeaking = true;\n                    // Start recording when the user starts speaking\n                    recorder.start();\n                }\n            } else {\n                // Audio is below the threshold\n                if (!silenceTimeout && isSpeaking) {\n                    silenceTimeout = setTimeout(() => {\n                        // Silence has been detected for the specified duration\n                        console.log('Stopped speaking');\n                        isSpeaking = false;\n                        // Stop recording and send the audio data\n                        recorder.stop().then(({ blob }) => {\n                            console.log('Sending audio data')\n                            sendAudioData(blob);\n                            // recorder.clear(); // Uncomment if you want to clear the recorder\n                        });\n                        silenceTimeout = null;\n                    }, silenceDuration);\n                }\n            }\n        };\n\n        startBtn.disabled = true;\n        stopBtn.disabled = false;\n    };\n\n    stopBtn.onclick = async () => {\n        fetch('/stop_speech_script')  \n        .then(response => response.text())\n        .then(data => console.log(\"Speech-to-text script ended:\", data))\n        .catch(error => console.error(\"Error starting script:\", error));\n  \n        // Stop recording\n        if (recorder && isSpeaking) {\n            const { blob } = await recorder.stop();\n            if (blob && blob.size > 0) {\n                sendAudioData(blob);\n                recorder.stop();\n            }\n        }\n\n        // Disconnect audio nodes\n        if (scriptProcessor) {\n            scriptProcessor.disconnect();\n        }\n\n\n        startBtn.disabled = false;\n        stopBtn.disabled = true;\n        console.log('Recording stopped');\n    };\n\n    function sendAudioData(blob) {\n        // console.log('In audio data');\n    \n        if (!blob || blob.size === 0) {\n            console.log('No audio data to send.');\n            return;\n        }\n    \n        // Send the audio Blob to your server for saving and conversion\n        // console.log('Starting to save and convert audio data....');\n        const formData = new FormData();\n        formData.append('audio', blob, 'audio.wav');\n    \n        fetch('/save_audio', {  // Ensure this matches your route\n            method: 'POST',\n            body: formData\n            // If you implemented API key authentication, include headers here\n            // headers: {\n            //     'Authorization': 'your_api_key_here'\n            // }\n        })\n        .then(response => {\n            const contentType = response.headers.get('content-type');\n            if (contentType && contentType.includes('application/json')) {\n                return response.json();\n            } else {\n                return response.text().then(text => { throw new Error(text) });\n            }\n        })\n        .then(data => {\n            if (data.audio_data) {\n                // console.log('Audio saved and converted successfully:', data);\n    \n                // Decode the Base64 audio data\n                const decodedAudio = base64ToArrayBuffer(data.audio_data);\n                // console.log(`Blob size: `, decodedAudio.byteLength);\n\n                // Log the size of the converted audio data\n                // console.log('Converted audio size (bytes):', decodedAudio.byteLength);\n    \n                // Send the converted audio data via WebSocket\n                // console.log('Sending converted audio to WebSocket...');\n                ws.send(decodedAudio);\n            } else {\n                console.log('Audio saved successfully:', data);\n            }\n        })\n        .catch(error => {\n            console.error('Error saving audio:', error);\n        });\n    }\n    \n    // Helper function to convert Base64 to ArrayBuffer\n    function base64ToArrayBuffer(base64) {\n        const binaryString = window.atob(base64);\n        const len = binaryString.length;\n        const bytes = new Uint8Array(len);\n        for (let i = 0; i < len; i++) {\n            bytes[i] = binaryString.charCodeAt(i);\n        }\n        return bytes.buffer;\n    }\n    \n    // Helper function to convert ArrayBuffer to Base64\n    function arrayBufferToBase64(buffer) {\n        let binary = '';\n        const bytes = new Uint8Array(buffer);\n        const len = bytes.byteLength;\n        const chunkSize = 0x8000; // 32768\n\n        for (let i = 0; i < len; i += chunkSize) {\n            const chunk = bytes.subarray(i, i + chunkSize);\n            binary += String.fromCharCode.apply(null, chunk);\n        }\n\n        return btoa(binary);\n    }\n\n    // The checkAnswer function remains the same\n    function checkAnswer(transcribedText) {\n        let currentTime = audioPlayer.currentTime\n        // console.log('Checking answer...');\n        // console.log('Current audio file time: ', audioPlayer.currentTime)\n        // console.log('On file: ', listType)\n\n        let validWords = [];\n\n        wordTimeWindows.forEach(function (item) {\n          if (\n            currentTime >= item.startTime &&\n            currentTime <= item.endTime\n          ) {\n            validWords = validWords.concat(item.words);\n          }\n        });\n        // console.log('Valid words for current time: ', validWords);\n\n        // let wordList = transcribedText.replace(/[^\\w\\s]|_/g, '').trim().split(/\\s+/);\n        // let wordList = transcribedText.replace(/\\./, '').trim().split(/\\s+/); // Clean up the transcript\n        let wordList = transcribedText.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '').trim().split(/\\s+/);\n\n        // console.log('Mapping vocab...');\n        \n        wordList = wordList.map(word => {\n            const list = lookupTable[listType];\n            const lowerCaseWord = word.toLowerCase();\n\n            if (list && lowerCaseWord in list){\n                return list[lowerCaseWord];\n            }\n            return word; // Keep the word unchanged if no match\n        });\n        // console.log('Vocab mapped...');\n        \n        console.log('Filled out:', wordList);\n        let allLabels = document.querySelectorAll('label');\n\n    // Loop through each word in the wordList and check if it exists in the dictionary\n    // Only check checkboxes for words that are in validWords\n    wordList.forEach((word) => {\n        let key = word.toLowerCase();\n        if (validWords.map((w) => w.toLowerCase()).includes(key)) {\n          if (labelCheckboxMap[key]) {\n            let { checkbox, label } = labelCheckboxMap[key];\n            if (!checkbox.checked) {\n              checkbox.checked = true;\n              checkbox.dispatchEvent(\n                new Event('change', {\n                  bubbles: true,\n                  cancelable: true,\n                })\n              );\n              label.classList.add('active'); // Provide visual feedback\n            }\n          }\n        }\n      });\n    }\n  \n        // Stop the Node.js script when the user leaves the page\n        window.addEventListener('beforeunload', function() {\n            navigator.sendBeacon('/stop_speech_script');\n            console.log(\"Speech-to-text script stopped\");\n          });\n      \n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}